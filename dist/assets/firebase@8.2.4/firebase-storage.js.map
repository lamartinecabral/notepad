From: <Saved by Blink>
Snapshot-Content-Location: https://www.gstatic.com/firebasejs/8.2.4/firebase-storage.js.map
Subject: 
Date: Sun, 16 Oct 2022 01:35:51 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--6g5r6xjBFQwLI980K2Ewru0F67F6YyE6GuQOlEITTx----"


------MultipartBoundary--6g5r6xjBFQwLI980K2Ewru0F67F6YyE6GuQOlEITTx----
Content-Type: text/html
Content-ID: <frame-81697850C5BC9AAEB5CD11574355C90D@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.gstatic.com/firebasejs/8.2.4/firebase-storage.js.map

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3Dwindows-1252"></head><body>{"version":3,"file":"firebase-storage.js","so=
urces":["../../node_modules/tslib/tslib.es6.js","../util/src/errors.ts","..=
/component/src/component.ts","../storage/src/implementation/constants.ts","=
../storage/src/implementation/error.ts","../storage/src/implementation/stri=
ng.ts","../storage/src/implementation/taskenums.ts","../storage/src/impleme=
ntation/xhrio.ts","../storage/src/implementation/xhrio_network.ts","../stor=
age/src/implementation/xhriopool.ts","../storage/src/implementation/type.ts=
","../storage/src/implementation/fs.ts","../storage/src/implementation/blob=
.ts","../storage/src/implementation/location.ts","../storage/src/implementa=
tion/json.ts","../storage/src/implementation/path.ts","../storage/src/imple=
mentation/url.ts","../storage/src/implementation/metadata.ts","../storage/s=
rc/implementation/list.ts","../storage/src/implementation/requestinfo.ts","=
../storage/src/implementation/requests.ts","../storage/src/implementation/o=
bserver.ts","../storage/src/implementation/async.ts","../storage/src/task.t=
s","../storage/src/reference.ts","../storage/compat/tasksnapshot.ts","../st=
orage/compat/task.ts","../storage/compat/list.ts","../storage/compat/refere=
nce.ts","../storage/src/implementation/failrequest.ts","../storage/src/impl=
ementation/request.ts","../storage/src/implementation/backoff.ts","../stora=
ge/src/service.ts","../storage/compat/service.ts","../storage/compat/index.=
ts"],"sourcesContent":["/*! ***********************************************=
******************************\r\nCopyright (c) Microsoft Corporation.\r\n\=
r\nPermission to use, copy, modify, and/or distribute this software for any=
\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS P=
ROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO=
 THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND F=
ITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n=
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM=
\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGE=
NCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE U=
SE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n*********************************=
******************************************** */\r\n/* global Reflect, Promi=
se */\r\n\r\nvar extendStatics =3D function(d, b) {\r\n    extendStatics =
=3D Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array=
 &amp;&amp; function (d, b) { d.__proto__ =3D b; }) ||\r\n        function =
(d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] =3D b[p]; };\r\n   =
 return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {=
\r\n    extendStatics(d, b);\r\n    function __() { this.constructor =3D d;=
 }\r\n    d.prototype =3D b =3D=3D=3D null ? Object.create(b) : (__.prototy=
pe =3D b.prototype, new __());\r\n}\r\n\r\nexport var __assign =3D function=
() {\r\n    __assign =3D Object.assign || function __assign(t) {\r\n       =
 for (var s, i =3D 1, n =3D arguments.length; i &lt; n; i++) {\r\n         =
   s =3D arguments[i];\r\n            for (var p in s) if (Object.prototype=
.hasOwnProperty.call(s, p)) t[p] =3D s[p];\r\n        }\r\n        return t=
;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexpor=
t function __rest(s, e) {\r\n    var t =3D {};\r\n    for (var p in s) if (=
Object.prototype.hasOwnProperty.call(s, p) &amp;&amp; e.indexOf(p) &lt; 0)\=
r\n        t[p] =3D s[p];\r\n    if (s !=3D null &amp;&amp; typeof Object.g=
etOwnPropertySymbols =3D=3D=3D \"function\")\r\n        for (var i =3D 0, p=
 =3D Object.getOwnPropertySymbols(s); i &lt; p.length; i++) {\r\n          =
  if (e.indexOf(p[i]) &lt; 0 &amp;&amp; Object.prototype.propertyIsEnumerab=
le.call(s, p[i]))\r\n                t[p[i]] =3D s[p[i]];\r\n        }\r\n =
   return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key=
, desc) {\r\n    var c =3D arguments.length, r =3D c &lt; 3 ? target : desc=
 =3D=3D=3D null ? desc =3D Object.getOwnPropertyDescriptor(target, key) : d=
esc, d;\r\n    if (typeof Reflect =3D=3D=3D \"object\" &amp;&amp; typeof Re=
flect.decorate =3D=3D=3D \"function\") r =3D Reflect.decorate(decorators, t=
arget, key, desc);\r\n    else for (var i =3D decorators.length - 1; i &gt;=
=3D 0; i--) if (d =3D decorators[i]) r =3D (c &lt; 3 ? d(r) : c &gt; 3 ? d(=
target, key, r) : d(target, key)) || r;\r\n    return c &gt; 3 &amp;&amp; r=
 &amp;&amp; Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport fu=
nction __param(paramIndex, decorator) {\r\n    return function (target, key=
) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __met=
adata(metadataKey, metadataValue) {\r\n    if (typeof Reflect =3D=3D=3D \"o=
bject\" &amp;&amp; typeof Reflect.metadata =3D=3D=3D \"function\") return R=
eflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __=
awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) {=
 return value instanceof P ? value : new P(function (resolve) { resolve(val=
ue); }); }\r\n    return new (P || (P =3D Promise))(function (resolve, reje=
ct) {\r\n        function fulfilled(value) { try { step(generator.next(valu=
e)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try=
 { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n     =
   function step(result) { result.done ? resolve(result.value) : adopt(resu=
lt.value).then(fulfilled, rejected); }\r\n        step((generator =3D gener=
ator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexpo=
rt function __generator(thisArg, body) {\r\n    var _ =3D { label: 0, sent:=
 function() { if (t[0] &amp; 1) throw t[1]; return t[1]; }, trys: [], ops: =
[] }, f, y, t, g;\r\n    return g =3D { next: verb(0), \"throw\": verb(1), =
\"return\": verb(2) }, typeof Symbol =3D=3D=3D \"function\" &amp;&amp; (g[S=
ymbol.iterator] =3D function() { return this; }), g;\r\n    function verb(n=
) { return function (v) { return step([n, v]); }; }\r\n    function step(op=
) {\r\n        if (f) throw new TypeError(\"Generator is already executing.=
\");\r\n        while (_) try {\r\n            if (f =3D 1, y &amp;&amp; (t=
 =3D op[0] &amp; 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t =3D y[\"re=
turn\"]) &amp;&amp; t.call(y), 0) : y.next) &amp;&amp; !(t =3D t.call(y, op=
[1])).done) return t;\r\n            if (y =3D 0, t) op =3D [op[0] &amp; 2,=
 t.value];\r\n            switch (op[0]) {\r\n                case 0: case =
1: t =3D op; break;\r\n                case 4: _.label++; return { value: o=
p[1], done: false };\r\n                case 5: _.label++; y =3D op[1]; op =
=3D [0]; continue;\r\n                case 7: op =3D _.ops.pop(); _.trys.po=
p(); continue;\r\n                default:\r\n                    if (!(t =
=3D _.trys, t =3D t.length &gt; 0 &amp;&amp; t[t.length - 1]) &amp;&amp; (o=
p[0] =3D=3D=3D 6 || op[0] =3D=3D=3D 2)) { _ =3D 0; continue; }\r\n         =
           if (op[0] =3D=3D=3D 3 &amp;&amp; (!t || (op[1] &gt; t[0] &amp;&a=
mp; op[1] &lt; t[3]))) { _.label =3D op[1]; break; }\r\n                   =
 if (op[0] =3D=3D=3D 6 &amp;&amp; _.label &lt; t[1]) { _.label =3D t[1]; t =
=3D op; break; }\r\n                    if (t &amp;&amp; _.label &lt; t[2])=
 { _.label =3D t[2]; _.ops.push(op); break; }\r\n                    if (t[=
2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n        =
    }\r\n            op =3D body.call(thisArg, _);\r\n        } catch (e) {=
 op =3D [6, e]; y =3D 0; } finally { f =3D t =3D 0; }\r\n        if (op[0] =
&amp; 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };=
\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n   =
 if (k2 =3D=3D=3D undefined) k2 =3D k;\r\n    o[k2] =3D m[k];\r\n}\r\n\r\ne=
xport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !=
=3D=3D \"default\" &amp;&amp; !exports.hasOwnProperty(p)) exports[p] =3D m[=
p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s =3D typeof Symbo=
l =3D=3D=3D \"function\" &amp;&amp; Symbol.iterator, m =3D s &amp;&amp; o[s=
], i =3D 0;\r\n    if (m) return m.call(o);\r\n    if (o &amp;&amp; typeof =
o.length =3D=3D=3D \"number\") return {\r\n        next: function () {\r\n =
           if (o &amp;&amp; i &gt;=3D o.length) o =3D void 0;\r\n          =
  return { value: o &amp;&amp; o[i++], done: !o };\r\n        }\r\n    };\r=
\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterat=
or is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    va=
r m =3D typeof Symbol =3D=3D=3D \"function\" &amp;&amp; o[Symbol.iterator];=
\r\n    if (!m) return o;\r\n    var i =3D m.call(o), r, ar =3D [], e;\r\n =
   try {\r\n        while ((n =3D=3D=3D void 0 || n-- &gt; 0) &amp;&amp; !(=
r =3D i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e =
=3D { error: error }; }\r\n    finally {\r\n        try {\r\n            if=
 (r &amp;&amp; !r.done &amp;&amp; (m =3D i[\"return\"])) m.call(i);\r\n    =
    }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return a=
r;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar =3D [], i =
=3D 0; i &lt; arguments.length; i++)\r\n        ar =3D ar.concat(__read(arg=
uments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays()=
 {\r\n    for (var s =3D 0, i =3D 0, il =3D arguments.length; i &lt; il; i+=
+) s +=3D arguments[i].length;\r\n    for (var r =3D Array(s), k =3D 0, i =
=3D 0; i &lt; il; i++)\r\n        for (var a =3D arguments[i], j =3D 0, jl =
=3D a.length; j &lt; jl; j++, k++)\r\n            r[k] =3D a[j];\r\n    ret=
urn r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanc=
eof __await ? (this.v =3D v, this) : new __await(v);\r\n}\r\n\r\nexport fun=
ction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol=
.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\=
");\r\n    var g =3D generator.apply(thisArg, _arguments || []), i, q =3D [=
];\r\n    return i =3D {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"=
), i[Symbol.asyncIterator] =3D function () { return this; }, i;\r\n    func=
tion verb(n) { if (g[n]) i[n] =3D function (v) { return new Promise(functio=
n (a, b) { q.push([n, v, a, b]) &gt; 1 || resume(n, v); }); }; }\r\n    fun=
ction resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e);=
 } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve=
(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function f=
ulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { =
resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shif=
t(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __as=
yncDelegator(o) {\r\n    var i, p;\r\n    return i =3D {}, verb(\"next\"), =
verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iter=
ator] =3D function () { return this; }, i;\r\n    function verb(n, f) { i[n=
] =3D o[n] ? function (v) { return (p =3D !p) ? { value: __await(o[n](v)), =
done: n =3D=3D=3D \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport =
function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new Typ=
eError(\"Symbol.asyncIterator is not defined.\");\r\n    var m =3D o[Symbol=
.asyncIterator], i;\r\n    return m ? m.call(o) : (o =3D typeof __values =
=3D=3D=3D \"function\" ? __values(o) : o[Symbol.iterator](), i =3D {}, verb=
(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] =3D =
function () { return this; }, i);\r\n    function verb(n) { i[n] =3D o[n] &=
amp;&amp; function (v) { return new Promise(function (resolve, reject) { v =
=3D o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    func=
tion settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { =
resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function _=
_makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Obje=
ct.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw =3D=
 raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod=
) {\r\n    if (mod &amp;&amp; mod.__esModule) return mod;\r\n    var result=
 =3D {};\r\n    if (mod !=3D null) for (var k in mod) if (Object.hasOwnProp=
erty.call(mod, k)) result[k] =3D mod[k];\r\n    result.default =3D mod;\r\n=
    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n  =
  return (mod &amp;&amp; mod.__esModule) ? mod : { default: mod };\r\n}\r\n=
\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    i=
f (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted =
to get private field on non-instance\");\r\n    }\r\n    return privateMap.=
get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver,=
 privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        th=
row new TypeError(\"attempted to set private field on non-instance\");\r\n =
   }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n"=
,"/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the=
 Apache License, Version 2.0 (the \"License\");\n * you may not use this fi=
le except in compliance with the License.\n * You may obtain a copy of the =
License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unl=
ess required by applicable law or agreed to in writing, software\n * distri=
buted under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT W=
ARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the=
 License for the specific language governing permissions and\n * limitation=
s under the License.\n */\n/**\n * @fileoverview Standardized Firebase Erro=
r.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe cod=
es\n *   type Err =3D\n *     'unknown' |\n *     'object-not-found'\n *   =
  ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {s=
tring}\n *   var Err =3D {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_F=
OUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<err, string=3D"=
"> =3D {\n *     'generic-error': \"Unknown error\",\n *     'file-not-foun=
d': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe funct=
ion - must pass a valid error code as param.\n *   let error =3D new ErrorF=
actory<err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.=
create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND,=
 {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.=
txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.messag=
e =3D=3D=3D \"Could not find file: foo.txt.\");\n *     if (e.code =3D=3D=
=3D 'service/file-not-found') {\n *       console.log(\"Could not read file=
: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<errorcode=
 extends=3D"" string=3D""> =3D {\n  readonly [K in ErrorCode]: string;\n};\=
n\nconst ERROR_NAME =3D 'FirebaseError';\n\nexport interface StringLike {\n=
  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: =
unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-=
US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\ne=
xport class FirebaseError extends Error {\n  readonly name =3D ERROR_NAME;\=
n\n  constructor(\n    readonly code: string,\n    message: string,\n    pu=
blic customData?: Record<string, unknown=3D"">\n  ) {\n    super(message);\=
n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/=
blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-ma=
p-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototy=
pe);\n\n    // Maintains proper stack trace for where our error was thrown.=
\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      E=
rror.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}=
\n\nexport class ErrorFactory&lt;\n  ErrorCode extends string,\n  ErrorPara=
ms extends { readonly [K in ErrorCode]?: ErrorData } =3D {}\n&gt; {\n  cons=
tructor(\n    private readonly service: string,\n    private readonly servi=
ceName: string,\n    private readonly errors: ErrorMap<errorcode>\n  ) {}\n=
\n  create<k extends=3D"" errorcode=3D"">(\n    code: K,\n    ...data: K ex=
tends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    =
const customData =3D (data[0] as ErrorData) || {};\n    const fullCode =3D =
`${this.service}/${code}`;\n    const template =3D this.errors[code];\n\n  =
  const message =3D template ? replaceTemplate(template, customData) : 'Err=
or';\n    // Service Name: Error message (service/code).\n    const fullMes=
sage =3D `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const err=
or =3D new FirebaseError(fullCode, fullMessage, customData);\n\n    return =
error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorDat=
a): string {\n  return template.replace(PATTERN, (_, key) =3D&gt; {\n    co=
nst value =3D data[key];\n    return value !=3D null ? String(value) : `&lt=
;${key}?&gt;`;\n  });\n}\n\nconst PATTERN =3D /\\{\\$([^}]+)}/g;\n","/**\n =
* @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache =
License, Version 2.0 (the \"License\");\n * you may not use this file excep=
t in compliance with the License.\n * You may obtain a copy of the License =
at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless requ=
ired by applicable law or agreed to in writing, software\n * distributed un=
der the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIE=
S OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License=
 for the specific language governing permissions and\n * limitations under =
the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  Co=
mponentType,\n  Dictionary,\n  Name\n} from './types';\n\n/**\n * Component=
 for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Compon=
ent<t extends=3D"" name=3D"Name"> {\n  multipleInstances =3D false;\n  /**\=
n   * Properties to be added to the service namespace\n   */\n  serviceProp=
s: Dictionary =3D {};\n\n  instantiationMode =3D InstantiationMode.LAZY;\n\=
n  /**\n   *\n   * @param name The public service name, e.g. app, auth, fir=
estore, database\n   * @param instanceFactory Service factory responsible f=
or creating the public interface\n   * @param type whether the service prov=
ided by the component is public or private\n   */\n  constructor(\n    read=
only name: T,\n    readonly instanceFactory: InstanceFactory<t>,\n    reado=
nly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: Instantiati=
onMode): this {\n    this.instantiationMode =3D mode;\n    return this;\n  =
}\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.m=
ultipleInstances =3D multipleInstances;\n    return this;\n  }\n\n  setServ=
iceProps(props: Dictionary): this {\n    this.serviceProps =3D props;\n    =
return this;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *=
\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * =
you may not use this file except in compliance with the License.\n * You ma=
y obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/=
LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writi=
ng, software\n * distributed under the License is distributed on an \"AS IS=
\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express =
or implied.\n * See the License for the specific language governing permiss=
ions and\n * limitations under the License.\n */\n/**\n * @fileoverview Con=
stants used in the Firebase Storage library.\n */\n\n/**\n * Domain name fo=
r firebase storage.\n */\nexport const DEFAULT_HOST =3D 'firebasestorage.go=
ogleapis.com';\n\n/**\n * The key in Firebase config json for the storage b=
ucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY =3D 'storageBucket';\n\=
n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n =
*/\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME =3D 2 * 60 * 1000;\n\n/**=
\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_=
MAX_UPLOAD_RETRY_TIME =3D 10 * 60 * 1000;\n\n/**\n * This is the value of N=
umber.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to us=
e it directly.\n */\nexport const MIN_SAFE_INTEGER =3D -9007199254740991;\n=
","import { FirebaseError } from '@firebase/util';\n/**\n * @license\n * Co=
pyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version =
2.0 (the \"License\");\n * you may not use this file except in compliance w=
ith the License.\n * You may obtain a copy of the License at\n *\n *   http=
://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicabl=
e law or agreed to in writing, software\n * distributed under the License i=
s distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS O=
F ANY KIND, either express or implied.\n * See the License for the specific=
 language governing permissions and\n * limitations under the License.\n */=
\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\nexport class =
FirebaseStorageError extends FirebaseError {\n  customData: { serverRespons=
e: string | null } =3D { serverResponse: null };\n\n  constructor(code: Cod=
e, message: string) {\n    super(\n      prependCode(code),\n      `Firebas=
e Storage: ${message} (${prependCode(code)})`\n    );\n    // Without this,=
 `instanceof FirebaseStorageError`, in tests for example,\n    // returns f=
alse.\n    Object.setPrototypeOf(this, FirebaseStorageError.prototype);\n  =
}\n\n  codeEquals(code: Code): boolean {\n    return prependCode(code) =3D=
=3D=3D this.code;\n  }\n\n  get message(): string {\n    if (this.customDat=
a.serverResponse) {\n      return `${this.message}\\n${this.customData.serv=
erResponse}`;\n    } else {\n      return this.message;\n    }\n  }\n\n  ge=
t serverResponse(): null | string {\n    return this.customData.serverRespo=
nse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    thi=
s.customData.serverResponse =3D serverResponse;\n  }\n}\n\nexport const err=
ors =3D {};\n\nexport type Code =3D string;\nexport const Code =3D {\n  // =
Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'o=
bject-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_F=
OUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHEN=
TICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT=
_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',=
\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid=
-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'in=
valid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT=
_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-w=
rong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'in=
valid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  AP=
P_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operatio=
n',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error=
',\n  UNSUPPORTED_ENVIRONMENT: 'unsupported-environment'\n};\n\nexport func=
tion prependCode(code: Code): string {\n  return 'storage/' + code;\n}\n\ne=
xport function unknown(): FirebaseStorageError {\n  const message =3D\n    =
'An unknown error occurred, please check the error payload for ' +\n    'se=
rver response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);=
\n}\n\nexport function objectNotFound(path: string): FirebaseStorageError {=
\n  return new FirebaseStorageError(\n    Code.OBJECT_NOT_FOUND,\n    \"Obj=
ect '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNo=
tFound(bucket: string): FirebaseStorageError {\n  return new FirebaseStorag=
eError(\n    Code.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does n=
ot exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): F=
irebaseStorageError {\n  return new FirebaseStorageError(\n    Code.PROJECT=
_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n=
\nexport function quotaExceeded(bucket: string): FirebaseStorageError {\n  =
return new FirebaseStorageError(\n    Code.QUOTA_EXCEEDED,\n    \"Quota for=
 bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" =
+\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport functio=
n unauthenticated(): FirebaseStorageError {\n  const message =3D\n    'User=
 is not authenticated, please authenticate using Firebase ' +\n    'Authent=
ication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTI=
CATED, message);\n}\n\nexport function unauthorized(path: string): Firebase=
StorageError {\n  return new FirebaseStorageError(\n    Code.UNAUTHORIZED,\=
n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}=
\n\nexport function retryLimitExceeded(): FirebaseStorageError {\n  return =
new FirebaseStorageError(\n    Code.RETRY_LIMIT_EXCEEDED,\n    'Max retry t=
ime for operation exceeded, please try again.'\n  );\n}\n\nexport function =
invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: strin=
g\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.=
INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n  =
    \"' has checksum '\" +\n      checksum +\n      \"' which does not matc=
h '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"=
\n  );\n}\n\nexport function canceled(): FirebaseStorageError {\n  return n=
ew FirebaseStorageError(\n    Code.CANCELED,\n    'User canceled the upload=
/download.'\n  );\n}\n\nexport function invalidEventName(name: string): Fir=
ebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_E=
VENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport=
 function invalidUrl(url: string): FirebaseStorageError {\n  return new Fir=
ebaseStorageError(\n    Code.INVALID_URL,\n    \"Invalid URL '\" + url + \"=
'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): Fire=
baseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_DE=
FAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\=
n\nexport function noDefaultBucket(): FirebaseStorageError {\n  return new =
FirebaseStorageError(\n    Code.NO_DEFAULT_BUCKET,\n    'No default bucket =
' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY =
+\n      \"' property when initializing the app?\"\n  );\n}\n\nexport funct=
ion cannotSliceBlob(): FirebaseStorageError {\n  return new FirebaseStorage=
Error(\n    Code.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Ple=
ase retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): F=
irebaseStorageError {\n  return new FirebaseStorageError(\n    Code.SERVER_=
FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please r=
etry the upload.'\n  );\n}\n\nexport function noDownloadURL(): FirebaseStor=
ageError {\n  return new FirebaseStorageError(\n    Code.NO_DOWNLOAD_URL,\n=
    'The given file does not have any download URLs.'\n  );\n}\n\nexport fu=
nction invalidArgument(message: string): FirebaseStorageError {\n  return n=
ew FirebaseStorageError(Code.INVALID_ARGUMENT, message);\n}\n\nexport funct=
ion invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: =
string,\n  real: number\n): FirebaseStorageError {\n  let countPart;\n  let=
 plural;\n  if (argMin =3D=3D=3D argMax) {\n    countPart =3D argMin;\n    =
plural =3D argMin =3D=3D=3D 1 ? 'argument' : 'arguments';\n  } else {\n    =
countPart =3D 'between ' + argMin + ' and ' + argMax;\n    plural =3D 'argu=
ments';\n  }\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT=
_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Exp=
ected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', receive=
d ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): Fi=
rebaseStorageError {\n  return new FirebaseStorageError(\n    Code.APP_DELE=
TED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name -=
 The name of the operation that was invalid.\n */\nexport function invalidR=
ootOperation(name: string): FirebaseStorageError {\n  return new FirebaseSt=
orageError(\n    Code.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n =
     name +\n      \"' cannot be performed on a root reference, create a no=
n-root \" +\n      \"reference using child, such as .child('file.png').\"\n=
  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @para=
m message - A message describing the format violation.\n */\nexport functio=
n invalidFormat(\n  format: string,\n  message: string\n): FirebaseStorageE=
rror {\n  return new FirebaseStorageError(\n    Code.INVALID_FORMAT,\n    \=
"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n=
/**\n * @param message - A message describing the internal error.\n */\nexp=
ort function internalError(message: string): FirebaseStorageError {\n  thro=
w new FirebaseStorageError(\n    Code.INTERNAL_ERROR,\n    'Internal error:=
 ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n =
*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n *=
 you may not use this file except in compliance with the License.\n * You m=
ay obtain a copy of the License at\n *\n *   http://www.apache.org/licenses=
/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writ=
ing, software\n * distributed under the License is distributed on an \"AS I=
S\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express=
 or implied.\n * See the License for the specific language governing permis=
sions and\n * limitations under the License.\n */\n\nimport { unknown, inva=
lidFormat } from './error';\n\n/**\n * An enumeration of the possible strin=
g formats for upload.\n * @public\n */\nexport type StringFormat =3D string=
;\n/**\n * An enumeration of the possible string formats for upload.\n * @p=
ublic\n */\nexport const StringFormat =3D {\n  RAW: 'raw',\n  BASE64: 'base=
64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nexport class=
 StringData {\n  contentType: string | null;\n\n  constructor(public data: =
Uint8Array, contentType?: string | null) {\n    this.contentType =3D conten=
tType || null;\n  }\n}\n\nexport function dataFromString(\n  format: String=
Format,\n  stringData: string\n): StringData {\n  switch (format) {\n    ca=
se StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\=
n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      ret=
urn new StringData(base64Bytes_(format, stringData));\n    case StringForma=
t.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData=
),\n        dataURLContentType_(stringData)\n      );\n    default:\n    //=
 do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport fu=
nction utf8Bytes_(value: string): Uint8Array {\n  const b: number[] =3D [];=
\n  for (let i =3D 0; i &lt; value.length; i++) {\n    let c =3D value.char=
CodeAt(i);\n    if (c &lt;=3D 127) {\n      b.push(c);\n    } else {\n     =
 if (c &lt;=3D 2047) {\n        b.push(192 | (c &gt;&gt; 6), 128 | (c &amp;=
 63));\n      } else {\n        if ((c &amp; 64512) =3D=3D=3D 55296) {\n   =
       // The start of a surrogate pair.\n          const valid =3D\n      =
      i &lt; value.length - 1 &amp;&amp; (value.charCodeAt(i + 1) &amp; 645=
12) =3D=3D=3D 56320;\n          if (!valid) {\n            // The second su=
rrogate wasn't there.\n            b.push(239, 191, 189);\n          } else=
 {\n            const hi =3D c;\n            const lo =3D value.charCodeAt(=
++i);\n            c =3D 65536 | ((hi &amp; 1023) &lt;&lt; 10) | (lo &amp; =
1023);\n            b.push(\n              240 | (c &gt;&gt; 18),\n        =
      128 | ((c &gt;&gt; 12) &amp; 63),\n              128 | ((c &gt;&gt; 6=
) &amp; 63),\n              128 | (c &amp; 63)\n            );\n          }=
\n        } else {\n          if ((c &amp; 64512) =3D=3D=3D 56320) {\n     =
       // Invalid low surrogate.\n            b.push(239, 191, 189);\n     =
     } else {\n            b.push(224 | (c &gt;&gt; 12), 128 | ((c &gt;&gt;=
 6) &amp; 63), 128 | (c &amp; 63));\n          }\n        }\n      }\n    }=
\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedByte=
s_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded =3D d=
ecodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringF=
ormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);=
\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): U=
int8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      co=
nst hasMinus =3D value.indexOf('-') !=3D=3D -1;\n      const hasUnder =3D v=
alue.indexOf('_') !=3D=3D -1;\n      if (hasMinus || hasUnder) {\n        c=
onst invalidChar =3D hasMinus ? '-' : '_';\n        throw invalidFormat(\n =
         format,\n          \"Invalid character '\" +\n            invalidC=
har +\n            \"' found: is it base64url encoded?\"\n        );\n     =
 }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const ha=
sPlus =3D value.indexOf('+') !=3D=3D -1;\n      const hasSlash =3D value.in=
dexOf('/') !=3D=3D -1;\n      if (hasPlus || hasSlash) {\n        const inv=
alidChar =3D hasPlus ? '+' : '/';\n        throw invalidFormat(\n          =
format,\n          \"Invalid character '\" + invalidChar + \"' found: is it=
 base64 encoded?\"\n        );\n      }\n      value =3D value.replace(/-/g=
, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do no=
thing\n  }\n  let bytes;\n  try {\n    bytes =3D atob(value);\n  } catch (e=
) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  co=
nst array =3D new Uint8Array(bytes.length);\n  for (let i =3D 0; i &lt; byt=
es.length; i++) {\n    array[i] =3D bytes.charCodeAt(i);\n  }\n  return arr=
ay;\n}\n\nclass DataURLParts {\n  base64: boolean =3D false;\n  contentType=
: string | null =3D null;\n  rest: string;\n\n  constructor(dataURL: string=
) {\n    const matches =3D dataURL.match(/^data:([^,]+)?,/);\n    if (match=
es =3D=3D=3D null) {\n      throw invalidFormat(\n        StringFormat.DATA=
_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n =
     );\n    }\n    const middle =3D matches[1] || null;\n    if (middle !=
=3D null) {\n      this.base64 =3D endsWith(middle, ';base64');\n      this=
.contentType =3D this.base64\n        ? middle.substring(0, middle.length -=
 ';base64'.length)\n        : middle;\n    }\n    this.rest =3D dataURL.sub=
string(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(=
dataUrl: string): Uint8Array {\n  const parts =3D new DataURLParts(dataUrl)=
;\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, part=
s.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\=
n\nexport function dataURLContentType_(dataUrl: string): string | null {\n =
 const parts =3D new DataURLParts(dataUrl);\n  return parts.contentType;\n}=
\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnoug=
h =3D s.length &gt;=3D end.length;\n  if (!longEnough) {\n    return false;=
\n  }\n\n  return s.substring(s.length - end.length) =3D=3D=3D end;\n}\n","=
/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the A=
pache License, Version 2.0 (the \"License\");\n * you may not use this file=
 except in compliance with the License.\n * You may obtain a copy of the Li=
cense at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unles=
s required by applicable law or agreed to in writing, software\n * distribu=
ted under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WAR=
RANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the L=
icense for the specific language governing permissions and\n * limitations =
under the License.\n */\n\n/**\n * @fileoverview Enumerations used for uplo=
ad tasks.\n */\n\n/**\n * Enum for task events.\n */\nexport type TaskEvent=
 =3D string;\nexport const TaskEvent =3D {\n  /** Triggered whenever the ta=
sk changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};=
\n\n/**\n * Internal enum for task state.\n */\nexport type InternalTaskSta=
te =3D string;\nexport const InternalTaskState =3D {\n  RUNNING: 'running',=
\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANC=
ELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\n\n/**\n=
 * External (API-surfaced) enum for task state.\n */\nexport type TaskState=
 =3D string;\nexport const TaskState =3D {\n  /** The task is currently tra=
nsferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the=
 user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n=
  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'cancel=
ed',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexpo=
rt function taskStateFromInternalTaskState(\n  state: InternalTaskState\n):=
 TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    =
case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n   =
   return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      ret=
urn TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return Ta=
skState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskSt=
ate.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ER=
ROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return T=
askState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\=
n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n=
 * you may not use this file except in compliance with the License.\n * You=
 may obtain a copy of the License at\n *\n *   http://www.apache.org/licens=
es/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in wr=
iting, software\n * distributed under the License is distributed on an \"AS=
 IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either expre=
ss or implied.\n * See the License for the specific language governing perm=
issions and\n * limitations under the License.\n */\n\n/**\n * @fileovervie=
w A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-lik=
e interface.\n */\n\n/**\n * XHR headers\n */\nexport interface Headers {\n=
  [name: string]: string | number;\n}\n\nexport interface XhrIo {\n  send(\=
n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob |=
 string | null,\n    headers?: Headers\n  ): Promise<xhrio>;\n\n  getErrorC=
ode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;=
\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getRespons=
eHeader(header: string): string | null;\n\n  addUploadProgressListener(list=
ener: (p1: ProgressEvent) =3D&gt; void): void;\n\n  removeUploadProgressLis=
tener(listener: (p1: ProgressEvent) =3D&gt; void): void;\n}\n\nexport enum =
ErrorCode {\n  NO_ERROR =3D 0,\n  NETWORK_ERROR =3D 1,\n  ABORT =3D 2\n}\n"=
,"/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the=
 Apache License, Version 2.0 (the \"License\");\n * you may not use this fi=
le except in compliance with the License.\n * You may obtain a copy of the =
License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unl=
ess required by applicable law or agreed to in writing, software\n * distri=
buted under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT W=
ARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the=
 License for the specific language governing permissions and\n * limitation=
s under the License.\n */\nimport { Headers, XhrIo, ErrorCode } from './xhr=
io';\nimport { internalError } from './error';\n\n/**\n * We use this inste=
ad of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't wor=
k in React Native on Android.\n */\nexport class NetworkXhrIo implements Xh=
rIo {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n =
 private sendPromise_: Promise<xhrio>;\n  private sent_: boolean =3D false;=
\n\n  constructor() {\n    this.xhr_ =3D new XMLHttpRequest();\n    this.er=
rorCode_ =3D ErrorCode.NO_ERROR;\n    this.sendPromise_ =3D new Promise(res=
olve =3D&gt; {\n      this.xhr_.addEventListener('abort', () =3D&gt; {\n   =
     this.errorCode_ =3D ErrorCode.ABORT;\n        resolve(this);\n      })=
;\n      this.xhr_.addEventListener('error', () =3D&gt; {\n        this.err=
orCode_ =3D ErrorCode.NETWORK_ERROR;\n        resolve(this);\n      });\n  =
    this.xhr_.addEventListener('load', () =3D&gt; {\n        resolve(this);=
\n      });\n    });\n  }\n\n  /**\n   * @override\n   */\n  send(\n    url=
: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,=
\n    headers?: Headers\n  ): Promise<xhrio> {\n    if (this.sent_) {\n    =
  throw internalError('cannot .send() more than once');\n    }\n    this.se=
nt_ =3D true;\n    this.xhr_.open(method, url, true);\n    if (headers !=3D=
=3D undefined) {\n      for (const key in headers) {\n        if (headers.h=
asOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[ke=
y].toString());\n        }\n      }\n    }\n    if (body !=3D=3D undefined)=
 {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n   =
 }\n    return this.sendPromise_;\n  }\n\n  /**\n   * @override\n   */\n  g=
etErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalErr=
or('cannot .getErrorCode() before sending');\n    }\n    return this.errorC=
ode_;\n  }\n\n  /**\n   * @override\n   */\n  getStatus(): number {\n    if=
 (!this.sent_) {\n      throw internalError('cannot .getStatus() before sen=
ding');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) =
{\n      return -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getRespo=
nseText(): string {\n    if (!this.sent_) {\n      throw internalError('can=
not .getResponseText() before sending');\n    }\n    return this.xhr_.respo=
nseText;\n  }\n\n  /**\n   * Aborts the request.\n   * @override\n   */\n  =
abort(): void {\n    this.xhr_.abort();\n  }\n\n  /**\n   * @override\n   *=
/\n  getResponseHeader(header: string): string | null {\n    return this.xh=
r_.getResponseHeader(header);\n  }\n\n  /**\n   * @override\n   */\n  addUp=
loadProgressListener(listener: (p1: ProgressEvent) =3D&gt; void): void {\n =
   if (this.xhr_.upload !=3D null) {\n      this.xhr_.upload.addEventListen=
er('progress', listener);\n    }\n  }\n\n  /**\n   * @override\n   */\n  re=
moveUploadProgressListener(listener: (p1: ProgressEvent) =3D&gt; void): voi=
d {\n    if (this.xhr_.upload !=3D null) {\n      this.xhr_.upload.removeEv=
entListener('progress', listener);\n    }\n  }\n}\n","/**\n * @license\n * =
Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Versio=
n 2.0 (the \"License\");\n * you may not use this file except in compliance=
 with the License.\n * You may obtain a copy of the License at\n *\n *   ht=
tp://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applica=
ble law or agreed to in writing, software\n * distributed under the License=
 is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS=
 OF ANY KIND, either express or implied.\n * See the License for the specif=
ic language governing permissions and\n * limitations under the License.\n =
*/\n\n/**\n * @fileoverview Replacement for goog.net.XhrIoPool that works w=
ith fbs.XhrIo.\n */\nimport { XhrIo } from './xhrio';\nimport { NetworkXhrI=
o } from './xhrio_network';\n\n/**\n * Factory-like class for creating XhrI=
o instances.\n */\nexport class XhrIoPool {\n  createXhrIo(): XhrIo {\n    =
return new NetworkXhrIo();\n  }\n}\n","/**\n * @license\n * Copyright 2017 =
Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"Li=
cense\");\n * you may not use this file except in compliance with the Licen=
se.\n * You may obtain a copy of the License at\n *\n *   http://www.apache=
.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agre=
ed to in writing, software\n * distributed under the License is distributed=
 on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, e=
ither express or implied.\n * See the License for the specific language gov=
erning permissions and\n * limitations under the License.\n */\n\nimport { =
Code, FirebaseStorageError } from './error';\n\nexport function isJustDef<t=
>(p: T | null | undefined): p is T | null {\n  return p !=3D=3D void 0;\n}\=
n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport functio=
n isFunction(p: unknown): p is Function {\n  return typeof p =3D=3D=3D 'fun=
ction';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  re=
turn typeof p =3D=3D=3D 'object' &amp;&amp; !Array.isArray(p);\n}\n\nexport=
 function isString(p: unknown): p is string {\n  return typeof p =3D=3D=3D =
'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unkn=
own): p is Blob {\n  return isNativeBlobDefined() &amp;&amp; p instanceof B=
lob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeo=
f Blob !=3D=3D 'undefined';\n}\n\nexport function validateNumber(\n  argume=
nt: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): =
void {\n  if (value &lt; minValue) {\n    throw new FirebaseStorageError(\n=
      Code.INVALID_ARGUMENT,\n      `Invalid value for '${argument}'. Expec=
ted ${minValue} or greater.`\n    );\n  }\n  if (value &gt; maxValue) {\n  =
  throw new FirebaseStorageError(\n      Code.INVALID_ARGUMENT,\n      `Inv=
alid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n=
}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under=
 the Apache License, Version 2.0 (the \"License\");\n * you may not use thi=
s file except in compliance with the License.\n * You may obtain a copy of =
the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n *=
 Unless required by applicable law or agreed to in writing, software\n * di=
stributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHO=
UT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See=
 the License for the specific language governing permissions and\n * limita=
tions under the License.\n */\n/**\n * @fileoverview Some methods copied fr=
om goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Def=
erred code that\n * bloats the size of the released binary.\n */\nimport * =
as type from './type';\nimport { Code, FirebaseStorageError } from './error=
';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (t=
ypeof BlobBuilder !=3D=3D 'undefined') {\n    return BlobBuilder;\n  } else=
 if (typeof WebKitBlobBuilder !=3D=3D 'undefined') {\n    return WebKitBlob=
Builder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates=
 one or more values together and converts them to a Blob.\n *\n * @param ar=
gs The values that will make up the resulting blob.\n * @return The blob.\n=
 */\nexport function getBlob(...args: Array<string |=3D"" blob=3D"" arraybu=
ffer=3D"">): Blob {\n  const BlobBuilder =3D getBlobBuilder();\n  if (BlobB=
uilder !=3D=3D undefined) {\n    const bb =3D new BlobBuilder();\n    for (=
let i =3D 0; i &lt; args.length; i++) {\n      bb.append(args[i]);\n    }\n=
    return bb.getBlob();\n  } else {\n    if (type.isNativeBlobDefined()) {=
\n      return new Blob(args);\n    } else {\n      throw new FirebaseStora=
geError(\n        Code.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doe=
sn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * S=
lices the blob. The returned blob contains data from the start byte\n * (in=
clusive) till the end byte (exclusive). Negative indices cannot be used.\n =
*\n * @param blob The blob to be sliced.\n * @param start Index of the star=
ting byte.\n * @param end Index of the ending byte.\n * @return The blob sl=
ice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, s=
tart: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    r=
eturn blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    ret=
urn blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob=
.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyri=
ght 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 =
(the \"License\");\n * you may not use this file except in compliance with =
the License.\n * You may obtain a copy of the License at\n *\n *   http://w=
ww.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable la=
w or agreed to in writing, software\n * distributed under the License is di=
stributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF AN=
Y KIND, either express or implied.\n * See the License for the specific lan=
guage governing permissions and\n * limitations under the License.\n */\n\n=
/**\n * @file Provides a Blob-like wrapper for various binary types (includ=
ing the\n * native Blob type). This makes it possible to upload types like =
ArrayBuffers,\n * making uploads possible in environments without the nativ=
e Blob type.\n */\nimport * as fs from './fs';\nimport { StringFormat, data=
FromString } from './string';\nimport * as type from './type';\n\n/**\n * @=
param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g=
. Uint8Arrays). Pass true only if you know the objects will not be\n *     =
modified after this blob's construction.\n */\nexport class FbsBlob {\n  pr=
ivate data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_=
: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy=
?: boolean) {\n    let size: number =3D 0;\n    let blobType: string =3D ''=
;\n    if (type.isNativeBlob(data)) {\n      this.data_ =3D data as Blob;\n=
      size =3D (data as Blob).size;\n      blobType =3D (data as Blob).type=
;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n =
       this.data_ =3D new Uint8Array(data);\n      } else {\n        this.d=
ata_ =3D new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8=
Array(data));\n      }\n      size =3D this.data_.length;\n    } else if (d=
ata instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ =
=3D data as Uint8Array;\n      } else {\n        this.data_ =3D new Uint8Ar=
ray(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n  =
    size =3D data.length;\n    }\n    this.size_ =3D size;\n    this.type_ =
=3D blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  =
type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number,=
 endByte: number): FbsBlob | null {\n    if (type.isNativeBlob(this.data_))=
 {\n      const realBlob =3D this.data_ as Blob;\n      const sliced =3D fs=
.sliceBlob(realBlob, startByte, endByte);\n      if (sliced =3D=3D=3D null)=
 {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    }=
 else {\n      const slice =3D new Uint8Array(\n        (this.data_ as Uint=
8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\=
n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...=
args: Array<string |=3D"" fbsblob=3D"">): FbsBlob | null {\n    if (type.is=
NativeBlobDefined()) {\n      const blobby: Array<blob |=3D"" uint8array=3D=
"" string=3D""> =3D args.map(\n        (val: string | FbsBlob): Blob | Uint=
8Array | string =3D&gt; {\n          if (val instanceof FbsBlob) {\n       =
     return val.data_;\n          } else {\n            return val;\n      =
    }\n        }\n      );\n      return new FbsBlob(fs.getBlob.apply(null,=
 blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] =3D args.ma=
p(\n        (val: string | FbsBlob): Uint8Array =3D&gt; {\n          if (ty=
pe.isString(val)) {\n            return dataFromString(StringFormat.RAW, va=
l as string).data;\n          } else {\n            // Blobs don't exist, s=
o this has to be a Uint8Array.\n            return (val as FbsBlob).data_ a=
s Uint8Array;\n          }\n        }\n      );\n      let finalLength =3D =
0;\n      uint8Arrays.forEach((array: Uint8Array): void =3D&gt; {\n        =
finalLength +=3D array.byteLength;\n      });\n      const merged =3D new U=
int8Array(finalLength);\n      let index =3D 0;\n      uint8Arrays.forEach(=
(array: Uint8Array) =3D&gt; {\n        for (let i =3D 0; i &lt; array.lengt=
h; i++) {\n          merged[index++] =3D array[i];\n        }\n      });\n =
     return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob =
| Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Cop=
yright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2=
.0 (the \"License\");\n * you may not use this file except in compliance wi=
th the License.\n * You may obtain a copy of the License at\n *\n *   http:=
//www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable=
 law or agreed to in writing, software\n * distributed under the License is=
 distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF=
 ANY KIND, either express or implied.\n * See the License for the specific =
language governing permissions and\n * limitations under the License.\n */\=
n\n/**\n * @fileoverview Functionality related to the parsing/composition o=
f bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, inval=
idUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**=
\n * Firebase Storage location data.\n */\nexport class Location {\n  priva=
te path_: string;\n\n  constructor(public readonly bucket: string, path: st=
ring) {\n    this.path_ =3D path;\n  }\n\n  get path(): string {\n    retur=
n this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.lengt=
h =3D=3D=3D 0;\n  }\n\n  fullServerUrl(): string {\n    const encode =3D en=
codeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(=
this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode =3D=
 encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n=
\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bu=
cketLocation;\n    try {\n      bucketLocation =3D Location.makeFromUrl(buc=
ketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This let=
s you put bare bucket names in\n      // config.\n      return new Location=
(bucketString, '');\n    }\n    if (bucketLocation.path =3D=3D=3D '') {\n  =
    return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(=
bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {=
\n    let location: Location | null =3D null;\n    const bucketDomain =3D '=
([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n  =
    if (loc.path.charAt(loc.path.length - 1) =3D=3D=3D '/') {\n        loc.=
path_ =3D loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath =3D '(/=
(.*))?$';\n    const gsRegex =3D new RegExp('^gs://' + bucketDomain + gsPat=
h, 'i');\n    const gsIndices =3D { bucket: 1, path: 3 };\n\n    function h=
ttpModify(loc: Location): void {\n      loc.path_ =3D decodeURIComponent(lo=
c.path);\n    }\n    const version =3D 'v[A-Za-z0-9_]+';\n    const firebas=
eStorageHost =3D DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    const firebase=
StoragePath =3D '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp =3D new=
 RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDoma=
in}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorage=
Indices =3D { bucket: 1, path: 3 };\n\n    const cloudStorageHost =3D\n    =
  '(?:storage.googleapis.com|storage.cloud.google.com)';\n    const cloudSt=
oragePath =3D '([^?#]*)';\n    const cloudStorageRegExp =3D new RegExp(\n  =
    `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n =
     'i'\n    );\n    const cloudStorageIndices =3D { bucket: 1, path: 2 };=
\n\n    const groups =3D [\n      { regex: gsRegex, indices: gsIndices, pos=
tModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n     =
   indices: firebaseStorageIndices,\n        postModify: httpModify\n      =
},\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStor=
ageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let =
i =3D 0; i &lt; groups.length; i++) {\n      const group =3D groups[i];\n  =
    const captures =3D group.regex.exec(url);\n      if (captures) {\n     =
   const bucketValue =3D captures[group.indices.bucket];\n        let pathV=
alue =3D captures[group.indices.path];\n        if (!pathValue) {\n        =
  pathValue =3D '';\n        }\n        location =3D new Location(bucketVal=
ue, pathValue);\n        group.postModify(location);\n        break;\n     =
 }\n    }\n    if (location =3D=3D null) {\n      throw invalidUrl(url);\n =
   }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 =
Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"Li=
cense\");\n * you may not use this file except in compliance with the Licen=
se.\n * You may obtain a copy of the License at\n *\n *   http://www.apache=
.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agre=
ed to in writing, software\n * distributed under the License is distributed=
 on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, e=
ither express or implied.\n * See the License for the specific language gov=
erning permissions and\n * limitations under the License.\n */\nimport * as=
 type from './type';\n\n/**\n * Returns the Object resulting from parsing t=
he given JSON, or null if the\n * given string does not represent a JSON ob=
ject.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: str=
ing]: unknown } | null {\n  let obj;\n  try {\n    obj =3D JSON.parse(s);\n=
  } catch (e) {\n    return null;\n  }\n  if (type.isNonArrayObject(obj)) {=
\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @licens=
e\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, =
Version 2.0 (the \"License\");\n * you may not use this file except in comp=
liance with the License.\n * You may obtain a copy of the License at\n *\n =
*   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by a=
pplicable law or agreed to in writing, software\n * distributed under the L=
icense is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR COND=
ITIONS OF ANY KIND, either express or implied.\n * See the License for the =
specific language governing permissions and\n * limitations under the Licen=
se.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating =
paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n *=
/\nexport function parent(path: string): string | null {\n  if (path.length=
 =3D=3D=3D 0) {\n    return null;\n  }\n  const index =3D path.lastIndexOf(=
'/');\n  if (index =3D=3D=3D -1) {\n    return '';\n  }\n  const newPath =
=3D path.slice(0, index);\n  return newPath;\n}\n\nexport function child(pa=
th: string, childPath: string): string {\n  const canonicalChildPath =3D ch=
ildPath\n    .split('/')\n    .filter(component =3D&gt; component.length &g=
t; 0)\n    .join('/');\n  if (path.length =3D=3D=3D 0) {\n    return canoni=
calChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }=
\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -&gt; '=
bar'\n * '/foo/bar/baz/' -&gt; 'baz/'\n * '/a' -&gt; 'a'\n */\nexport funct=
ion lastComponent(path: string): string {\n  const index =3D path.lastIndex=
Of('/', path.length - 2);\n  if (index =3D=3D=3D -1) {\n    return path;\n =
 } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n=
 * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Ver=
sion 2.0 (the \"License\");\n * you may not use this file except in complia=
nce with the License.\n * You may obtain a copy of the License at\n *\n *  =
 http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by appl=
icable law or agreed to in writing, software\n * distributed under the Lice=
nse is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITI=
ONS OF ANY KIND, either express or implied.\n * See the License for the spe=
cific language governing permissions and\n * limitations under the License.=
\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for =
the server API.\n */\nimport { DEFAULT_HOST } from './constants';\nimport {=
 UrlParams } from './requestinfo';\n\nexport function makeUrl(urlPart: stri=
ng): string {\n  return `https://${DEFAULT_HOST}/v0${urlPart}`;\n}\n\nexpor=
t function makeQueryString(params: UrlParams): string {\n  const encode =3D=
 encodeURIComponent;\n  let queryPart =3D '?';\n  for (const key in params)=
 {\n    if (params.hasOwnProperty(key)) {\n      const nextPart =3D encode(=
key) + '=3D' + encode(params[key]);\n      queryPart =3D queryPart + nextPa=
rt + '&amp;';\n    }\n  }\n\n  // Chop off the extra '&amp;' or '?' on the =
end\n  queryPart =3D queryPart.slice(0, -1);\n  return queryPart;\n}\n","/*=
*\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apa=
che License, Version 2.0 (the \"License\");\n * you may not use this file e=
xcept in compliance with the License.\n * You may obtain a copy of the Lice=
nse at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless =
required by applicable law or agreed to in writing, software\n * distribute=
d under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRA=
NTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the Lic=
ense for the specific language governing permissions and\n * limitations un=
der the License.\n */\n\n/**\n * @fileoverview Documentation for the metada=
ta format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObj=
ectOrNull } from './json';\nimport { Location } from './location';\nimport =
{ lastComponent } from './path';\nimport { isString } from './type';\nimpor=
t { makeUrl, makeQueryString } from './url';\nimport { StorageReference } f=
rom '../reference';\nimport { StorageService } from '../service';\n\nexport=
 function noXform_<t>(metadata: Metadata, value: T): T {\n  return value;\n=
}\n\nclass Mapping<t> {\n  local: string;\n  writable: boolean;\n  xform: (=
p1: Metadata, p2?: T) =3D&gt; T | undefined;\n\n  constructor(\n    public =
server: string,\n    local?: string | null,\n    writable?: boolean,\n    x=
form?: ((p1: Metadata, p2?: T) =3D&gt; T | undefined) | null\n  ) {\n    th=
is.local =3D local || server;\n    this.writable =3D !!writable;\n    this.=
xform =3D xform || noXform_;\n  }\n}\ntype Mappings =3D Array<mapping<strin=
g> | Mapping<number>&gt;;\n\nexport { Mappings };\n\nlet mappings_: Mapping=
s | null =3D null;\n\nexport function xformPath(fullPath: string | undefine=
d): string | undefined {\n  if (!isString(fullPath) || fullPath.length &lt;=
 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath)=
;\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\=
n    return mappings_;\n  }\n  const mappings: Mappings =3D [];\n  mappings=
.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>(=
'generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n =
 mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  functio=
n mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | unde=
fined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  c=
onst nameMapping =3D new Mapping<string>('name');\n  nameMapping.xform =3D =
mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces th=
e second param to a number, if it is defined.\n   */\n  function xformSize(=
\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undef=
ined {\n    if (size !=3D=3D undefined) {\n      return Number(size);\n    =
} else {\n      return size;\n    }\n  }\n  const sizeMapping =3D new Mappi=
ng<number>('size');\n  sizeMapping.xform =3D xformSize;\n  mappings.push(si=
zeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappin=
gs.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<strin=
g>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheCont=
rol', null, true));\n  mappings.push(new Mapping<string>('contentDispositio=
n', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', n=
ull, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, =
true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n=
  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n=
  mappings_ =3D mappings;\n  return mappings_;\n}\n\nexport function addRef=
(metadata: Metadata, service: StorageService): void {\n  function generateR=
ef(): StorageReference {\n    const bucket: string =3D metadata['bucket'] a=
s string;\n    const path: string =3D metadata['fullPath'] as string;\n    =
const loc =3D new Location(bucket, path);\n    return service.makeStorageRe=
ference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generat=
eRef });\n}\n\nexport function fromResource(\n  service: StorageService,\n =
 resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata =
{\n  const metadata: Metadata =3D {} as Metadata;\n  metadata['type'] =3D '=
file';\n  const len =3D mappings.length;\n  for (let i =3D 0; i &lt; len; i=
++) {\n    const mapping =3D mappings[i];\n    metadata[mapping.local] =3D =
(mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mappi=
ng.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n=
}\n\nexport function fromResourceString(\n  service: StorageService,\n  res=
ourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const o=
bj =3D jsonObjectOrNull(resourceString);\n  if (obj =3D=3D=3D null) {\n    =
return null;\n  }\n  const resource =3D obj as Metadata;\n  return fromReso=
urce(service, resource, mappings);\n}\n\nexport function downloadUrlFromRes=
ourceString(\n  metadata: Metadata,\n  resourceString: string\n): string | =
null {\n  const obj =3D jsonObjectOrNull(resourceString);\n  if (obj =3D=3D=
=3D null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens']))=
 {\n    // This can happen if objects are uploaded through GCS and retrieve=
d\n    // through list, so we don't want to throw an Error.\n    return nul=
l;\n  }\n  const tokens: string =3D obj['downloadTokens'] as string;\n  if =
(tokens.length =3D=3D=3D 0) {\n    return null;\n  }\n  const encode =3D en=
codeURIComponent;\n  const tokensList =3D tokens.split(',');\n  const urls =
=3D tokensList.map((token: string): string =3D&gt; {\n    const bucket: str=
ing =3D metadata['bucket'] as string;\n    const path: string =3D metadata[=
'fullPath'] as string;\n    const urlPart =3D '/b/' + encode(bucket) + '/o/=
' + encode(path);\n    const base =3D makeUrl(urlPart);\n    const queryStr=
ing =3D makeQueryString({\n      alt: 'media',\n      token\n    });\n    r=
eturn base + queryString;\n  });\n  return urls[0];\n}\n\nexport function t=
oResourceString(\n  metadata: Partial<metadata>,\n  mappings: Mappings\n): =
string {\n  const resource: {\n    [prop: string]: unknown;\n  } =3D {};\n =
 const len =3D mappings.length;\n  for (let i =3D 0; i &lt; len; i++) {\n  =
  const mapping =3D mappings[i];\n    if (mapping.writable) {\n      resour=
ce[mapping.server] =3D metadata[mapping.local];\n    }\n  }\n  return JSON.=
stringify(resource);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\=
n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n=
 * you may not use this file except in compliance with the License.\n * You=
 may obtain a copy of the License at\n *\n *   http://www.apache.org/licens=
es/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in wr=
iting, software\n * distributed under the License is distributed on an \"AS=
 IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either expre=
ss or implied.\n * See the License for the specific language governing perm=
issions and\n * limitations under the License.\n */\n\n/**\n * @fileovervie=
w Documentation for the listOptions and listResult format\n */\nimport { Lo=
cation } from './location';\nimport * as json from './json';\nimport { List=
Result } from '../list';\nimport { StorageService } from '../service';\n\n/=
**\n * Represents the simplified object metadata returned by List API.\n * =
Other fields are filtered because list in Firebase Rules does not grant\n *=
 the permission to read the metadata.\n */\ninterface ListMetadataResponse =
{\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON res=
ponse of List API.\n */\ninterface ListResultResponse {\n  prefixes: string=
[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\ncons=
t PREFIXES_KEY =3D 'prefixes';\nconst ITEMS_KEY =3D 'items';\n\nfunction fr=
omBackendResponse(\n  service: StorageService,\n  bucket: string,\n  resour=
ce: ListResultResponse\n): ListResult {\n  const listResult: ListResult =3D=
 {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPag=
eToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of res=
ource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash =3D path.repla=
ce(/\\/$/, '');\n      const reference =3D service.makeStorageReference(\n =
       new Location(bucket, pathWithoutTrailingSlash)\n      );\n      list=
Result.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) =
{\n    for (const item of resource[ITEMS_KEY]) {\n      const reference =3D=
 service.makeStorageReference(\n        new Location(bucket, item['name'])\=
n      );\n      listResult.items.push(reference);\n    }\n  }\n  return li=
stResult;\n}\n\nexport function fromResponseString(\n  service: StorageServ=
ice,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n=
  const obj =3D json.jsonObjectOrNull(resourceString);\n  if (obj =3D=3D=3D=
 null) {\n    return null;\n  }\n  const resource =3D (obj as unknown) as L=
istResultResponse;\n  return fromBackendResponse(service, bucket, resource)=
;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed un=
der the Apache License, Version 2.0 (the \"License\");\n * you may not use =
this file except in compliance with the License.\n * You may obtain a copy =
of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\=
n * Unless required by applicable law or agreed to in writing, software\n *=
 distributed under the License is distributed on an \"AS IS\" BASIS,\n * WI=
THOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * =
See the License for the specific language governing permissions and\n * lim=
itations under the License.\n */\nimport { FirebaseStorageError } from './e=
rror';\nimport { Headers, XhrIo } from './xhrio';\n\nexport interface UrlPa=
rams {\n  [name: string]: string | number;\n}\n\nexport class RequestInfo<t=
> {\n  urlParams: UrlParams =3D {};\n  headers: Headers =3D {};\n  body: Bl=
ob | string | Uint8Array | null =3D null;\n\n  errorHandler:\n    | ((p1: X=
hrIo, p2: FirebaseStorageError) =3D&gt; FirebaseStorageError)\n    | null =
=3D null;\n\n  /**\n   * Called with the current number of bytes uploaded a=
nd total size (-1 if not\n   * computable) of the request body (i.e. used t=
o report upload progress).\n   */\n  progressCallback: ((p1: number, p2: nu=
mber) =3D&gt; void) | null =3D null;\n  successCodes: number[] =3D [200];\n=
  additionalRetryCodes: number[] =3D [];\n\n  constructor(\n    public url:=
 string,\n    public method: string,\n    /**\n     * Returns the value wit=
h which to resolve the request's promise. Only called\n     * if the reques=
t is successful. Throw from this function to reject the\n     * returned Re=
quest's promise with the thrown error.\n     * Note: The XhrIo passed to th=
is function may be reused after this callback\n     * returns. Do not keep =
a reference to it in any way.\n     */\n    public handler: (p1: XhrIo, p2:=
 string) =3D&gt; T,\n    public timeout: number\n  ) {}\n}\n","/**\n * @lic=
ense\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache Licens=
e, Version 2.0 (the \"License\");\n * you may not use this file except in c=
ompliance with the License.\n * You may obtain a copy of the License at\n *=
\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required b=
y applicable law or agreed to in writing, software\n * distributed under th=
e License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR C=
ONDITIONS OF ANY KIND, either express or implied.\n * See the License for t=
he specific language governing permissions and\n * limitations under the Li=
cense.\n */\n\n/**\n * @fileoverview Defines methods for interacting with t=
he network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListR=
esult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  Fir=
ebaseStorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded=
,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown\n}=
 from './error';\nimport { Location } from './location';\nimport {\n  Mappi=
ngs,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResource=
String\n} from './metadata';\nimport { fromResponseString } from './list';\=
nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString=
 } from './type';\nimport { makeUrl } from './url';\nimport { XhrIo } from =
'./xhrio';\nimport { StorageService } from '../service';\n\n/**\n * Throws =
the UNKNOWN FirebaseStorageError if cndn is false.\n */\nexport function ha=
ndlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  =
}\n}\n\nexport function metadataHandler(\n  service: StorageService,\n  map=
pings: Mappings\n): (p1: XhrIo, p2: string) =3D&gt; Metadata {\n  function =
handler(xhr: XhrIo, text: string): Metadata {\n    const metadata =3D fromR=
esourceString(service, text, mappings);\n    handlerCheck(metadata !=3D=3D =
null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexpo=
rt function listHandler(\n  service: StorageService,\n  bucket: string\n): =
(p1: XhrIo, p2: string) =3D&gt; ListResult {\n  function handler(xhr: XhrIo=
, text: string): ListResult {\n    const listResult =3D fromResponseString(=
service, bucket, text);\n    handlerCheck(listResult !=3D=3D null);\n    re=
turn listResult as ListResult;\n  }\n  return handler;\n}\n\nexport functio=
n downloadUrlHandler(\n  service: StorageService,\n  mappings: Mappings\n):=
 (p1: XhrIo, p2: string) =3D&gt; string | null {\n  function handler(xhr: X=
hrIo, text: string): string | null {\n    const metadata =3D fromResourceSt=
ring(service, text, mappings);\n    handlerCheck(metadata !=3D=3D null);\n =
   return downloadUrlFromResourceString(metadata as Metadata, text);\n  }\n=
  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Lo=
cation\n): (p1: XhrIo, p2: FirebaseStorageError) =3D&gt; FirebaseStorageErr=
or {\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageEr=
ror\n  ): FirebaseStorageError {\n    let newErr;\n    if (xhr.getStatus() =
=3D=3D=3D 401) {\n      newErr =3D unauthenticated();\n    } else {\n      =
if (xhr.getStatus() =3D=3D=3D 402) {\n        newErr =3D quotaExceeded(loca=
tion.bucket);\n      } else {\n        if (xhr.getStatus() =3D=3D=3D 403) {=
\n          newErr =3D unauthorized(location.path);\n        } else {\n    =
      newErr =3D err;\n        }\n      }\n    }\n    newErr.serverResponse=
 =3D err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n=
}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Xhr=
Io, p2: FirebaseStorageError) =3D&gt; FirebaseStorageError {\n  const share=
d =3D sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: X=
hrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let =
newErr =3D shared(xhr, err);\n    if (xhr.getStatus() =3D=3D=3D 404) {\n   =
   newErr =3D objectNotFound(location.path);\n    }\n    newErr.serverRespo=
nse =3D err.serverResponse;\n    return newErr;\n  }\n  return errorHandler=
;\n}\n\nexport function getMetadata(\n  service: StorageService,\n  locatio=
n: Location,\n  mappings: Mappings\n): RequestInfo<metadata> {\n  const url=
Part =3D location.fullServerUrl();\n  const url =3D makeUrl(urlPart);\n  co=
nst method =3D 'GET';\n  const timeout =3D service.maxOperationRetryTime;\n=
  const requestInfo =3D new RequestInfo(\n    url,\n    method,\n    metada=
taHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandle=
r =3D objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport fun=
ction list(\n  service: StorageService,\n  location: Location,\n  delimiter=
?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): =
RequestInfo<listresult> {\n  const urlParams: UrlParams =3D {};\n  if (loca=
tion.isRoot) {\n    urlParams['prefix'] =3D '';\n  } else {\n    urlParams[=
'prefix'] =3D location.path + '/';\n  }\n  if (delimiter &amp;&amp; delimit=
er.length &gt; 0) {\n    urlParams['delimiter'] =3D delimiter;\n  }\n  if (=
pageToken) {\n    urlParams['pageToken'] =3D pageToken;\n  }\n  if (maxResu=
lts) {\n    urlParams['maxResults'] =3D maxResults;\n  }\n  const urlPart =
=3D location.bucketOnlyServerUrl();\n  const url =3D makeUrl(urlPart);\n  c=
onst method =3D 'GET';\n  const timeout =3D service.maxOperationRetryTime;\=
n  const requestInfo =3D new RequestInfo(\n    url,\n    method,\n    listH=
andler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlPara=
ms =3D urlParams;\n  requestInfo.errorHandler =3D sharedErrorHandler(locati=
on);\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  servic=
e: StorageService,\n  location: Location,\n  mappings: Mappings\n): Request=
Info<string |=3D"" null=3D""> {\n  const urlPart =3D location.fullServerUrl=
();\n  const url =3D makeUrl(urlPart);\n  const method =3D 'GET';\n  const =
timeout =3D service.maxOperationRetryTime;\n  const requestInfo =3D new Req=
uestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings)=
,\n    timeout\n  );\n  requestInfo.errorHandler =3D objectErrorHandler(loc=
ation);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  ser=
vice: StorageService,\n  location: Location,\n  metadata: Partial<metadata>=
,\n  mappings: Mappings\n): RequestInfo<metadata> {\n  const urlPart =3D lo=
cation.fullServerUrl();\n  const url =3D makeUrl(urlPart);\n  const method =
=3D 'PATCH';\n  const body =3D toResourceString(metadata, mappings);\n  con=
st headers =3D { 'Content-Type': 'application/json; charset=3Dutf-8' };\n  =
const timeout =3D service.maxOperationRetryTime;\n  const requestInfo =3D n=
ew RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappin=
gs),\n    timeout\n  );\n  requestInfo.headers =3D headers;\n  requestInfo.=
body =3D body;\n  requestInfo.errorHandler =3D objectErrorHandler(location)=
;\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: St=
orageService,\n  location: Location\n): RequestInfo<void> {\n  const urlPar=
t =3D location.fullServerUrl();\n  const url =3D makeUrl(urlPart);\n  const=
 method =3D 'DELETE';\n  const timeout =3D service.maxOperationRetryTime;\n=
\n  function handler(_xhr: XhrIo, _text: string): void {}\n  const requestI=
nfo =3D new RequestInfo(url, method, handler, timeout);\n  requestInfo.succ=
essCodes =3D [200, 204];\n  requestInfo.errorHandler =3D objectErrorHandler=
(location);\n  return requestInfo;\n}\n\nexport function determineContentTy=
pe_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  =
return (\n    (metadata &amp;&amp; metadata['contentType']) ||\n    (blob &=
amp;&amp; blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexpor=
t function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  =
metadata?: Metadata | null\n): Metadata {\n  const metadataClone =3D Object=
.assign({}, metadata);\n  metadataClone['fullPath'] =3D location.path;\n  m=
etadataClone['size'] =3D blob.size();\n  if (!metadataClone['contentType'])=
 {\n    metadataClone['contentType'] =3D determineContentType_(null, blob);=
\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for upload=
s as Content-Type: multipart.\n */\nexport function multipartUpload(\n  ser=
vice: StorageService,\n  location: Location,\n  mappings: Mappings,\n  blob=
: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<metadata> {\n  con=
st urlPart =3D location.bucketOnlyServerUrl();\n  const headers: { [prop: s=
tring]: string } =3D {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n=
  function genBoundary(): string {\n    let str =3D '';\n    for (let i =3D=
 0; i &lt; 2; i++) {\n      str =3D str + Math.random().toString().slice(2)=
;\n    }\n    return str;\n  }\n  const boundary =3D genBoundary();\n  head=
ers['Content-Type'] =3D 'multipart/related; boundary=3D' + boundary;\n  con=
st metadata_ =3D metadataForUpload_(location, blob, metadata);\n  const met=
adataString =3D toResourceString(metadata_, mappings);\n  const preBlobPart=
 =3D\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: applic=
ation/json; charset=3Dutf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\=
\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metada=
ta_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart =3D '\\r\\n=
--' + boundary + '--';\n  const body =3D FbsBlob.getBlob(preBlobPart, blob,=
 postBlobPart);\n  if (body =3D=3D=3D null) {\n    throw cannotSliceBlob();=
\n  }\n  const urlParams: UrlParams =3D { name: metadata_['fullPath']! };\n=
  const url =3D makeUrl(urlPart);\n  const method =3D 'POST';\n  const time=
out =3D service.maxUploadRetryTime;\n  const requestInfo =3D new RequestInf=
o(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    tim=
eout\n  );\n  requestInfo.urlParams =3D urlParams;\n  requestInfo.headers =
=3D headers;\n  requestInfo.body =3D body.uploadData();\n  requestInfo.erro=
rHandler =3D sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**=
\n * @param current The number of bytes that have been uploaded so far.\n *=
 @param total The total number of bytes in the upload.\n * @param opt_final=
ized True if the server has finished the upload.\n * @param opt_metadata Th=
e upload metadata, should\n *     only be passed if opt_finalized is true.\=
n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metada=
ta: Metadata | null;\n\n  constructor(\n    public current: number,\n    pu=
blic total: number,\n    finalized?: boolean,\n    metadata?: Metadata | nu=
ll\n  ) {\n    this.finalized =3D !!finalized;\n    this.metadata =3D metad=
ata || null;\n  }\n}\n\nexport function checkResumeHeader_(xhr: XhrIo, allo=
wed?: string[]): string {\n  let status: string | null =3D null;\n  try {\n=
    status =3D xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e=
) {\n    handlerCheck(false);\n  }\n  const allowedStatus =3D allowed || ['=
active'];\n  handlerCheck(!!status &amp;&amp; allowedStatus.indexOf(status)=
 !=3D=3D -1);\n  return status as string;\n}\n\nexport function createResum=
ableUpload(\n  service: StorageService,\n  location: Location,\n  mappings:=
 Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<=
string> {\n  const urlPart =3D location.bucketOnlyServerUrl();\n  const met=
adataForUpload =3D metadataForUpload_(location, blob, metadata);\n  const u=
rlParams: UrlParams =3D { name: metadataForUpload['fullPath']! };\n  const =
url =3D makeUrl(urlPart);\n  const method =3D 'POST';\n  const headers =3D =
{\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command':=
 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-=
Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    '=
Content-Type': 'application/json; charset=3Dutf-8'\n  };\n  const body =3D =
toResourceString(metadataForUpload, mappings);\n  const timeout =3D service=
.maxUploadRetryTime;\n\n  function handler(xhr: XhrIo): string {\n    check=
ResumeHeader_(xhr);\n    let url;\n    try {\n      url =3D xhr.getResponse=
Header('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);=
\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n=
  const requestInfo =3D new RequestInfo(url, method, handler, timeout);\n  =
requestInfo.urlParams =3D urlParams;\n  requestInfo.headers =3D headers;\n =
 requestInfo.body =3D body;\n  requestInfo.errorHandler =3D sharedErrorHand=
ler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call =
to fbs.requests.createResumableUpload.\n */\nexport function getResumableUp=
loadStatus(\n  service: StorageService,\n  location: Location,\n  url: stri=
ng,\n  blob: FbsBlob\n): RequestInfo<resumableuploadstatus> {\n  const head=
ers =3D { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Xh=
rIo): ResumableUploadStatus {\n    const status =3D checkResumeHeader_(xhr,=
 ['active', 'final']);\n    let sizeString: string | null =3D null;\n    tr=
y {\n      sizeString =3D xhr.getResponseHeader('X-Goog-Upload-Size-Receive=
d');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!size=
String) {\n      // null or empty string\n      handlerCheck(false);\n    }=
\n\n    const size =3D Number(sizeString);\n    handlerCheck(!isNaN(size));=
\n    return new ResumableUploadStatus(size, blob.size(), status =3D=3D=3D =
'final');\n  }\n  const method =3D 'POST';\n  const timeout =3D service.max=
UploadRetryTime;\n  const requestInfo =3D new RequestInfo(url, method, hand=
ler, timeout);\n  requestInfo.headers =3D headers;\n  requestInfo.errorHand=
ler =3D sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * =
Any uploads via the resumable upload API must transfer a number of bytes\n =
* that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CH=
UNK_SIZE: number =3D 256 * 1024;\n\n/**\n * @param url From a call to fbs.r=
equests.createResumableUpload.\n * @param chunkSize Number of bytes to uplo=
ad.\n * @param status The previous status.\n *     If not passed or null, w=
e start from the beginning.\n * @throws fbs.Error If the upload is already =
complete, the passed in status\n *     has a final size inconsistent with t=
he blob, or the blob cannot be sliced\n *     for upload.\n */\nexport func=
tion continueResumableUpload(\n  location: Location,\n  service: StorageSer=
vice,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: =
Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: (=
(p1: number, p2: number) =3D&gt; void) | null\n): RequestInfo<resumableuplo=
adstatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // ass=
ert(!(opt_status &amp;&amp; opt_status.finalized));\n  const status_ =3D ne=
w ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current =3D st=
atus.current;\n    status_.total =3D status.total;\n  } else {\n    status_=
.current =3D 0;\n    status_.total =3D blob.size();\n  }\n  if (blob.size()=
 !=3D=3D status_.total) {\n    throw serverFileWrongSize();\n  }\n  const b=
ytesLeft =3D status_.total - status_.current;\n  let bytesToUpload =3D byte=
sLeft;\n  if (chunkSize &gt; 0) {\n    bytesToUpload =3D Math.min(bytesToUp=
load, chunkSize);\n  }\n  const startByte =3D status_.current;\n  const end=
Byte =3D startByte + bytesToUpload;\n  const uploadCommand =3D\n    bytesTo=
Upload =3D=3D=3D bytesLeft ? 'upload, finalize' : 'upload';\n  const header=
s =3D {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Of=
fset': status_.current\n  };\n  const body =3D blob.slice(startByte, endByt=
e);\n  if (body =3D=3D=3D null) {\n    throw cannotSliceBlob();\n  }\n\n  f=
unction handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    // =
TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range=
-md5' header comes back with status code 308 responses.\n    // We'll only =
be able to bail out though, because you can't re-upload a\n    // range tha=
t you previously uploaded.\n    const uploadStatus =3D checkResumeHeader_(x=
hr, ['active', 'final']);\n    const newCurrent =3D status_.current + bytes=
ToUpload;\n    const size =3D blob.size();\n    let metadata;\n    if (uplo=
adStatus =3D=3D=3D 'final') {\n      metadata =3D metadataHandler(service, =
mappings)(xhr, text);\n    } else {\n      metadata =3D null;\n    }\n    r=
eturn new ResumableUploadStatus(\n      newCurrent,\n      size,\n      upl=
oadStatus =3D=3D=3D 'final',\n      metadata\n    );\n  }\n  const method =
=3D 'POST';\n  const timeout =3D service.maxUploadRetryTime;\n  const reque=
stInfo =3D new RequestInfo(url, method, handler, timeout);\n  requestInfo.h=
eaders =3D headers;\n  requestInfo.body =3D body.uploadData();\n  requestIn=
fo.progressCallback =3D progressCallback || null;\n  requestInfo.errorHandl=
er =3D sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * =
@license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache Li=
cense, Version 2.0 (the \"License\");\n * you may not use this file except =
in compliance with the License.\n * You may obtain a copy of the License at=
\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless requir=
ed by applicable law or agreed to in writing, software\n * distributed unde=
r the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES =
OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License f=
or the specific language governing permissions and\n * limitations under th=
e License.\n */\nimport * as type from './type';\nimport { FirebaseStorageE=
rror } from './error';\n\nexport type NextFn<t> =3D (value: T) =3D&gt; void=
;\nexport type ErrorFn =3D (error: FirebaseStorageError) =3D&gt; void;\nexp=
ort type CompleteFn =3D () =3D&gt; void;\nexport type Unsubscribe =3D () =
=3D&gt; void;\n\nexport interface StorageObserver<t> {\n  next?: NextFn<t>;=
\n  error?: ErrorFn;\n  complete?: CompleteFn;\n}\n\nexport type Subscribe<=
t> =3D (\n  next?: NextFn<t> | StorageObserver<t>,\n  error?: ErrorFn,\n  c=
omplete?: CompleteFn\n) =3D&gt; Unsubscribe;\n\nexport class Observer<t> im=
plements StorageObserver<t> {\n  next?: NextFn<t>;\n  error?: ErrorFn;\n  c=
omplete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<t> | S=
torageObserver<t>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\=
n    const asFunctions =3D\n      type.isFunction(nextOrObserver) || error =
!=3D null || complete !=3D null;\n    if (asFunctions) {\n      this.next =
=3D nextOrObserver as NextFn<t>;\n      this.error =3D error;\n      this.c=
omplete =3D complete;\n    } else {\n      const observer =3D nextOrObserve=
r as {\n        next?: NextFn<t>;\n        error?: ErrorFn;\n        comple=
te?: CompleteFn;\n      };\n      this.next =3D observer.next;\n      this.=
error =3D observer.error;\n      this.complete =3D observer.complete;\n    =
}\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licens=
ed under the Apache License, Version 2.0 (the \"License\");\n * you may not=
 use this file except in compliance with the License.\n * You may obtain a =
copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0=
\n *\n * Unless required by applicable law or agreed to in writing, softwar=
e\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n=
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.=
\n * See the License for the specific language governing permissions and\n =
* limitations under the License.\n */\n\n/**\n * Returns a function that in=
vokes f with its arguments asynchronously as a\n * microtask, i.e. as soon =
as possible after the current script returns back\n * into browser code.\n =
*/\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport functi=
on async(f: Function): Function {\n  return (...argsToForward: unknown[]) =
=3D&gt; {\n    // eslint-disable-next-line @typescript-eslint/no-floating-p=
romises\n    Promise.resolve().then(() =3D&gt; f(...argsToForward));\n  };\=
n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed unde=
r the Apache License, Version 2.0 (the \"License\");\n * you may not use th=
is file except in compliance with the License.\n * You may obtain a copy of=
 the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n =
* Unless required by applicable law or agreed to in writing, software\n * d=
istributed under the License is distributed on an \"AS IS\" BASIS,\n * WITH=
OUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * Se=
e the License for the specific language governing permissions and\n * limit=
ations under the License.\n */\n/**\n * @fileoverview Defines types for int=
eracting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './imple=
mentation/blob';\nimport { canceled, Code, FirebaseStorageError } from './i=
mplementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  Task=
State,\n  taskStateFromInternalTaskState\n} from './implementation/taskenum=
s';\nimport { Metadata } from './metadata';\nimport {\n  CompleteFn,\n  Err=
orFn,\n  Observer,\n  StorageObserver,\n  Subscribe,\n  Unsubscribe\n} from=
 './implementation/observer';\nimport { Request } from './implementation/re=
quest';\nimport { UploadTaskSnapshot } from './tasksnapshot';\nimport { asy=
nc as fbsAsync } from './implementation/async';\nimport { Mappings, getMapp=
ings } from './implementation/metadata';\nimport {\n  createResumableUpload=
,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  Resumable=
UploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUploa=
d\n} from './implementation/requests';\nimport { StorageReference } from '.=
/reference';\n\n/**\n * Represents a blob being uploaded. Can be used to pa=
use/resume/cancel the\n * upload and manage callbacks for various events.\n=
 * @public\n */\nexport class UploadTask {\n  private _ref: StorageReferenc=
e;\n  /**\n   * @internal\n   */\n  _blob: FbsBlob;\n  /**\n   * @internal\=
n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /*=
*\n   * @internal\n   */\n  _transferred: number =3D 0;\n  private _needToF=
etchStatus: boolean =3D false;\n  private _needToFetchMetadata: boolean =3D=
 false;\n  private _observers: Array<storageobserver<uploadtasksnapshot>&gt=
; =3D [];\n  private _resumable: boolean;\n  /**\n   * @internal\n   */\n  =
_state: InternalTaskState;\n  private _error?: FirebaseStorageError =3D und=
efined;\n  private _uploadUrl?: string =3D undefined;\n  private _request?:=
 Request<unknown> =3D undefined;\n  private _chunkMultiplier: number =3D 1;=
\n  private _errorHandler: (p1: FirebaseStorageError) =3D&gt; void;\n  priv=
ate _metadataErrorHandler: (p1: FirebaseStorageError) =3D&gt; void;\n  priv=
ate _resolve?: (p1: UploadTaskSnapshot) =3D&gt; void =3D undefined;\n  priv=
ate _reject?: (p1: FirebaseStorageError) =3D&gt; void =3D undefined;\n  pri=
vate _promise: Promise<uploadtasksnapshot>;\n\n  /**\n   * @param ref - The=
 firebaseStorage.Reference object this task came\n   *     from, untyped to=
 avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\=
n  constructor(\n    ref: StorageReference,\n    blob: FbsBlob,\n    metada=
ta: Metadata | null =3D null\n  ) {\n    this._ref =3D ref;\n    this._blob=
 =3D blob;\n    this._metadata =3D metadata;\n    this._mappings =3D getMap=
pings();\n    this._resumable =3D this._shouldDoResumable(this._blob);\n   =
 this._state =3D InternalTaskState.RUNNING;\n    this._errorHandler =3D err=
or =3D&gt; {\n      this._request =3D undefined;\n      this._chunkMultipli=
er =3D 1;\n      if (error.codeEquals(Code.CANCELED)) {\n        this._need=
ToFetchStatus =3D true;\n        this.completeTransitions_();\n      } else=
 {\n        this._error =3D error;\n        this._transition(InternalTaskSt=
ate.ERROR);\n      }\n    };\n    this._metadataErrorHandler =3D error =3D&=
gt; {\n      this._request =3D undefined;\n      if (error.codeEquals(Code.=
CANCELED)) {\n        this.completeTransitions_();\n      } else {\n       =
 this._error =3D error;\n        this._transition(InternalTaskState.ERROR);=
\n      }\n    };\n    this._promise =3D new Promise((resolve, reject) =3D&=
gt; {\n      this._resolve =3D resolve;\n      this._reject =3D reject;\n  =
    this._start();\n    });\n\n    // Prevent uncaught rejections on the in=
ternal promise from bubbling out\n    // to the top level with a dummy hand=
ler.\n    this._promise.then(null, () =3D&gt; {});\n  }\n\n  private _makeP=
rogressCallback(): (p1: number, p2: number) =3D&gt; void {\n    const sizeB=
efore =3D this._transferred;\n    return loaded =3D&gt; this._updateProgres=
s(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob)=
: boolean {\n    return blob.size() &gt; 256 * 1024;\n  }\n\n  private _sta=
rt(): void {\n    if (this._state !=3D=3D InternalTaskState.RUNNING) {\n   =
   // This can happen if someone pauses us in a resume callback, for exampl=
e.\n      return;\n    }\n    if (this._request !=3D=3D undefined) {\n     =
 return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl =3D=
=3D=3D undefined) {\n        this._createResumable();\n      } else {\n    =
    if (this._needToFetchStatus) {\n          this._fetchStatus();\n       =
 } else {\n          if (this._needToFetchMetadata) {\n            // Happe=
ns if we miss the metadata on upload completion.\n            this._fetchMe=
tadata();\n          } else {\n            this._continueUpload();\n       =
   }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }=
\n  }\n\n  private _resolveToken(callback: (p1: string | null) =3D&gt; void=
): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-p=
romises\n    this._ref.storage.getAuthToken().then(authToken =3D&gt; {\n   =
   switch (this._state) {\n        case InternalTaskState.RUNNING:\n       =
   callback(authToken);\n          break;\n        case InternalTaskState.C=
ANCELING:\n          this._transition(InternalTaskState.CANCELED);\n       =
   break;\n        case InternalTaskState.PAUSING:\n          this._transit=
ion(InternalTaskState.PAUSED);\n          break;\n        default:\n      }=
\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createRes=
umable(): void {\n    this._resolveToken(authToken =3D&gt; {\n      const r=
equestInfo =3D createResumableUpload(\n        this._ref.storage,\n        =
this._ref._location,\n        this._mappings,\n        this._blob,\n       =
 this._metadata\n      );\n      const createRequest =3D this._ref.storage.=
makeRequest(\n        requestInfo,\n        authToken\n      );\n      this=
._request =3D createRequest;\n      createRequest.getPromise().then((url: s=
tring) =3D&gt; {\n        this._request =3D undefined;\n        this._uploa=
dUrl =3D url;\n        this._needToFetchStatus =3D false;\n        this.com=
pleteTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  priv=
ate _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !=
=3D=3D null);\n    const url =3D this._uploadUrl as string;\n    this._reso=
lveToken(authToken =3D&gt; {\n      const requestInfo =3D getResumableUploa=
dStatus(\n        this._ref.storage,\n        this._ref._location,\n       =
 url,\n        this._blob\n      );\n      const statusRequest =3D this._re=
f.storage.makeRequest(\n        requestInfo,\n        authToken\n      );\n=
      this._request =3D statusRequest;\n      statusRequest.getPromise().th=
en(status =3D&gt; {\n        status =3D status as ResumableUploadStatus;\n =
       this._request =3D undefined;\n        this._updateProgress(status.cu=
rrent);\n        this._needToFetchStatus =3D false;\n        if (status.fin=
alized) {\n          this._needToFetchMetadata =3D true;\n        }\n      =
  this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }=
\n\n  private _continueUpload(): void {\n    const chunkSize =3D RESUMABLE_=
UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status =3D new Resuma=
bleUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );=
\n\n    // TODO(andysoto): assert(this.uploadUrl_ !=3D=3D null);\n    const=
 url =3D this._uploadUrl as string;\n    this._resolveToken(authToken =3D&g=
t; {\n      let requestInfo;\n      try {\n        requestInfo =3D continue=
ResumableUpload(\n          this._ref._location,\n          this._ref.stora=
ge,\n          url,\n          this._blob,\n          chunkSize,\n         =
 this._mappings,\n          status,\n          this._makeProgressCallback()=
\n        );\n      } catch (e) {\n        this._error =3D e;\n        this=
._transition(InternalTaskState.ERROR);\n        return;\n      }\n      con=
st uploadRequest =3D this._ref.storage.makeRequest(\n        requestInfo,\n=
        authToken\n      );\n      this._request =3D uploadRequest;\n      =
uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) =3D&gt; =
{\n        this._increaseMultiplier();\n        this._request =3D undefined=
;\n        this._updateProgress(newStatus.current);\n        if (newStatus.=
finalized) {\n          this._metadata =3D newStatus.metadata;\n          t=
his._transition(InternalTaskState.SUCCESS);\n        } else {\n          th=
is.completeTransitions_();\n        }\n      }, this._errorHandler);\n    }=
);\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize =
=3D RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chun=
k size is 32M.\n    if (currentSize &lt; 32 * 1024 * 1024) {\n      this._c=
hunkMultiplier *=3D 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n =
   this._resolveToken(authToken =3D&gt; {\n      const requestInfo =3D getM=
etadata(\n        this._ref.storage,\n        this._ref._location,\n       =
 this._mappings\n      );\n      const metadataRequest =3D this._ref.storag=
e.makeRequest(\n        requestInfo,\n        authToken\n      );\n      th=
is._request =3D metadataRequest;\n      metadataRequest.getPromise().then(m=
etadata =3D&gt; {\n        this._request =3D undefined;\n        this._meta=
data =3D metadata;\n        this._transition(InternalTaskState.SUCCESS);\n =
     }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpl=
oad(): void {\n    this._resolveToken(authToken =3D&gt; {\n      const requ=
estInfo =3D multipartUpload(\n        this._ref.storage,\n        this._ref=
._location,\n        this._mappings,\n        this._blob,\n        this._me=
tadata\n      );\n      const multipartRequest =3D this._ref.storage.makeRe=
quest(\n        requestInfo,\n        authToken\n      );\n      this._requ=
est =3D multipartRequest;\n      multipartRequest.getPromise().then(metadat=
a =3D&gt; {\n        this._request =3D undefined;\n        this._metadata =
=3D metadata;\n        this._updateProgress(this._blob.size());\n        th=
is._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n=
    });\n  }\n\n  private _updateProgress(transferred: number): void {\n   =
 const old =3D this._transferred;\n    this._transferred =3D transferred;\n=
\n    // A progress update can make the \"transferred\" value smaller (e.g.=
 a\n    // partial upload not completed by server, after which the \"transf=
erred\"\n    // value may reset to the value at the beginning of the reques=
t).\n    if (this._transferred !=3D=3D old) {\n      this._notifyObservers(=
);\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n=
    if (this._state =3D=3D=3D state) {\n      return;\n    }\n    switch (s=
tate) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto)=
:\n        // assert(this.state_ =3D=3D=3D InternalTaskState.RUNNING ||\n  =
      //        this.state_ =3D=3D=3D InternalTaskState.PAUSING);\n        =
this._state =3D state;\n        if (this._request !=3D=3D undefined) {\n   =
       this._request.cancel();\n        }\n        break;\n      case Inter=
nalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.s=
tate_ =3D=3D=3D InternalTaskState.RUNNING);\n        this._state =3D state;=
\n        if (this._request !=3D=3D undefined) {\n          this._request.c=
ancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\=
n        // TODO(andysoto):\n        // assert(this.state_ =3D=3D=3D Intern=
alTaskState.PAUSED ||\n        //        this.state_ =3D=3D=3D InternalTask=
State.PAUSING);\n        const wasPaused =3D this._state =3D=3D=3D Internal=
TaskState.PAUSED;\n        this._state =3D state;\n        if (wasPaused) {=
\n          this._notifyObservers();\n          this._start();\n        }\n=
        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andys=
oto):\n        // assert(this.state_ =3D=3D=3D InternalTaskState.PAUSING);\=
n        this._state =3D state;\n        this._notifyObservers();\n        =
break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\=
n        // assert(this.state_ =3D=3D=3D InternalTaskState.PAUSED ||\n     =
   //        this.state_ =3D=3D=3D InternalTaskState.CANCELING);\n        t=
his._error =3D canceled();\n        this._state =3D state;\n        this._n=
otifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n   =
     // TODO(andysoto):\n        // assert(this.state_ =3D=3D=3D InternalTa=
skState.RUNNING ||\n        //        this.state_ =3D=3D=3D InternalTaskSta=
te.PAUSING ||\n        //        this.state_ =3D=3D=3D InternalTaskState.CA=
NCELING);\n        this._state =3D state;\n        this._notifyObservers();=
\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(an=
dysoto):\n        // assert(this.state_ =3D=3D=3D InternalTaskState.RUNNING=
 ||\n        //        this.state_ =3D=3D=3D InternalTaskState.PAUSING ||\n=
        //        this.state_ =3D=3D=3D InternalTaskState.CANCELING);\n    =
    this._state =3D state;\n        this._notifyObservers();\n        break=
;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_()=
: void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:=
\n        this._transition(InternalTaskState.PAUSED);\n        break;\n    =
  case InternalTaskState.CANCELING:\n        this._transition(InternalTaskS=
tate.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n   =
     this._start();\n        break;\n      default:\n        // TODO(andyso=
to): assert(false);\n        break;\n    }\n  }\n\n  get snapshot(): Upload=
TaskSnapshot {\n    const externalState =3D taskStateFromInternalTaskState(=
this._state);\n    return {\n      bytesTransferred: this._transferred,\n  =
    totalBytes: this._blob.size(),\n      state: externalState,\n      meta=
data: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  =
}\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type=
 of event to listen for.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObs=
erver?:\n      | StorageObserver<uploadtasksnapshot>\n      | ((a: UploadTa=
skSnapshot) =3D&gt; unknown),\n    error?: ErrorFn,\n    completed?: Comple=
teFn\n  ): Unsubscribe | Subscribe<uploadtasksnapshot> {\n    const observe=
r =3D new Observer(nextOrObserver, error, completed);\n    this._addObserve=
r(observer);\n    return () =3D&gt; {\n      this._removeObserver(observer)=
;\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resol=
ves with its snapshot data\n   * when the upload completes.\n   * @param on=
Fulfilled - The fulfillment callback. Promise chaining works as normal.\n  =
 * @param onRejected - The rejection callback.\n   */\n  then<u>(\n    onFu=
lfilled?: ((value: UploadTaskSnapshot) =3D&gt; U | Promise<u>) | null,\n   =
 onRejected?: ((error: FirebaseStorageError) =3D&gt; U | Promise<u>) | null=
\n  ): Promise<u> {\n    // These casts are needed so that TypeScript can i=
nfer the types of the\n    // resulting Promise.\n    return this._promise.=
then<u>(\n      onFulfilled as (value: UploadTaskSnapshot) =3D&gt; U | Prom=
ise<u>,\n      onRejected as ((error: unknown) =3D&gt; Promise<never>) | nu=
ll\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected=
)`.\n   */\n  catch<t>(\n    onRejected: (p1: FirebaseStorageError) =3D&gt;=
 T | Promise<t>\n  ): Promise<t> {\n    return this.then(null, onRejected);=
\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserve=
r(observer: Observer<uploadtasksnapshot>): void {\n    this._observers.push=
(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Remove=
s the given observer.\n   */\n  private _removeObserver(observer: Observer<=
uploadtasksnapshot>): void {\n    const i =3D this._observers.indexOf(obser=
ver);\n    if (i !=3D=3D -1) {\n      this._observers.splice(i, 1);\n    }\=
n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n =
   const observers =3D this._observers.slice();\n    observers.forEach(obse=
rver =3D&gt; {\n      this._notifyObserver(observer);\n    });\n  }\n\n  pr=
ivate _finishPromise(): void {\n    if (this._resolve !=3D=3D undefined) {\=
n      let triggered =3D true;\n      switch (taskStateFromInternalTaskStat=
e(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this=
._resolve.bind(null, this.snapshot))();\n          break;\n        case Tas=
kState.CANCELED:\n        case TaskState.ERROR:\n          const toCall =3D=
 this._reject as (p1: FirebaseStorageError) =3D&gt; void;\n          fbsAsy=
nc(toCall.bind(null, this._error as FirebaseStorageError))();\n          br=
eak;\n        default:\n          triggered =3D false;\n          break;\n =
     }\n      if (triggered) {\n        this._resolve =3D undefined;\n     =
   this._reject =3D undefined;\n      }\n    }\n  }\n\n  private _notifyObs=
erver(observer: Observer<uploadtasksnapshot>): void {\n    const externalSt=
ate =3D taskStateFromInternalTaskState(this._state);\n    switch (externalS=
tate) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n     =
   if (observer.next) {\n          fbsAsync(observer.next.bind(observer, th=
is.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\=
n        if (observer.complete) {\n          fbsAsync(observer.complete.bin=
d(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\=
n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsA=
sync(\n            observer.error.bind(observer, this._error as FirebaseSto=
rageError)\n          )();\n        }\n        break;\n      default:\n    =
    // TODO(andysoto): assert(false);\n        if (observer.error) {\n     =
     fbsAsync(\n            observer.error.bind(observer, this._error as Fi=
rebaseStorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * R=
esumes a paused task. Has no effect on a currently running or failed task.\=
n   * @returns True if the operation took effect, false if ignored.\n   */\=
n  resume(): boolean {\n    const valid =3D\n      this._state =3D=3D=3D In=
ternalTaskState.PAUSED ||\n      this._state =3D=3D=3D InternalTaskState.PA=
USING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING)=
;\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running =
task. Has no effect on a paused or failed task.\n   * @returns True if the =
operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    =
const valid =3D this._state =3D=3D=3D InternalTaskState.RUNNING;\n    if (v=
alid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    ret=
urn valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. =
Has no effect on a complete or\n   * failed task.\n   * @returns True if th=
e operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n =
   const valid =3D\n      this._state =3D=3D=3D InternalTaskState.RUNNING |=
|\n      this._state =3D=3D=3D InternalTaskState.PAUSING;\n    if (valid) {=
\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return v=
alid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Li=
censed under the Apache License, Version 2.0 (the \"License\");\n * you may=
 not use this file except in compliance with the License.\n * You may obtai=
n a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE=
-2.0\n *\n * Unless required by applicable law or agreed to in writing, sof=
tware\n * distributed under the License is distributed on an \"AS IS\" BASI=
S,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or impl=
ied.\n * See the License for the specific language governing permissions an=
d\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines =
the Firebase StorageReference class.\n */\n\nimport { FbsBlob } from './imp=
lementation/blob';\nimport { Location } from './implementation/location';\n=
import { getMappings } from './implementation/metadata';\nimport { child, p=
arent, lastComponent } from './implementation/path';\nimport {\n  list as r=
equestsList,\n  getMetadata as requestsGetMetadata,\n  updateMetadata as re=
questsUpdateMetadata,\n  getDownloadUrl as requestsGetDownloadUrl,\n  delet=
eObject as requestsDeleteObject,\n  multipartUpload\n} from './implementati=
on/requests';\nimport { StringFormat, dataFromString } from './implementati=
on/string';\nimport { Metadata } from './metadata';\nimport { StorageServic=
e } from './service';\nimport { ListOptions, ListResult } from './list';\ni=
mport { UploadTask } from './task';\nimport { invalidRootOperation, noDownl=
oadURL } from './implementation/error';\nimport { validateNumber } from './=
implementation/type';\nimport { UploadResult } from './tasksnapshot';\n\n/*=
*\n * Provides methods to interact with a bucket in the Firebase Storage se=
rvice.\n * @public\n * @param location - An fbs.location, or the URL at\n *=
     which to base this object, in one of the following forms:\n *         =
gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapi=
s.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *=
     Any query or fragment strings will be ignored in the http[s]\n *     f=
ormat. If no value is passed, the storage object will use a URL based on\n =
*     the project ID of the base firebase.App instance.\n */\nexport class =
StorageReference {\n  /**\n   * @internal\n   */\n  _location: Location;\n\=
n  constructor(private _service: StorageService, location: string | Locatio=
n) {\n    if (location instanceof Location) {\n      this._location =3D loc=
ation;\n    } else {\n      this._location =3D Location.makeFromUrl(locatio=
n);\n    }\n  }\n\n  /**\n   * @returns The URL for the bucket and path thi=
s object references,\n   *     in the form gs://<bucket>/<object-path>\n   =
* @override\n   */\n  toString(): string {\n    return 'gs://' + this._loca=
tion.bucket + '/' + this._location.path;\n  }\n\n  protected newRef(\n    s=
ervice: StorageService,\n    location: Location\n  ): StorageReference {\n =
   return new StorageReference(service, location);\n  }\n\n  /**\n   * @ret=
urns An reference to the root of this\n   *     object's bucket.\n   */\n  =
get root(): StorageReference {\n    const location =3D new Location(this._l=
ocation.bucket, '');\n    return this.newRef(this._service, location);\n  }=
\n\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  g=
et fullPath(): string {\n    return this._location.path;\n  }\n\n  get name=
(): string {\n    return lastComponent(this._location.path);\n  }\n\n  get =
storage(): StorageService {\n    return this._service;\n  }\n\n  get parent=
(): StorageReference | null {\n    const newPath =3D parent(this._location.=
path);\n    if (newPath =3D=3D=3D null) {\n      return null;\n    }\n    c=
onst location =3D new Location(this._location.bucket, newPath);\n    return=
 new StorageReference(this._service, location);\n  }\n\n  _throwIfRoot(name=
: string): void {\n    if (this._location.path =3D=3D=3D '') {\n      throw=
 invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Uploads data to this=
 object's location.\n * The upload is not resumable.\n * @public\n * @param=
 ref - StorageReference where data should be uploaded.\n * @param data - Th=
e data to upload.\n * @param metadata - Metadata for the newly uploaded dat=
a.\n * @returns A Promise containing an UploadResult\n */\nexport function =
uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBu=
ffer,\n  metadata?: Metadata\n): Promise<uploadresult> {\n  ref._throwIfRoo=
t('uploadBytes');\n  return ref.storage\n    .getAuthToken()\n    .then(aut=
hToken =3D&gt; {\n      const requestInfo =3D multipartUpload(\n        ref=
.storage,\n        ref._location,\n        getMappings(),\n        new FbsB=
lob(data, true),\n        metadata\n      );\n      const multipartRequest =
=3D ref.storage.makeRequest(requestInfo, authToken);\n      return multipar=
tRequest.getPromise();\n    })\n    .then(finalMetadata =3D&gt; {\n      re=
turn {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}=
\n\n/**\n * Uploads data to this object's location.\n * The upload can be p=
aused and resumed, and exposes progress updates.\n * @public\n * @param ref=
 - StorageReference where data should be uploaded.\n * @param data - The da=
ta to upload.\n * @param metadata - Metadata for the newly uploaded data.\n=
 * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  re=
f: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?=
: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n =
 return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Upl=
oads a string to this object's location.\n * The upload is not resumable.\n=
 * @public\n * @param ref - StorageReference where string should be uploade=
d.\n * @param value - The string to upload.\n * @param format - The format =
of the string to upload.\n * @param metadata - Metadata for the newly uploa=
ded string.\n * @returns A Promise containing an UploadResult\n */\nexport =
function uploadString(\n  ref: StorageReference,\n  value: string,\n  forma=
t: StringFormat =3D StringFormat.RAW,\n  metadata?: Metadata\n): Promise<up=
loadresult> {\n  ref._throwIfRoot('uploadString');\n  const data =3D dataFr=
omString(format, value);\n  const metadataClone =3D { ...metadata } as Meta=
data;\n  if (metadataClone['contentType'] =3D=3D null &amp;&amp; data.conte=
ntType !=3D null) {\n    metadataClone['contentType'] =3D data.contentType!=
;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * =
List all items (files) and prefixes (folders) under this storage reference.=
\n *\n * This is a helper method for calling list() repeatedly until there =
are\n * no more results. The default pagination size is 1000.\n *\n * Note:=
 The results may not be consistent if objects are changed while this\n * op=
eration is running.\n *\n * Warning: listAll may potentially consume too ma=
ny resources if there are\n * too many results.\n * @public\n * @param ref =
- StorageReference to get list from.\n *\n * @returns A Promise that resolv=
es with all the items and prefixes under\n *      the current storage refer=
ence. `prefixes` contains references to\n *      sub-directories and `items=
` contains references to objects in this\n *      folder. `nextPageToken` i=
s never returned.\n */\nexport function listAll(ref: StorageReference): Pro=
mise<listresult> {\n  const accumulator: ListResult =3D {\n    prefixes: []=
,\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() =
=3D&gt; accumulator);\n}\n\n/**\n * Separated from listAll because async fu=
nctions can't use \"arguments\".\n * @internal\n * @param ref\n * @param ac=
cumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: =
StorageReference,\n  accumulator: ListResult,\n  pageToken?: string\n): Pro=
mise<void> {\n  const opt: ListOptions =3D {\n    // maxResults is 1000 by =
default.\n    pageToken\n  };\n  const nextPage =3D await list(ref, opt);\n=
  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.pus=
h(...nextPage.items);\n  if (nextPage.nextPageToken !=3D null) {\n    await=
 listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n =
* List items (files) and prefixes (folders) under this storage reference.\n=
 *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS=
 is a key-blob store. Firebase Storage imposes the semantic of '/'\n * deli=
mited folder structure.\n * Refer to GCS's List API if you want to learn mo=
re.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does =
not\n * support objects whose paths end with \"/\" or contain two consecuti=
ve\n * \"/\"s. Firebase Storage List API will filter these unsupported obje=
cts.\n * list() may fail if there are too many unsupported objects in the b=
ucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\=
n * @param options - See ListOptions for details.\n * @returns A Promise th=
at resolves with the items and prefixes.\n *      `prefixes` contains refer=
ences to sub-folders and `items`\n *      contains references to objects in=
 this folder. `nextPageToken`\n *      can be used to get the rest of the r=
esults.\n */\nexport async function list(\n  ref: StorageReference,\n  opti=
ons?: ListOptions | null\n): Promise<listresult> {\n  if (options !=3D null=
) {\n    if (typeof options.maxResults =3D=3D=3D 'number') {\n      validat=
eNumber(\n        'options.maxResults',\n        /* minValue=3D */ 1,\n    =
    /* maxValue=3D */ 1000,\n        options.maxResults\n      );\n    }\n =
 }\n  const authToken =3D await ref.storage.getAuthToken();\n  const op =3D=
 options || {};\n  const requestInfo =3D requestsList(\n    ref.storage,\n =
   ref._location,\n    /*delimiter=3D */ '/',\n    op.pageToken,\n    op.ma=
xResults\n  );\n  return ref.storage.makeRequest(requestInfo, authToken).ge=
tPromise();\n}\n\n/**\n * A promise that resolves with the metadata for thi=
s object. If this\n * object doesn't exist or metadata cannot be retreived,=
 the promise is\n * rejected.\n * @public\n * @param ref - StorageReference=
 to get metadata from.\n */\nexport async function getMetadata(ref: Storage=
Reference): Promise<metadata> {\n  ref._throwIfRoot('getMetadata');\n  cons=
t authToken =3D await ref.storage.getAuthToken();\n  const requestInfo =3D =
requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings=
()\n  );\n  return ref.storage.makeRequest(requestInfo, authToken).getPromi=
se();\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @=
param ref - StorageReference to update metadata for.\n * @param metadata - =
The new metadata for the object.\n *     Only values that have been explici=
tly set will be changed. Explicitly\n *     setting a value to null will re=
move the metadata.\n * @returns A promise that resolves\n *     with the ne=
w metadata for this object.\n *     See `firebaseStorage.Reference.prototyp=
e.getMetadata`\n */\nexport async function updateMetadata(\n  ref: StorageR=
eference,\n  metadata: Partial<metadata>\n): Promise<metadata> {\n  ref._th=
rowIfRoot('updateMetadata');\n  const authToken =3D await ref.storage.getAu=
thToken();\n  const requestInfo =3D requestsUpdateMetadata(\n    ref.storag=
e,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return re=
f.storage.makeRequest(requestInfo, authToken).getPromise();\n}\n\n/**\n * R=
eturns the download URL for the given Reference.\n * @public\n * @returns A=
 promise that resolves with the download\n *     URL for this object.\n */\=
nexport async function getDownloadURL(ref: StorageReference): Promise<strin=
g> {\n  ref._throwIfRoot('getDownloadURL');\n  const authToken =3D await re=
f.storage.getAuthToken();\n  const requestInfo =3D requestsGetDownloadUrl(\=
n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return re=
f.storage\n    .makeRequest(requestInfo, authToken)\n    .getPromise()\n   =
 .then(url =3D&gt; {\n      if (url =3D=3D=3D null) {\n        throw noDown=
loadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the o=
bject at this location.\n * @public\n * @param ref - StorageReference for o=
bject to delete.\n * @returns A promise that resolves if the deletion succe=
eds.\n */\nexport async function deleteObject(ref: StorageReference): Promi=
se<void> {\n  ref._throwIfRoot('deleteObject');\n  const authToken =3D awai=
t ref.storage.getAuthToken();\n  const requestInfo =3D requestsDeleteObject=
(ref.storage, ref._location);\n  return ref.storage.makeRequest(requestInfo=
, authToken).getPromise();\n}\n\n/**\n * Returns reference for object obtai=
ned by appending `childPath` to `ref`.\n * @internal\n *\n * @param ref - S=
torageReference to get child of.\n * @param childPath - Child path from pro=
vided ref.\n * @returns A reference to the object obtained by\n * appending=
 childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *=
/\nexport function getChild(\n  ref: StorageReference,\n  childPath: string=
\n): StorageReference {\n  const newPath =3D child(ref._location.path, chil=
dPath);\n  const location =3D new Location(ref._location.bucket, newPath);\=
n  return new StorageReference(ref.storage, location);\n}\n","/**\n * @lice=
nse\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License=
, Version 2.0 (the \"License\");\n * you may not use this file except in co=
mpliance with the License.\n * You may obtain a copy of the License at\n *\=
n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by=
 applicable law or agreed to in writing, software\n * distributed under the=
 License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CO=
NDITIONS OF ANY KIND, either express or implied.\n * See the License for th=
e specific language governing permissions and\n * limitations under the Lic=
ense.\n */\n\nimport * as types from '@firebase/storage-types';\nimport { R=
eferenceCompat } from './reference';\nimport { UploadTaskCompat } from './t=
ask';\nimport { UploadTaskSnapshot } from '../src/tasksnapshot';\nimport { =
Metadata } from '../src/metadata';\n\nexport class UploadTaskSnapshotCompat=
 implements types.UploadTaskSnapshot {\n  constructor(\n    readonly _deleg=
ate: UploadTaskSnapshot,\n    readonly task: UploadTaskCompat,\n    readonl=
y ref: ReferenceCompat\n  ) {}\n\n  get bytesTransferred(): number {\n    r=
eturn this._delegate.bytesTransferred;\n  }\n  get metadata(): Metadata {\n=
    return this._delegate.metadata;\n  }\n  get state(): string {\n    retu=
rn this._delegate.state;\n  }\n  get totalBytes(): number {\n    return thi=
s._delegate.totalBytes;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Goo=
gle LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"Licen=
se\");\n * you may not use this file except in compliance with the License.=
\n * You may obtain a copy of the License at\n *\n *   http://www.apache.or=
g/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed =
to in writing, software\n * distributed under the License is distributed on=
 an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, eith=
er express or implied.\n * See the License for the specific language govern=
ing permissions and\n * limitations under the License.\n */\n\nimport { Upl=
oadTask } from '../src/task';\nimport { UploadTaskSnapshotCompat } from './=
tasksnapshot';\nimport { TaskEvent } from '../src/implementation/taskenums'=
;\nimport * as types from '@firebase/storage-types';\nimport {\n  StorageOb=
server,\n  ErrorFn,\n  CompleteFn,\n  Subscribe,\n  Unsubscribe\n} from '..=
/src/implementation/observer';\nimport { UploadTaskSnapshot } from '../src/=
tasksnapshot';\nimport { ReferenceCompat } from './reference';\nimport { Fi=
rebaseStorageError } from '../src/implementation/error';\n\nexport class Up=
loadTaskCompat implements types.UploadTask {\n  constructor(\n    private r=
eadonly _delegate: UploadTask,\n    private readonly _ref: ReferenceCompat\=
n  ) {}\n\n  get snapshot(): UploadTaskSnapshotCompat {\n    return new Upl=
oadTaskSnapshotCompat(\n      this._delegate.snapshot,\n      this,\n      =
this._ref\n    );\n  }\n\n  cancel =3D this._delegate.cancel.bind(this._del=
egate);\n  catch =3D this._delegate.catch.bind(this._delegate);\n  pause =
=3D this._delegate.pause.bind(this._delegate);\n  resume =3D this._delegate=
.resume.bind(this._delegate);\n\n  then(\n    onFulfilled?: ((a: UploadTask=
SnapshotCompat) =3D&gt; unknown) | null,\n    onRejected?: ((a: FirebaseSto=
rageError) =3D&gt; unknown) | null\n  ): Promise<unknown> {\n    return thi=
s._delegate.then(snapshot =3D&gt; {\n      if (onFulfilled) {\n        retu=
rn onFulfilled(\n          new UploadTaskSnapshotCompat(snapshot, this, thi=
s._ref)\n        );\n      }\n    }, onRejected);\n  }\n\n  on(\n    type: =
TaskEvent,\n    nextOrObserver?:\n      | types.StorageObserver<uploadtasks=
napshotcompat>\n      | null\n      | ((a: UploadTaskSnapshotCompat) =3D&gt=
; unknown),\n    error?: ErrorFn | null,\n    completed?: CompleteFn | null=
\n  ): Unsubscribe | Subscribe<uploadtasksnapshotcompat> {\n    let wrapped=
NextOrObserver:\n      | StorageObserver<uploadtasksnapshot>\n      | undef=
ined\n      | ((a: UploadTaskSnapshot) =3D&gt; unknown) =3D undefined;\n   =
 if (!!nextOrObserver) {\n      if (typeof nextOrObserver =3D=3D=3D 'functi=
on') {\n        wrappedNextOrObserver =3D (taskSnapshot: UploadTaskSnapshot=
) =3D&gt;\n          nextOrObserver(\n            new UploadTaskSnapshotCom=
pat(taskSnapshot, this, this._ref)\n          );\n      } else {\n        w=
rappedNextOrObserver =3D {\n          next: !!nextOrObserver.next\n        =
    ? (taskSnapshot: UploadTaskSnapshot) =3D&gt;\n                nextOrObs=
erver.next!(\n                  new UploadTaskSnapshotCompat(taskSnapshot, =
this, this._ref)\n                )\n            : undefined,\n          co=
mplete: nextOrObserver.complete || undefined,\n          error: nextOrObser=
ver.error || undefined\n        };\n      }\n    }\n    return this._delega=
te.on(\n      type,\n      wrappedNextOrObserver,\n      error || undefined=
,\n      completed || undefined\n    );\n  }\n}\n","/**\n * @license\n * Co=
pyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version =
2.0 (the \"License\");\n * you may not use this file except in compliance w=
ith the License.\n * You may obtain a copy of the License at\n *\n *   http=
://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicabl=
e law or agreed to in writing, software\n * distributed under the License i=
s distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS O=
F ANY KIND, either express or implied.\n * See the License for the specific=
 language governing permissions and\n * limitations under the License.\n */=
\n\nimport * as types from '@firebase/storage-types';\nimport { ListResult =
} from '../src/list';\nimport { ReferenceCompat } from './reference';\nimpo=
rt { StorageServiceCompat } from './service';\n\nexport class ListResultCom=
pat implements types.ListResult {\n  constructor(\n    private readonly _de=
legate: ListResult,\n    private readonly _service: StorageServiceCompat\n =
 ) {}\n\n  get prefixes(): ReferenceCompat[] {\n    return this._delegate.p=
refixes.map(\n      ref =3D&gt; new ReferenceCompat(ref, this._service)\n  =
  );\n  }\n  get items(): ReferenceCompat[] {\n    return this._delegate.it=
ems.map(\n      ref =3D&gt; new ReferenceCompat(ref, this._service)\n    );=
\n  }\n  get nextPageToken(): string | null {\n    return this._delegate.ne=
xtPageToken || null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google=
 LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\=
");\n * you may not use this file except in compliance with the License.\n =
* You may obtain a copy of the License at\n *\n *  http://www.apache.org/li=
censes/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to i=
n writing, software\n * distributed under the License is distributed on an =
\"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either e=
xpress or implied.\n * See the License for the specific language governing =
permissions and\n * limitations under the License.\n */\n\nimport {\n  Stor=
ageReference,\n  getChild,\n  uploadBytesResumable,\n  list,\n  listAll,\n =
 getDownloadURL,\n  getMetadata,\n  updateMetadata,\n  deleteObject\n} from=
 '../src/reference';\nimport * as types from '@firebase/storage-types';\nim=
port { Metadata } from '../src/metadata';\nimport { dataFromString, StringF=
ormat } from '../src/implementation/string';\nimport { ListOptions } from '=
../src/list';\nimport { UploadTaskCompat } from './task';\nimport { ListRes=
ultCompat } from './list';\nimport { StorageServiceCompat } from './service=
';\nimport { invalidRootOperation } from '../src/implementation/error';\nim=
port { UploadTask } from '../src/task';\nimport { FbsBlob } from '../src/im=
plementation/blob';\n\nexport class ReferenceCompat implements types.Refere=
nce {\n  constructor(\n    private readonly _delegate: StorageReference,\n =
   public storage: StorageServiceCompat\n  ) {}\n\n  get name(): string {\n=
    return this._delegate.name;\n  }\n\n  get bucket(): string {\n    retur=
n this._delegate.bucket;\n  }\n\n  get fullPath(): string {\n    return thi=
s._delegate.fullPath;\n  }\n\n  toString(): string {\n    return this._dele=
gate.toString();\n  }\n\n  /**\n   * @returns A reference to the object obt=
ained by\n   * appending childPath, removing any duplicate, beginning, or t=
railing\n   * slashes.\n   */\n  child(childPath: string): types.Reference =
{\n    const reference =3D getChild(this._delegate, childPath);\n    return=
 new ReferenceCompat(reference, this.storage);\n  }\n\n  get root(): types.=
Reference {\n    return new ReferenceCompat(this._delegate.root, this.stora=
ge);\n  }\n\n  /**\n   * @returns A reference to the parent of the\n   * cu=
rrent object, or null if the current object is the root.\n   */\n  get pare=
nt(): types.Reference | null {\n    const reference =3D this._delegate.pare=
nt;\n    if (reference =3D=3D null) {\n      return null;\n    }\n    retur=
n new ReferenceCompat(reference, this.storage);\n  }\n\n  /**\n   * Uploads=
 a blob to this object's location.\n   * @param data - The blob to upload.\=
n   * @returns An UploadTask that lets you control and\n   * observe the up=
load.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metad=
ata?: Metadata\n  ): types.UploadTask {\n    this._throwIfRoot('put');\n   =
 return new UploadTaskCompat(\n      uploadBytesResumable(this._delegate, d=
ata, metadata),\n      this\n    );\n  }\n\n  /**\n   * Uploads a string to=
 this object's location.\n   * @param value - The string to upload.\n   * @=
param format - The format of the string to upload.\n   * @returns An Upload=
Task that lets you control and\n   * observe the upload.\n   */\n  putStrin=
g(\n    value: string,\n    format: StringFormat =3D StringFormat.RAW,\n   =
 metadata?: Metadata\n  ): types.UploadTask {\n    this._throwIfRoot('putSt=
ring');\n    const data =3D dataFromString(format, value);\n    const metad=
ataClone =3D { ...metadata } as Metadata;\n    if (metadataClone['contentTy=
pe'] =3D=3D null &amp;&amp; data.contentType !=3D null) {\n      metadataCl=
one['contentType'] =3D data.contentType;\n    }\n    return new UploadTaskC=
ompat(\n      new UploadTask(\n        this._delegate,\n        new FbsBlob=
(data.data, true),\n        metadataClone\n      ),\n      this\n    );\n  =
}\n\n  /**\n   * List all items (files) and prefixes (folders) under this s=
torage reference.\n   *\n   * This is a helper method for calling list() re=
peatedly until there are\n   * no more results. The default pagination size=
 is 1000.\n   *\n   * Note: The results may not be consistent if objects ar=
e changed while this\n   * operation is running.\n   *\n   * Warning: listA=
ll may potentially consume too many resources if there are\n   * too many r=
esults.\n   *\n   * @returns A Promise that resolves with all the items and=
 prefixes under\n   *  the current storage reference. `prefixes` contains r=
eferences to\n   *  sub-directories and `items` contains references to obje=
cts in this\n   *  folder. `nextPageToken` is never returned.\n   */\n  lis=
tAll(): Promise<types.listresult> {\n    return listAll(this._delegate).the=
n(\n      r =3D&gt; new ListResultCompat(r, this.storage)\n    );\n  }\n\n =
 /**\n   * List items (files) and prefixes (folders) under this storage ref=
erence.\n   *\n   * List API is only available for Firebase Rules Version 2=
.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semanti=
c of '/'\n   * delimited folder structure. Refer to GCS's List API if you w=
ant to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Fir=
ebase Storage does not\n   * support objects whose paths end with \"/\" or =
contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter=
 these unsupported objects.\n   * list() may fail if there are too many uns=
upported objects in the bucket.\n   *\n   * @param options - See ListOption=
s for details.\n   * @returns A Promise that resolves with the items and pr=
efixes.\n   * `prefixes` contains references to sub-folders and `items`\n  =
 * contains references to objects in this folder. `nextPageToken`\n   * can=
 be used to get the rest of the results.\n   */\n  list(options?: ListOptio=
ns | null): Promise<types.listresult> {\n    return list(this._delegate, op=
tions).then(\n      r =3D&gt; new ListResultCompat(r, this.storage)\n    );=
\n  }\n\n  /**\n   * A promise that resolves with the metadata for this obj=
ect. If this\n   * object doesn't exist or metadata cannot be retreived, th=
e promise is\n   * rejected.\n   */\n  getMetadata(): Promise<metadata> {\n=
    return getMetadata(this._delegate);\n  }\n\n  /**\n   * Updates the met=
adata for this object.\n   * @param metadata - The new metadata for the obj=
ect.\n   * Only values that have been explicitly set will be changed. Expli=
citly\n   * setting a value to null will remove the metadata.\n   * @return=
s A promise that resolves\n   * with the new metadata for this object.\n   =
* @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMeta=
data(metadata: Metadata): Promise<metadata> {\n    return updateMetadata(th=
is._delegate, metadata);\n  }\n\n  /**\n   * @returns A promise that resolv=
es with the download\n   * URL for this object.\n   */\n  getDownloadURL():=
 Promise<string> {\n    return getDownloadURL(this._delegate);\n  }\n\n  /*=
*\n   * Deletes the object at this location.\n   * @returns A promise that =
resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n   =
 this._throwIfRoot('delete');\n    return deleteObject(this._delegate);\n  =
}\n\n  private _throwIfRoot(name: string): void {\n    if (this._delegate._=
location.path =3D=3D=3D '') {\n      throw invalidRootOperation(name);\n   =
 }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licen=
sed under the Apache License, Version 2.0 (the \"License\");\n * you may no=
t use this file except in compliance with the License.\n * You may obtain a=
 copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.=
0\n *\n * Unless required by applicable law or agreed to in writing, softwa=
re\n * distributed under the License is distributed on an \"AS IS\" BASIS,\=
n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied=
.\n * See the License for the specific language governing permissions and\n=
 * limitations under the License.\n */\nimport { FirebaseStorageError } fro=
m './error';\nimport { Request } from './request';\n\n/**\n * A request who=
se promise always fails.\n */\nexport class FailRequest<t> implements Reque=
st<t> {\n  promise_: Promise<t>;\n\n  constructor(error: FirebaseStorageErr=
or) {\n    this.promise_ =3D Promise.reject<t>(error);\n  }\n\n  /** @inher=
itDoc */\n  getPromise(): Promise<t> {\n    return this.promise_;\n  }\n\n =
 /** @inheritDoc */\n  cancel(_appDelete =3D false): void {}\n}\n","/**\n *=
 @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache L=
icense, Version 2.0 (the \"License\");\n * you may not use this file except=
 in compliance with the License.\n * You may obtain a copy of the License a=
t\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless requi=
red by applicable law or agreed to in writing, software\n * distributed und=
er the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES=
 OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License =
for the specific language governing permissions and\n * limitations under t=
he License.\n */\n\n/**\n * @fileoverview Defines methods used to actually =
send HTTP requests from\n * abstract representations.\n */\n\nimport * as b=
ackoff from './backoff';\nimport {\n  FirebaseStorageError,\n  unknown,\n  =
appDeleted,\n  canceled,\n  retryLimitExceeded\n} from './error';\nimport {=
 RequestInfo } from './requestinfo';\nimport * as type from './type';\nimpo=
rt * as UrlUtils from './url';\nimport { Headers, XhrIo, ErrorCode } from '=
./xhrio';\nimport { XhrIoPool } from './xhriopool';\n\nexport interface Req=
uest<t> {\n  getPromise(): Promise<t>;\n\n  /**\n   * Cancels the request. =
IMPORTANT: the promise may still be resolved with an\n   * appropriate valu=
e (if the request is finished before you call this method,\n   * but the pr=
omise has not yet been resolved), so don't just assume it will be\n   * rej=
ected if you call this function.\n   * @param appDelete - True if the cance=
lation came from the app being deleted.\n   */\n  cancel(appDelete?: boolea=
n): void;\n}\n\nclass NetworkRequest<t> implements Request<t> {\n  private =
url_: string;\n  private method_: string;\n  private headers_: Headers;\n  =
private body_: string | Blob | Uint8Array | null;\n  private successCodes_:=
 number[];\n  private additionalRetryCodes_: number[];\n  private pendingXh=
r_: XhrIo | null =3D null;\n  private backoffId_: backoff.id | null =3D nul=
l;\n  private resolve_!: (value?: T | PromiseLike<t> | undefined) =3D&gt; v=
oid;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  p=
rivate reject_!: (reason?: any) =3D&gt; void;\n  private canceled_: boolean=
 =3D false;\n  private appDelete_: boolean =3D false;\n  private callback_:=
 (p1: XhrIo, p2: string) =3D&gt; T;\n  private errorCallback_:\n    | ((p1:=
 XhrIo, p2: FirebaseStorageError) =3D&gt; FirebaseStorageError)\n    | null=
;\n  private progressCallback_: ((p1: number, p2: number) =3D&gt; void) | n=
ull;\n  private timeout_: number;\n  private pool_: XhrIoPool;\n  promise_:=
 Promise<t>;\n\n  constructor(\n    url: string,\n    method: string,\n    =
headers: Headers,\n    body: string | Blob | Uint8Array | null,\n    succes=
sCodes: number[],\n    additionalRetryCodes: number[],\n    callback: (p1: =
XhrIo, p2: string) =3D&gt; T,\n    errorCallback:\n      | ((p1: XhrIo, p2:=
 FirebaseStorageError) =3D&gt; FirebaseStorageError)\n      | null,\n    ti=
meout: number,\n    progressCallback: ((p1: number, p2: number) =3D&gt; voi=
d) | null,\n    pool: XhrIoPool\n  ) {\n    this.url_ =3D url;\n    this.me=
thod_ =3D method;\n    this.headers_ =3D headers;\n    this.body_ =3D body;=
\n    this.successCodes_ =3D successCodes.slice();\n    this.additionalRetr=
yCodes_ =3D additionalRetryCodes.slice();\n    this.callback_ =3D callback;=
\n    this.errorCallback_ =3D errorCallback;\n    this.progressCallback_ =
=3D progressCallback;\n    this.timeout_ =3D timeout;\n    this.pool_ =3D p=
ool;\n    this.promise_ =3D new Promise((resolve, reject) =3D&gt; {\n      =
this.resolve_ =3D resolve;\n      this.reject_ =3D reject;\n      this.star=
t_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n=
  private start_(): void {\n    const self =3D this;\n\n    function doTheR=
equest(\n      backoffCallback: (p1: boolean, ...p2: unknown[]) =3D&gt; voi=
d,\n      canceled: boolean\n    ): void {\n      if (canceled) {\n        =
backoffCallback(false, new RequestEndStatus(false, null, true));\n        r=
eturn;\n      }\n      const xhr =3D self.pool_.createXhrIo();\n      self.=
pendingXhr_ =3D xhr;\n\n      function progressListener(progressEvent: Prog=
ressEvent): void {\n        const loaded =3D progressEvent.loaded;\n       =
 const total =3D progressEvent.lengthComputable ? progressEvent.total : -1;=
\n        if (self.progressCallback_ !=3D=3D null) {\n          self.progre=
ssCallback_(loaded, total);\n        }\n      }\n      if (self.progressCal=
lback_ !=3D=3D null) {\n        xhr.addUploadProgressListener(progressListe=
ner);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-f=
loating-promises\n      xhr\n        .send(self.url_, self.method_, self.bo=
dy_, self.headers_)\n        .then((xhr: XhrIo) =3D&gt; {\n          if (se=
lf.progressCallback_ !=3D=3D null) {\n            xhr.removeUploadProgressL=
istener(progressListener);\n          }\n          self.pendingXhr_ =3D nul=
l;\n          xhr =3D xhr as XhrIo;\n          const hitServer =3D xhr.getE=
rrorCode() =3D=3D=3D ErrorCode.NO_ERROR;\n          const status =3D xhr.ge=
tStatus();\n          if (!hitServer || self.isRetryStatusCode_(status)) {\=
n            const wasCanceled =3D xhr.getErrorCode() =3D=3D=3D ErrorCode.A=
BORT;\n            backoffCallback(\n              false,\n              ne=
w RequestEndStatus(false, null, wasCanceled)\n            );\n            r=
eturn;\n          }\n          const successCode =3D self.successCodes_.ind=
exOf(status) !=3D=3D -1;\n          backoffCallback(true, new RequestEndSta=
tus(successCode, xhr));\n        });\n    }\n\n    /**\n     * @param reque=
stWentThrough - True if the request eventually went\n     *     through, fa=
lse if it hit the retry limit or was canceled.\n     */\n    function backo=
ffDone(\n      requestWentThrough: boolean,\n      status: RequestEndStatus=
\n    ): void {\n      const resolve =3D self.resolve_;\n      const reject=
 =3D self.reject_;\n      const xhr =3D status.xhr as XhrIo;\n      if (sta=
tus.wasSuccessCode) {\n        try {\n          const result =3D self.callb=
ack_(xhr, xhr.getResponseText());\n          if (type.isJustDef(result)) {\=
n            resolve(result);\n          } else {\n            resolve();\n=
          }\n        } catch (e) {\n          reject(e);\n        }\n      =
} else {\n        if (xhr !=3D=3D null) {\n          const err =3D unknown(=
);\n          err.serverResponse =3D xhr.getResponseText();\n          if (=
self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\=
n          } else {\n            reject(err);\n          }\n        } else =
{\n          if (status.canceled) {\n            const err =3D self.appDele=
te_ ? appDeleted() : canceled();\n            reject(err);\n          } els=
e {\n            const err =3D retryLimitExceeded();\n            reject(er=
r);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n   =
   backoffDone(false, new RequestEndStatus(false, null, true));\n    } else=
 {\n      this.backoffId_ =3D backoff.start(doTheRequest, backoffDone, this=
.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<t>=
 {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDel=
ete?: boolean): void {\n    this.canceled_ =3D true;\n    this.appDelete_ =
=3D appDelete || false;\n    if (this.backoffId_ !=3D=3D null) {\n      bac=
koff.stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !=3D=3D null) =
{\n      this.pendingXhr_.abort();\n    }\n  }\n\n  private isRetryStatusCo=
de_(status: number): boolean {\n    // The codes for which to retry came fr=
om this page:\n    // https://cloud.google.com/storage/docs/exponential-bac=
koff\n    const isFiveHundredCode =3D status &gt;=3D 500 &amp;&amp; status =
&lt; 600;\n    const extraRetryCodes =3D [\n      // Request Timeout: web s=
erver didn't receive full request in time.\n      408,\n      // Too Many R=
equests: you're getting rate-limited, basically.\n      429\n    ];\n    co=
nst isExtraRetryCode =3D extraRetryCodes.indexOf(status) !=3D=3D -1;\n    c=
onst isRequestSpecificRetryCode =3D\n      this.additionalRetryCodes_.index=
Of(status) !=3D=3D -1;\n    return isFiveHundredCode || isExtraRetryCode ||=
 isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information=
 about the result of a network request.\n * @param opt_canceled - Defaults =
to false.\n */\nexport class RequestEndStatus {\n  /**\n   * True if the re=
quest was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    pub=
lic wasSuccessCode: boolean,\n    public xhr: XhrIo | null,\n    canceled?:=
 boolean\n  ) {\n    this.canceled =3D !!canceled;\n  }\n}\n\nexport functi=
on addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): voi=
d {\n  if (authToken !=3D=3D null &amp;&amp; authToken.length &gt; 0) {\n  =
  headers['Authorization'] =3D 'Firebase ' + authToken;\n  }\n}\n\nexport f=
unction addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string=
\n): void {\n  headers['X-Firebase-Storage-Version'] =3D\n    'webjs/' + (f=
irebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(head=
ers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X=
-Firebase-GMPID'] =3D appId;\n  }\n}\n\nexport function makeRequest<t>(\n  =
requestInfo: RequestInfo<t>,\n  appId: string | null,\n  authToken: string =
| null,\n  pool: XhrIoPool,\n  firebaseVersion?: string\n): Request<t> {\n =
 const queryPart =3D UrlUtils.makeQueryString(requestInfo.urlParams);\n  co=
nst url =3D requestInfo.url + queryPart;\n  const headers =3D Object.assign=
({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHe=
ader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\=
n  return new NetworkRequest<t>(\n    url,\n    requestInfo.method,\n    he=
aders,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestIn=
fo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHa=
ndler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    po=
ol\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Lice=
nsed under the Apache License, Version 2.0 (the \"License\");\n * you may n=
ot use this file except in compliance with the License.\n * You may obtain =
a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2=
.0\n *\n * Unless required by applicable law or agreed to in writing, softw=
are\n * distributed under the License is distributed on an \"AS IS\" BASIS,=
\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implie=
d.\n * See the License for the specific language governing permissions and\=
n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a=
 method for running a function with exponential\n * backoff.\n */\ntype id =
=3D (p1: boolean) =3D&gt; void;\n\nexport { id };\n\n/**\n * @param f May b=
e invoked\n *     before the function returns.\n * @param callback Get all =
the arguments passed to the function\n *     passed to f, including the ini=
tial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) =
=3D&gt; void, canceled: boolean) =3D&gt; void,\n  // eslint-disable-next-li=
ne @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) =3D&gt;=
 unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code =
cleaner (probably refactor into an actual\n  // type instead of a bunch of =
functions with state shared in the closure)\n  let waitSeconds =3D 1;\n  //=
 Would type this as \"number\" but that doesn't work for Node so =C2=AF\\_(=
=E3=83=84)_/=C2=AF\n  // TODO: find a way to exclude Node type definition f=
or storage because storage only works in browser\n  // eslint-disable-next-=
line @typescript-eslint/no-explicit-any\n  let timeoutId: any =3D null;\n  =
let hitTimeout =3D false;\n  let cancelState =3D 0;\n\n  function canceled(=
): boolean {\n    return cancelState =3D=3D=3D 2;\n  }\n  let triggeredCall=
back =3D false;\n\n  function triggerCallback(...args: any[]): void {\n    =
if (!triggeredCallback) {\n      triggeredCallback =3D true;\n      callbac=
k.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number=
): void {\n    timeoutId =3D setTimeout(() =3D&gt; {\n      timeoutId =3D n=
ull;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function han=
dler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) =
{\n      return;\n    }\n    if (success) {\n      triggerCallback.call(nul=
l, success, ...args);\n      return;\n    }\n    const mustStop =3D cancele=
d() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call(null, s=
uccess, ...args);\n      return;\n    }\n    if (waitSeconds &lt; 64) {\n  =
    /* TODO(andysoto): don't back off so quickly if we know we're offline. =
*/\n      waitSeconds *=3D 2;\n    }\n    let waitMillis;\n    if (cancelSt=
ate =3D=3D=3D 1) {\n      cancelState =3D 2;\n      waitMillis =3D 0;\n    =
} else {\n      waitMillis =3D (waitSeconds + Math.random()) * 1000;\n    }=
\n    callWithDelay(waitMillis);\n  }\n  let stopped =3D false;\n\n  functi=
on stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n  =
  }\n    stopped =3D true;\n    if (triggeredCallback) {\n      return;\n  =
  }\n    if (timeoutId !=3D=3D null) {\n      if (!wasTimeout) {\n        c=
ancelState =3D 2;\n      }\n      clearTimeout(timeoutId);\n      callWithD=
elay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState =3D 1=
;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(() =3D&gt; {\n   =
 hitTimeout =3D true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n=
\n/**\n * Stops the retry loop from repeating.\n * If the function is curre=
ntly \"in between\" retries, it is invoked immediately\n * with the second =
parameter as \"true\". Otherwise, it will be invoked once more\n * after th=
e current invocation finishes iff the current invocation would have\n * tri=
ggered another retry.\n */\nexport function stop(id: id): void {\n  id(fals=
e);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed =
under the Apache License, Version 2.0 (the \"License\");\n * you may not us=
e this file except in compliance with the License.\n * You may obtain a cop=
y of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n =
*\n * Unless required by applicable law or agreed to in writing, software\n=
 * distributed under the License is distributed on an \"AS IS\" BASIS,\n * =
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n =
* See the License for the specific language governing permissions and\n * l=
imitations under the License.\n */\n\nimport { Location } from './implement=
ation/location';\nimport { FailRequest } from './implementation/failrequest=
';\nimport { Request, makeRequest } from './implementation/request';\nimpor=
t { RequestInfo } from './implementation/requestinfo';\nimport { XhrIoPool =
} from './implementation/xhriopool';\nimport { StorageReference, getChild }=
 from './reference';\nimport { Provider } from '@firebase/component';\nimpo=
rt { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimpor=
t {\n  FirebaseApp,\n  FirebaseOptions,\n  _FirebaseService\n} from '@fireb=
ase/app-types-exp';\nimport * as constants from '../src/implementation/cons=
tants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} =
from './implementation/error';\nimport { validateNumber } from './implement=
ation/type';\n\nexport function isUrl(path?: string): boolean {\n  return /=
^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseSt=
orage.Reference for the given url.\n */\nfunction refFromURL(service: Stora=
geService, url: string): StorageReference {\n  return new StorageReference(=
service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the gi=
ven path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: Sto=
rageService | StorageReference,\n  path?: string\n): StorageReference {\n  =
if (ref instanceof StorageService) {\n    const service =3D ref;\n    if (s=
ervice._bucket =3D=3D null) {\n      throw noDefaultBucket();\n    }\n    c=
onst reference =3D new StorageReference(service, service._bucket!);\n    if=
 (path !=3D null) {\n      return refFromPath(reference, path);\n    } else=
 {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n=
    if (path !=3D=3D undefined) {\n      if (path.includes('..')) {\n      =
  throw invalidArgument('`path` param cannot contain \"..\"');\n      }\n  =
    return getChild(ref, path);\n    } else {\n      return ref;\n    }\n  =
}\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param s=
torage - `Storage` instance.\n * @param url - URL. If empty, returns root r=
eference.\n * @public\n */\nexport function ref(storage: StorageService, ur=
l?: string): StorageReference;\n/**\n * Returns a storage Reference for the=
 given path in the\n * default bucket.\n * @param storageOrRef - `Storage` =
service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empt=
y, returns root reference (if Storage\n * instance provided) or returns sam=
e reference (if Reference provided).\n * @public\n */\nexport function ref(=
\n  storageOrRef: StorageService | StorageReference,\n  path?: string\n): S=
torageReference;\nexport function ref(\n  serviceOrRef: StorageService | St=
orageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  if (=
pathOrUrl &amp;&amp; isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof S=
torageService) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } =
else {\n      throw invalidArgument(\n        'To use ref(service, url), th=
e first argument must be a Storage instance.'\n      );\n    }\n  } else {\=
n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extra=
ctBucket(config?: FirebaseOptions): Location | null {\n  const bucketString=
 =3D config?.[constants.CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString =3D=
=3D null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bu=
cketString);\n}\n\n/**\n * A service that provides Firebase Storage Referen=
ce instances.\n * @public\n * @param opt_url - gs:// url to a custom Storag=
e Bucket\n */\nexport class StorageService implements _FirebaseService {\n =
 /**\n   * @internal\n   */\n  readonly _bucket: Location | null =3D null;\=
n  protected readonly _appId: string | null =3D null;\n  private readonly _=
requests: Set<request<unknown>&gt;;\n  private _deleted: boolean =3D false;=
\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime:=
 number;\n\n  constructor(\n    readonly app: FirebaseApp,\n    /**\n     *=
 @internal\n     */\n    readonly _authProvider: Provider<firebaseauthinter=
nalname>,\n    /**\n     * @internal\n     */\n    readonly _pool: XhrIoPoo=
l,\n    /**\n     * @internal\n     */\n    readonly _url?: string,\n    /*=
*\n     * @internal\n     */\n    readonly _firebaseVersion?: string\n  ) {=
\n    this._maxOperationRetryTime =3D constants.DEFAULT_MAX_OPERATION_RETRY=
_TIME;\n    this._maxUploadRetryTime =3D constants.DEFAULT_MAX_UPLOAD_RETRY=
_TIME;\n    this._requests =3D new Set();\n    if (_url !=3D null) {\n     =
 this._bucket =3D Location.makeFromBucketSpec(_url);\n    } else {\n      t=
his._bucket =3D extractBucket(this.app.options);\n    }\n  }\n\n  get maxUp=
loadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  s=
et maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n=
      /* minValue=3D*/ 0,\n      /* maxValue=3D */ Number.POSITIVE_INFINITY=
,\n      time\n    );\n    this._maxUploadRetryTime =3D time;\n  }\n\n  get=
 maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;=
\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n=
      'time',\n      /* minValue=3D*/ 0,\n      /* maxValue=3D */ Number.PO=
SITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime =3D t=
ime;\n  }\n\n  async getAuthToken(): Promise<string |=3D"" null=3D""> {\n  =
  const auth =3D this._authProvider.getImmediate({ optional: true });\n    =
if (auth) {\n      const tokenData =3D await auth.getToken();\n      if (to=
kenData !=3D=3D null) {\n        return tokenData.accessToken;\n      }\n  =
  }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent=
 more from being created.\n   * @internal\n   */\n  _delete(): Promise<void=
> {\n    this._deleted =3D true;\n    this._requests.forEach(request =3D&gt=
; request.cancel());\n    this._requests.clear();\n    return Promise.resol=
ve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object re=
ferencing this StorageService\n   * at the given Location.\n   */\n  makeSt=
orageReference(loc: Location): StorageReference {\n    return new StorageRe=
ference(this, loc);\n  }\n\n  /**\n   * @internal\n   * @param requestInfo =
- HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   =
*/\n  makeRequest<t>(\n    requestInfo: RequestInfo<t>,\n    authToken: str=
ing | null\n  ): Request<t> {\n    if (!this._deleted) {\n      const reque=
st =3D makeRequest(\n        requestInfo,\n        this._appId,\n        au=
thToken,\n        this._pool,\n        this._firebaseVersion\n      );\n   =
   this._requests.add(request);\n      // Request removes itself from set w=
hen complete.\n      request.getPromise().then(\n        () =3D&gt; this._r=
equests.delete(request),\n        () =3D&gt; this._requests.delete(request)=
\n      );\n      return request;\n    } else {\n      return new FailReque=
st(appDeleted());\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Go=
ogle LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"Lice=
nse\");\n * you may not use this file except in compliance with the License=
.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.o=
rg/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed=
 to in writing, software\n * distributed under the License is distributed o=
n an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, eit=
her express or implied.\n * See the License for the specific language gover=
ning permissions and\n * limitations under the License.\n */\n\nimport * as=
 types from '@firebase/storage-types';\nimport { StorageService, isUrl, ref=
 } from '../src/service';\nimport { Location } from '../src/implementation/=
location';\nimport { ReferenceCompat } from './reference';\nimport { invali=
dArgument } from '../src/implementation/error';\nimport { FirebaseApp } fro=
m '@firebase/app-types';\n\n/**\n * A service that provides firebaseStorage=
.Reference instances.\n * @param opt_url gs:// url to a custom Storage Buck=
et\n */\nexport class StorageServiceCompat implements types.FirebaseStorage=
 {\n  constructor(public app: FirebaseApp, readonly _delegate: StorageServi=
ce) {}\n\n  INTERNAL =3D {\n    /**\n     * Called when the associated app =
is deleted.\n     */\n    delete: () =3D&gt; {\n      return this._delegate=
._delete();\n    }\n  };\n\n  get maxOperationRetryTime(): number {\n    re=
turn this._delegate.maxOperationRetryTime;\n  }\n\n  get maxUploadRetryTime=
(): number {\n    return this._delegate.maxUploadRetryTime;\n  }\n\n  /**\n=
   * Returns a firebaseStorage.Reference for the given path in the default\=
n   * bucket.\n   */\n  ref(path?: string): types.Reference {\n    if (isUr=
l(path)) {\n      throw invalidArgument(\n        'ref() expected a child p=
ath but got a URL, use refFromURL instead.'\n      );\n    }\n    return ne=
w ReferenceCompat(ref(this._delegate, path), this);\n  }\n\n  /**\n   * Ret=
urns a firebaseStorage.Reference object for the given absolute URL,\n   * w=
hich must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): =
types.Reference {\n    if (!isUrl(url)) {\n      throw invalidArgument(\n  =
      'refFromURL() expected a full URL but got a child path, use ref() ins=
tead.'\n      );\n    }\n    try {\n      Location.makeFromUrl(url);\n    }=
 catch (e) {\n      throw invalidArgument(\n        'refFromUrl() expected =
a valid full URL but got an invalid one.'\n      );\n    }\n    return new =
ReferenceCompat(ref(this._delegate, url), this);\n  }\n\n  setMaxUploadRetr=
yTime(time: number): void {\n    this._delegate.maxUploadRetryTime =3D time=
;\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    this._deleg=
ate.maxOperationRetryTime =3D time;\n  }\n}\n","/**\n * @license\n * Copyri=
ght 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 =
(the \"License\");\n * you may not use this file except in compliance with =
the License.\n * You may obtain a copy of the License at\n *\n *   http://w=
ww.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable la=
w or agreed to in writing, software\n * distributed under the License is di=
stributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF AN=
Y KIND, either express or implied.\n * See the License for the specific lan=
guage governing permissions and\n * limitations under the License.\n */\n\n=
import firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '=
@firebase/app-types/private';\nimport { StringFormat } from '../src/impleme=
ntation/string';\nimport { TaskEvent, TaskState } from '../src/implementati=
on/taskenums';\n\nimport { XhrIoPool } from '../src/implementation/xhriopoo=
l';\nimport { ReferenceCompat } from './reference';\nimport { StorageServic=
eCompat } from './service';\nimport { StorageService } from '../src/service=
';\nimport * as types from '@firebase/storage-types';\nimport {\n  Componen=
t,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\n=
\nimport { name, version } from '../package.json';\n\n/**\n * Type constant=
 for Firebase Storage.\n */\nconst STORAGE_TYPE =3D 'storage';\n\nfunction =
factory(\n  container: ComponentContainer,\n  url?: string\n): types.Fireba=
seStorage {\n  // Dependencies\n  // TODO: This should eventually be 'app-c=
ompat'\n  const app =3D container.getProvider('app').getImmediate();\n  con=
st authProvider =3D container.getProvider('auth-internal');\n\n  // TODO: g=
et StorageService instance from component framework instead\n  // of creati=
ng a new one.\n  const storageServiceCompat: StorageServiceCompat =3D new S=
torageServiceCompat(\n    app,\n    new StorageService(\n      app,\n      =
authProvider,\n      new XhrIoPool(),\n      url,\n      firebase.SDK_VERSI=
ON\n    )\n  );\n  return storageServiceCompat;\n}\n\nexport function regis=
terStorage(instance: _FirebaseNamespace): void {\n  const namespaceExports =
=3D {\n    // no-inline\n    TaskState,\n    TaskEvent,\n    StringFormat,\=
n    Storage: StorageService,\n    Reference: ReferenceCompat\n  };\n  inst=
ance.INTERNAL.registerComponent(\n    new Component(STORAGE_TYPE, factory, =
ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .set=
MultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);=
\n}\n\nregisterStorage(firebase as _FirebaseNamespace);\n\n/**\n * Define e=
xtension behavior for `registerStorage`\n */\ndeclare module '@firebase/app=
-types' {\n  interface FirebaseNamespace {\n    storage?: {\n      (app?: F=
irebaseApp): types.FirebaseStorage;\n      Storage: typeof types.FirebaseSt=
orage;\n\n      StringFormat: {\n        BASE64: types.StringFormat;\n     =
   BASE64URL: types.StringFormat;\n        DATA_URL: types.StringFormat;\n =
       RAW: types.StringFormat;\n      };\n      TaskEvent: {\n        STAT=
E_CHANGED: types.TaskEvent;\n      };\n      TaskState: {\n        CANCELED=
: types.TaskState;\n        ERROR: types.TaskState;\n        PAUSED: types.=
TaskState;\n        RUNNING: types.TaskState;\n        SUCCESS: types.TaskS=
tate;\n      };\n    };\n  }\n  interface FirebaseApp {\n    storage?(stora=
geBucket?: string): types.FirebaseStorage;\n  }\n}\n"],"names":["extendStat=
ics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnPrope=
rty","__extends","__","this","constructor","prototype","create","__assign",=
"assign","t","s","i","n","arguments","length","call","apply","__awaiter","t=
hisArg","_arguments","P","generator","Promise","resolve","reject","fulfille=
d","value","step","next","e","rejected","result","done","then","__generator=
","body","f","y","_","label","sent","trys","ops","g","verb","throw","return=
","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","i=
l","r","k","a","j","jl","ERROR_NAME","Error","code","message","customData",=
"_super","_this","FirebaseError","captureStackTrace","ErrorFactory","_i","d=
ata","fullCode","service","template","errors","replace","PATTERN","key","St=
ring","fullMessage","serviceName","Component","mode","instantiationMode","m=
ultipleInstances","props","serviceProps","name","instanceFactory","type","D=
EFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","FirebaseStorageError","prependCod=
e","serverResponse","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND",=
"PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETR=
Y_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVAL=
ID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","S=
ERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUME=
NT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL=
_ERROR","UNSUPPORTED_ENVIRONMENT","unknown","canceled","cannotSliceBlob","i=
nvalidArgument","appDeleted","invalidRootOperation","invalidFormat","format=
","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","con=
tentType","dataFromString","stringData","StringData","utf8Bytes_","base64By=
tes_","dataUrl","parts","DataURLParts","base64","rest","decoded","decodeURI=
Component","percentEncodedBytes_","dataURLBytes_","c","charCodeAt","Uint8Ar=
ray","hasMinus","indexOf","hasUnder","hasPlus","hasSlash","bytes","atob","a=
rray","dataURL","matches","match","end","middle","substring","ErrorCode","T=
askEvent","STATE_CHANGED","InternalTaskState","TaskState","RUNNING","PAUSED=
","SUCCESS","ERROR","taskStateFromInternalTaskState","state","NetworkXhrIo"=
,"url","method","headers","sent_","xhr_","open","undefined","setRequestHead=
er","toString","send","sendPromise_","errorCode_","status","responseText","=
abort","header","getResponseHeader","listener","upload","addEventListener",=
"removeEventListener","XMLHttpRequest","NO_ERROR","ABORT","NETWORK_ERROR","=
XhrIoPool","isString","isNativeBlob","isNativeBlobDefined","Blob","validate=
Number","argument","minValue","maxValue","getBlob","args","BlobBuilder","We=
bKitBlobBuilder","bb","append","type.isNativeBlobDefined","FbsBlob","size_"=
,"type_","startByte","endByte","type.isNativeBlob","data_","realBlob","slic=
ed","start","blob","webkitSlice","mozSlice","slice","buffer","blobby","map"=
,"val","fs.getBlob","uint8Arrays","type.isString","finalLength_1","forEach"=
,"byteLength","merged_1","index_1","elideCopy","size","blobType","ArrayBuff=
er","set","Location","path_","path","encode","encodeURIComponent","bucket",=
"bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gs=
Regex","RegExp","httpModify","loc","firebaseStorageHost","groups","regex","=
indices","postModify","charAt","group","captures","exec","jsonObjectOrNull"=
,"obj","JSON","parse","isArray","lastComponent","index","lastIndexOf","make=
Url","urlPart","makeQueryString","params","queryPart","noXform_","metadata"=
,"server","local","writable","xform","mappings_","getMappings","mappings","=
Mapping","nameMapping","_metadata","fullPath","sizeMapping","Number","addRe=
f","defineProperty","get","makeStorageReference","fromResourceString","reso=
urceString","resource","len","mapping","fromResource","toResourceString","s=
tringify","PREFIXES_KEY","ITEMS_KEY","fromResponseString","json.jsonObjectO=
rNull","listResult","prefixes","items","nextPageToken","_a","pathWithoutTra=
ilingSlash","reference","_c","_b","item","fromBackendResponse","handler","t=
imeout","handlerCheck","cndn","metadataHandler","xhr","text","listHandler",=
"downloadUrlHandler","tokens","split","token","alt","downloadUrlFromResourc=
eString","sharedErrorHandler","err","newErr","getStatus","objectErrorHandle=
r","shared","getMetadata","fullServerUrl","maxOperationRetryTime","requestI=
nfo","RequestInfo","errorHandler","metadataForUpload_","metadataClone","mul=
tipartUpload","bucketOnlyServerUrl","X-Goog-Upload-Protocol","boundary","st=
r","Math","random","genBoundary","metadata_","preBlobPart","postBlobPart","=
urlParams","maxUploadRetryTime","uploadData","current","total","finalized",=
"checkResumeHeader_","allowed","createResumableUpload","metadataForUpload",=
"X-Goog-Upload-Command","X-Goog-Upload-Header-Content-Length","X-Goog-Uploa=
d-Header-Content-Type","Content-Type","getResumableUploadStatus","sizeStrin=
g","isNaN","ResumableUploadStatus","continueResumableUpload","chunkSize","p=
rogressCallback","status_","bytesLeft","bytesToUpload","min","X-Goog-Upload=
-Offset","uploadStatus","newCurrent","nextOrObserver","error","complete","o=
bserver","async","argsToForward","UploadTask","sizeBefore","_transferred","=
loaded","_updateProgress","_state","_request","_resumable","_uploadUrl","_c=
reateResumable","_needToFetchStatus","_fetchStatus","_needToFetchMetadata",=
"_fetchMetadata","_continueUpload","_oneShotUpload","callback","_ref","stor=
age","getAuthToken","authToken","_transition","_resolveToken","_location","=
_mappings","_blob","createRequest","makeRequest","getPromise","completeTran=
sitions_","_errorHandler","statusRequest","_chunkMultiplier","_makeProgress=
Callback","_error","uploadRequest","newStatus","_increaseMultiplier","metad=
ataRequest","_metadataErrorHandler","multipartRequest","transferred","old",=
"_notifyObservers","cancel","wasPaused","_start","externalState","bytesTran=
sferred","totalBytes","task","ref","completed","Observer","_addObserver","_=
removeObserver","onFulfilled","onRejected","_promise","_observers","_notify=
Observer","splice","_finishPromise","_resolve","triggered","fbsAsync","bind=
","snapshot","_reject","valid","_shouldDoResumable","codeEquals","StorageRe=
ference","newRef","_service","newPath","parent","listAll","accumulator","li=
stAllHelper","pageToken","list","nextPage","options","maxResults","delimite=
r","isRoot","updateMetadata","_throwIfRoot","getDownloadURL","deleteObject"=
,"_xhr","_text","successCodes","getChild","childPath","canonicalChildPath",=
"filter","component","join","UploadTaskSnapshotCompat","_delegate","UploadT=
askCompat","wrappedNextOrObserver","taskSnapshot","on","catch","pause","res=
ume","ListResultCompat","ReferenceCompat","root","requestsGetMetadata","Fai=
lRequest","promise_","_appDelete","NetworkRequest","waitSeconds","timeoutId=
","hitTimeout","cancelState","triggeredCallback","stopped","self","backoffD=
one","requestWentThrough","resolve_","reject_","wasSuccessCode","callback_"=
,"getResponseText","errorCallback_","appDelete_","triggerCallback","callWit=
hDelay","millis","setTimeout","success","stop","wasTimeout","clearTimeout",=
"canceled_","RequestEndStatus","backoffId_","backoffCallback","progressList=
ener","progressEvent","lengthComputable","progressCallback_","pool_","creat=
eXhrIo","pendingXhr_","addUploadProgressListener","url_","method_","body_",=
"headers_","removeUploadProgressListener","hitServer","getErrorCode","isRet=
ryStatusCode_","successCode","successCodes_","wasCanceled","timeout_","appD=
elete","id","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryC=
ode","additionalRetryCodes_","additionalRetryCodes","errorCallback","pool",=
"start_","isUrl","test","refFromPath","StorageService","_bucket","includes"=
,"serviceOrRef","pathOrUrl","_maxUploadRetryTime","time","POSITIVE_INFINITY=
","_maxOperationRetryTime","auth","_authProvider","getImmediate","optional"=
,"getToken","tokenData","accessToken","_deleted","_requests","request","cle=
ar","appId","firebaseVersion","request_1","_appId","_pool","_firebaseVersio=
n","UrlUtils.makeQueryString","add","delete","app","_url","Set","makeFromBu=
cketSpec","config","constants.CONFIG_STORAGE_BUCKET_KEY","StorageServiceCom=
pat","_delete","instance","namespaceExports","factory","container","getProv=
ider","authProvider","firebase","SDK_VERSION","Storage","Reference","INTERN=
AL","registerComponent","setServiceProps","setMultipleInstances","registerV=
ersion"],"mappings":"wWAgBIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBA=
ClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,=
GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAG=
C,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,=
GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAA=
IH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EA=
AGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,U=
AAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAA=
OU,IAEKO,MAAMb,KAAMU,YA8BzB,SAASI,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAWD,=
EAANA,GAAUE,SAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF=
,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW=
,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EA=
AOL,SAJ1CA,EAIyDK,EAAOL,iBAJ/BN,EAAIM,EAAQ,IAAIN,EAAE,SAAUG,GAAWA,EAAQG,MAI=
TO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUL,MAAME,EAASC,GAAc,KAAKS,UAI/D,SAASM,=
EAAYhB,EAASiB,GACjC,IAAsGC,EAAGC,EAAG5B,EAAxG6B,EAAI,CAAEC,MAAO,EAAGC,KAAM,=
WAAa,GAAW,EAAP/B,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOgC,KAAM,GAAIC,IAA=
K,IACzFC,EAAI,CAAEf,KAAMgB,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAA7D,MAA=
qF,mBAAXG,SAA0BJ,EAAEI,OAAOC,UAAY,WAAa,OAAO7C,OAAUwC,EACvJ,SAASC,EAAKhC,GAA=
K,OAAO,SAAUqC,GAAK,OACzC,SAAcC,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOb=
,GAAG,IACN,GAAIF,EAAI,EAAGC,IAAM5B,EAAY,EAARyC,EAAG,GAASb,EAAU,OAAIa,EAAG,G=
AAKb,EAAS,SAAO5B,EAAI4B,EAAU,SAAM5B,EAAEM,KAAKsB,GAAI,GAAKA,EAAET,SAAWnB,EA=
AIA,EAAEM,KAAKsB,EAAGa,EAAG,KAAKlB,KAAM,OAAOvB,EAE3J,OADI4B,EAAI,EAAG5B,IAA=
GyC,EAAK,CAAS,EAARA,EAAG,GAAQzC,EAAEiB,QACzBwB,EAAG,IACP,KAAK,EAAG,KAAK,EAA=
GzC,EAAIyC,EAAI,MACxB,KAAK,EAAc,OAAXZ,EAAEC,QAAgB,CAAEb,MAAOwB,EAAG,GAAIlB,=
MAAM,GAChD,KAAK,EAAGM,EAAEC,QAASF,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAA=
K,EAAGA,EAAKZ,EAAEI,IAAIU,MAAOd,EAAEG,KAAKW,MAAO,SACxC,QACI,KAAkB3C,EAAe,GA=
A3BA,EAAI6B,EAAEG,MAAY3B,QAAcL,EAAEA,EAAEK,OAAS,MAAkB,IAAVoC,EAAG,IAAsB,IAA=
VA,EAAG,IAAW,CAAEZ,EAAI,EAAG,SACjG,GAAc,IAAVY,EAAG,MAAczC,GAAMyC,EAAG,GAAKz=
C,EAAE,IAAMyC,EAAG,GAAKzC,EAAE,IAAM,CAAE6B,EAAEC,MAAQW,EAAG,GAAI,MAC9E,GAAc=
,IAAVA,EAAG,IAAYZ,EAAEC,MAAQ9B,EAAE,GAAI,CAAE6B,EAAEC,MAAQ9B,EAAE,GAAIA,EAA=
IyC,EAAI,MAC7D,GAAIzC,GAAK6B,EAAEC,MAAQ9B,EAAE,GAAI,CAAE6B,EAAEC,MAAQ9B,EAA=
E,GAAI6B,EAAEI,IAAIW,KAAKH,GAAK,MACvDzC,EAAE,IAAI6B,EAAEI,IAAIU,MAChBd,EAAE=
G,KAAKW,MAAO,SAEtBF,EAAKf,EAAKpB,KAAKG,EAASoB,GAC1B,MAAOT,GAAKqB,EAAK,CAAC,=
EAAGrB,GAAIQ,EAAI,UAAeD,EAAI3B,EAAI,EACtD,GAAY,EAARyC,EAAG,GAAQ,MAAMA,EAAG,=
GAAI,MAAO,CAAExB,MAAOwB,EAAG,GAAKA,EAAG,QAAK,EAAQlB,MAAM,GArB9BL,CAAK,CAACf=
,EAAGqC,MAqEtD,SAASK,IACZ,IAAK,IAAI5C,EAAI,EAAGC,EAAI,EAAG4C,EAAK1C,UAAUC,O=
AAQH,EAAI4C,EAAI5C,IAAKD,GAAKG,UAAUF,GAAGG,OAC7E,IAAK,IAAI0C,EAAI1D,MAAMY,G=
AAI+C,EAAI,EAAG9C,EAAI,EAAGA,EAAI4C,EAAI5C,IACzC,IAAK,IAAI+C,EAAI7C,UAAUF,G=
AAIgD,EAAI,EAAGC,EAAKF,EAAE5C,OAAQ6C,EAAIC,EAAID,IAAKF,IAC1DD,EAAEC,GAAKC,E=
AAEC,GACjB,OAAOH,EC7FX,MAAMK,EAAa,mBAYgB5D,MAAA6D,UAGjC,WACWC,EACTC,EACOC,K=
AEPC,YAAMF,gBAJGG,OAAAJ,EAEFI,aAAAF,EALAE,OAAON,EAWdlE,OAAOC,eAAeuE,EAAMC,E=
AAc/D,WAItCyD,MAAMO,mBACRP,MAAMO,kBAAkBF,EAAMG,EAAajE,UAAUC,iBAezDgE,mBAAA,=
SACEP,OACA,aAAAQ,mBAAAA,IAAAC,oBAEA,IAcuCA,EAdjCP,EAAcO,EAAK,IAAoB,GACvCC,E=
AActE,KAAKuE,YAAWX,EAC9BY,EAAWxE,KAAKyE,OAAOb,GAEvBC,EAAUW,GAUuBH,EAVcP,EAA=
VU,EAW7BE,QAAQC,EAAS,SAACxC,EAAGyC,GACnC,IAAMrD,EAAQ8C,EAAKO,GACnB,OAAgB,MA=
ATrD,EAAgBsD,OAAOtD,GAAS,IAAIqD,UAbwB,QAE7DE,EAAiB9E,KAAK+E,iBAAgBlB,OAAYS,=
OAIxD,OAFc,IAAIL,EAAcK,EAAUQ,EAAahB,OAlBzD,WACmBS,EACAQ,EACAN,GAFAzE,aAAAuE=
,EACAvE,iBAAA+E,EACA/E,YAAAyE,EA4BrB,IAAME,EAAU,mBClFdK,iCAAA,SAAqBC,GAEnB,=
OADAjF,KAAKkF,kBAAoBD,EAClBjF,MAGTgF,iCAAA,SAAqBG,GAEnB,OADAnF,KAAKmF,kBAAo=
BA,EAClBnF,MAGTgF,4BAAA,SAAgBI,GAEd,OADApF,KAAKqF,aAAeD,EACbpF,SAlBT,WACWsF=
,EACAC,EACAC,GAFAxF,UAAAsF,EACAtF,qBAAAuF,EACAvF,UAAAwF,EAjBXxF,wBAAoB,EAIp=
BA,kBAA2B,GAE3BA,8BCXK,MAAMyF,EAAe,iCAKfC,EAA4B,mBCTC5F,MAAAmE,GAaxC0B,uBAA=
A,SAAW/B,GACT,OAAOgC,EAAYhC,KAAU5D,KAAK4D,MAGpCpE,sBAAImG,2BAAJ,WACE,OAAI3F=
,KAAK8D,WAAW+B,eACR7F,KAAK6D,aAAY7D,KAAK8D,WAAW+B,eAEpC7F,KAAK6D,yCAIhBrE,s=
BAAImG,kCAAJ,WACE,OAAO3F,KAAK8D,WAAW+B,oBAGzB,SAAmBA,GACjB7F,KAAK8D,WAAW+B,=
eAAiBA,sCA3BnC,WAAYjC,EAAYC,KACtBE,YACE6B,EAAYhC,GACZ,qBAAqBC,OAAY+B,EAAYhC=
,qBALjDI,aAAgD,CAAE6B,eAAgB,MAShErG,OAAOC,eAAeuE,EAAM2B,EAAqBzF,aA2B9C,IAAM=
4F,EAAO,CAElBC,QAAS,UACTC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,eAAg=
B,iBAChBC,gBAAiB,kBACjBC,aAAc,eACdC,qBAAsB,uBACtBC,iBAAkB,mBAClBC,SAAU,WAEV=
C,mBAAoB,qBACpBC,YAAa,cACbC,uBAAwB,yBACxBC,kBAAmB,oBACnBC,kBAAmB,oBACnBC,uB=
AAwB,yBACxBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,uBAAwB,yBACxBC,YAAa,cACbC,uBAAwB=
,yBACxBC,eAAgB,iBAChBC,eAAgB,iBAChBC,wBAAyB,oCAGX1B,EAAYhC,GAC1B,MAAO,WAAaA=
,WAGN2D,IAId,OAAO,IAAI5B,EAAqBG,EAAKC,QAFnC,2FA0EYyB,IACd,OAAO,IAAI7B,EACTG=
,EAAKU,SACL,+CAmCYiB,IACd,OAAO,IAAI9B,EACTG,EAAKe,kBACL,mEAkBYa,EAAgB7D,GAC=
9B,OAAO,IAAI8B,EAAqBG,EAAKkB,iBAAkBnD,YAgCzC8D,IACd,OAAO,IAAIhC,EACTG,EAAKo=
B,YACL,0CAOYU,EAAqBtC,GACnC,OAAO,IAAIK,EACTG,EAAKqB,uBACL,kBACE7B,EACA,4HAS=
UuC,EACdC,EACAjE,GAEA,OAAO,IAAI8B,EACTG,EAAKsB,eACL,iCAAmCU,EAAS,MAAQjE,YAO=
xCkE,EAAclE,GAC5B,MAAM,IAAI8B,EACRG,EAAKuB,eACL,mBAAqBxD,GC7QlB,IAAMmE,EAAe=
,CAC1BC,IAAK,MACLC,OAAQ,SACRC,UAAW,YACXC,SAAU,cAMV,SAAmB/D,EAAkBgE,GAAlBrI,=
UAAAqE,EACjBrE,KAAKqI,YAAcA,GAAe,eAItBC,EACdR,EACAS,GAEA,OAAQT,GACN,KAAKE,E=
AAaC,IAChB,OAAO,IAAIO,EAAWC,EAAWF,IACnC,KAAKP,EAAaE,OAClB,KAAKF,EAAaG,UAChB=
,OAAO,IAAIK,EAAWE,EAAaZ,EAAQS,IAC7C,KAAKP,EAAaI,SAChB,OAAO,IAAII,WAqIaG,GAC=
tBC,EAAQ,IAAIC,EAAaF,GAC/B,OAAIC,EAAME,OACDJ,EAAaV,EAAaE,OAAQU,EAAMG,eAlFdx=
H,GACnC,IAAIyH,EACJ,IACEA,EAAUC,mBAAmB1H,GAC7B,MAAOG,GACP,MAAMmG,EAAcG,EAAa=
I,SAAU,uBAE7C,OAAOK,EAAWO,GA6ETE,CAAqBN,EAAMG,MAzI9BI,CAAcZ,GA8IN,IAAIM,EA7=
IQN,GA8IbF,aAvIb,MAAMd,aAGQkB,EAAWlH,GAEzB,IADA,IAAMhC,EAAc,GACXiB,EAAI,EAA=
GA,EAAIe,EAAMZ,OAAQH,IAAK,CACrC,IAAI4I,EAAI7H,EAAM8H,WAAW7I,GACrB4I,GAAK,IA=
CP7J,EAAE2D,KAAKkG,GAEHA,GAAK,KACP7J,EAAE2D,KAAK,IAAOkG,GAAK,EAAI,IAAW,GAAJ=
A,GAEV,QAAX,MAAJA,GAGD5I,EAAIe,EAAMZ,OAAS,GAA2C,QAAX,MAA1BY,EAAM8H,WAAW7I,E=
AAI,KAO9C4I,EAAI,OAAe,KAFRA,IAEiB,GAAY,KAD7B7H,EAAM8H,aAAa7I,GAE9BjB,EAAE2D=
,KACA,IAAOkG,GAAK,GACZ,IAAQA,GAAK,GAAM,GACnB,IAAQA,GAAK,EAAK,GAClB,IAAW,GAA=
JA,IATT7J,EAAE2D,KAAK,IAAK,IAAK,KAaC,QAAX,MAAJkG,GAEH7J,EAAE2D,KAAK,IAAK,IA=
AK,KAEjB3D,EAAE2D,KAAK,IAAOkG,GAAK,GAAK,IAAQA,GAAK,EAAK,GAAK,IAAW,GAAJA,GAM=
hE,OAAO,IAAIE,WAAW/J,YAaRmJ,EAAaZ,EAAsBvG,GACjD,OAAQuG,GACN,KAAKE,EAAaE,OAC=
hB,IAAMqB,GAAmC,IAAxBhI,EAAMiI,QAAQ,KACzBC,GAAmC,IAAxBlI,EAAMiI,QAAQ,KAC/B,=
GAAID,GAAYE,EAEd,MAAM5B,EACJC,EACA,uBAHkByB,EAAW,IAAM,KAKjC,qCAGN,MAEF,KAAK=
vB,EAAaG,UACVuB,GAAkC,IAAxBnI,EAAMiI,QAAQ,KACxBG,GAAmC,IAAxBpI,EAAMiI,QAAQ,=
KAC/B,GAAIE,GAAWC,EAEb,MAAM9B,EACJC,EACA,uBAHkB4B,EAAU,IAAM,KAGI,kCAG1CnI,E=
AAQA,EAAMmD,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAMnD,IAAIkF,EACJ,IACEA,EAAQC,KAAKtI,=
GACb,MAAOG,GACP,MAAMmG,EAAcC,EAAQ,2BAG9B,IADA,IAAMgC,EAAQ,IAAIR,WAAWM,EAAMj=
J,QAC1BH,EAAI,EAAGA,EAAIoJ,EAAMjJ,OAAQH,IAChCsJ,EAAMtJ,GAAKoJ,EAAMP,WAAW7I,=
GAE9B,OAAOsJ,EAGT,MAKE,SAAYC,GACV,IAAMC,EACN,GANFhK,aAAkB,GAClBA,iBAA6B,SAI=
rBgK,EAAUD,EAAQE,MAAM,oBAE5B,MAAMpC,EACJG,EAAaI,SACb,yDAGJ,IAyByB8B,EAzBnBC=
,EAASH,EAAQ,IAAM,KACf,MAAVG,IACFnK,KAAK8I,QAuBkBoB,EAvBQ,WAuBnB3J,EAvBW4J,G=
AwBNxJ,QAAUuJ,EAAIvJ,QAK5BJ,EAAE6J,UAAU7J,EAAEI,OAASuJ,EAAIvJ,UAAYuJ,GA5B1C=
lK,KAAKqI,YAAcrI,KAAK8I,OACpBqB,EAAOC,UAAU,EAAGD,EAAOxJ,OAAS,UAAUA,QAC9CwJ,=
GAENnK,KAAK+I,KAAOgB,EAAQK,UAAUL,EAAQP,QAAQ,KAAO,IC9JlD,IC8BKa,EAAAA,ED9BCC=
,EAAY,CAEvBC,cAAe,iBAOJC,EACF,UADEA,EAEF,UAFEA,EAGH,SAHGA,EAIF,UAJEA,EAKA,Y=
ALAA,EAMD,WANCA,EAOJ,QAOIC,EAAY,CAEvBC,QAAS,UAETC,OAAQ,SAERC,QAAS,UAETpE,SA=
AU,WAEVqE,MAAO,kBAGOC,EACdC,GAEA,OAAQA,GACN,KAAKP,EACL,KAAKA,EACL,KAAKA,EAC=
H,OAAOC,EAAUC,QACnB,KAAKF,EACH,OAAOC,EAAUE,OACnB,KAAKH,EACH,OAAOC,EAAUG,QAC=
nB,KAAKJ,EACH,OAAOC,EAAUjE,SACnB,KAAKgE,EAEL,QAEE,OAAOC,EAAUI,QCxBXR,EAAAA,=
EAAAA,gCAEVA,qCACAA,qBCnCF,OA2BEW,iBAAA,SACEC,EACAC,EACAlJ,EACAmJ,GAEA,GAAI=
nL,KAAKoL,MACP,MAAMrD,EAAc,iCAItB,GAFA/H,KAAKoL,OAAQ,EACbpL,KAAKqL,KAAKC,KA=
AKJ,EAAQD,GAAK,QACZM,IAAZJ,EACF,IAAK,IAAMvG,KAAOuG,EACZA,EAAQtL,eAAe+E,IACz=
B5E,KAAKqL,KAAKG,iBAAiB5G,EAAKuG,EAAQvG,GAAK6G,YASnD,YALaF,IAATvJ,EACFhC,KA=
AKqL,KAAKK,KAAK1J,GAEfhC,KAAKqL,KAAKK,OAEL1L,KAAK2L,cAMdX,yBAAA,WACE,IAAKhL=
,KAAKoL,MACR,MAAMrD,EAAc,yCAEtB,OAAO/H,KAAK4L,YAMdZ,sBAAA,WACE,IAAKhL,KAAKo=
L,MACR,MAAMrD,EAAc,sCAEtB,IACE,OAAO/H,KAAKqL,KAAKQ,OACjB,MAAOnK,GACP,OAAQ,I=
AOZsJ,4BAAA,WACE,IAAKhL,KAAKoL,MACR,MAAMrD,EAAc,4CAEtB,OAAO/H,KAAKqL,KAAKS,=
cAOnBd,kBAAA,WACEhL,KAAKqL,KAAKU,SAMZf,8BAAA,SAAkBgB,GAChB,OAAOhM,KAAKqL,KA=
AKY,kBAAkBD,IAMrChB,sCAAA,SAA0BkB,GACA,MAApBlM,KAAKqL,KAAKc,QACZnM,KAAKqL,K=
AAKc,OAAOC,iBAAiB,WAAYF,IAOlDlB,yCAAA,SAA6BkB,GACH,MAApBlM,KAAKqL,KAAKc,QAC=
ZnM,KAAKqL,KAAKc,OAAOE,oBAAoB,WAAYH,OA9GrD,aAAA,WAFQlM,YAAiB,EAGvBA,KAAKqL,=
KAAO,IAAIiB,eAChBtM,KAAK4L,WAAavB,EAAUkC,SAC5BvM,KAAK2L,aAAe,IAAIxK,QAAQ,SA=
AAC,GAC9B4C,EAAKqH,KAAKe,iBAAiB,QAAS,WAClCpI,EAAK4H,WAAavB,EAAUmC,MAC5BpL,E=
AAQ4C,KAEVA,EAAKqH,KAAKe,iBAAiB,QAAS,WAClCpI,EAAK4H,WAAavB,EAAUoC,cAC5BrL,E=
AAQ4C,KAEVA,EAAKqH,KAAKe,iBAAiB,OAAQ,WACjChL,EAAQ4C,OChBhB,OACE0I,wBAAA,WAC=
E,OAAO,IAAI1B,MAFf,uBCMgB2B,GAAS/M,GACvB,MAAoB,iBAANA,GAAkBA,aAAaiF,gBAG/B+=
H,GAAahN,GAC3B,OAAOiN,MAAyBjN,aAAakN,cAG/BD,KACd,MAAuB,oBAATC,cAGAC,GACdC,E=
ACAC,EACAC,EACA3L,GAEA,GAAIA,EAAQ0L,EACV,MAAM,IAAItH,EACRG,EAAKkB,iBACL,sBA=
AsBgG,iBAAuBC,kBAGjD,GAAYC,EAAR3L,EACF,MAAM,IAAIoE,EACRG,EAAKkB,iBACL,sBAAs=
BgG,iBAAuBE,wBCnBnCC,SAAQ,aAAA/I,mBAAAA,IAAAgJ,kBACtB,IAAMC,EAhBqB,oBAAhBA,=
YACFA,YAC+B,oBAAtBC,kBACTA,uBAEP,EAYF,QAAoB/B,IAAhB8B,EAA2B,CAE7B,IADA,IAAM=
E,EAAK,IAAIF,EACN7M,EAAI,EAAGA,EAAI4M,EAAKzM,OAAQH,IAC/B+M,EAAGC,OAAOJ,EAAK=
5M,IAEjB,OAAO+M,EAAGJ,UAEV,GAAIM,KACF,OAAO,IAAIX,KAAKM,GAEhB,MAAM,IAAIzH,EA=
CRG,EAAKwB,wBACL,uDCvBR,QAiCEoG,kBAAA,WACE,OAAO1N,KAAK2N,OAGdD,kBAAA,WACE,O=
AAO1N,KAAK4N,OAGdF,mBAAA,SAAMG,EAAmBC,GACvB,GAAIC,GAAkB/N,KAAKgO,OAAQ,CACjC=
,IAAMC,EAAWjO,KAAKgO,MAChBE,GDN0BC,ECMMN,EDNS3D,ECME4D,GDN7BM,ECMQH,GDLvBI,=
YACAD,EAAKC,YAAYF,EAAOjE,GACtBkE,EAAKE,SACPF,EAAKE,SAASH,EAAOjE,GACnBkE,EAA=
KG,MACPH,EAAKG,MAAMJ,EAAOjE,GAEpB,MCDH,OAAe,OAAXgE,EACK,KAEF,IAAIR,GAAQQ,GA=
EnB,IDZgCC,EAAejE,ECiB/C,OAAO,IAAIwD,GALG,IAAIpE,WACftJ,KAAKgO,MAAqBQ,OAC3B=
X,EACAC,EAAUD,IAEc,IAIvBH,WAAP,eAAe,aAAAtJ,mBAAAA,IAAAgJ,kBACb,GAAIK,KAA4B,=
CAC9B,IAAMgB,EAA4CrB,EAAKsB,IACrD,SAACC,GACC,OAAIA,aAAejB,GACViB,EAAIX,MAEJ=
W,IAIb,OAAO,IAAIjB,GAAQkB,GAAW/N,MAAM,KAAM4N,IAE1C,IAAMI,EAA4BzB,EAAKsB,IAC=
rC,SAACC,GACC,OAAIG,GAAcH,GACTrG,EAAeN,EAAaC,IAAK0G,GAAetK,KAG/CsK,EAAgBX,Q=
AI1Be,EAAc,EAClBF,EAAYG,QAAQ,SAAClF,GACnBiF,GAAejF,EAAMmF,aAEvB,IAAMC,EAAS,=
IAAI5F,WAAWyF,GAC1BI,EAAQ,EAMZ,OALAN,EAAYG,QAAQ,SAAClF,GACnB,IAAK,IAAItJ,EA=
AI,EAAGA,EAAIsJ,EAAMnJ,OAAQH,IAChC0O,EAAOC,KAAWrF,EAAMtJ,KAGrB,IAAIkN,GAAQw=
B,GAAQ,IAI/BxB,wBAAA,WACE,OAAO1N,KAAKgO,WA7Fd,YAAY3J,EAAuC+K,GACjD,IAAIC,EA=
Ae,EACfC,EAAmB,GACnBvB,GAAkB1J,IAEpBgL,GADArP,KAAKgO,MAAQ3J,GACSgL,KACtBC,E=
AAYjL,EAAcmB,MACjBnB,aAAgBkL,aACrBH,EACFpP,KAAKgO,MAAQ,IAAI1E,WAAWjF,IAE5Br=
E,KAAKgO,MAAQ,IAAI1E,WAAWjF,EAAK4K,YACjCjP,KAAKgO,MAAMwB,IAAI,IAAIlG,WAAWjF=
,KAEhCgL,EAAOrP,KAAKgO,MAAMrN,QACT0D,aAAgBiF,aACrB8F,EACFpP,KAAKgO,MAAQ3J,G=
AEbrE,KAAKgO,MAAQ,IAAI1E,WAAWjF,EAAK1D,QACjCX,KAAKgO,MAAMwB,IAAInL,IAEjBgL,=
EAAOhL,EAAK1D,QAEdX,KAAK2N,MAAQ0B,EACbrP,KAAK4N,MAAQ0B,ECjCjB,QAOE9P,sBAAIi=
Q,yBAAJ,WACE,OAAOzP,KAAK0P,uCAGdlQ,sBAAIiQ,2BAAJ,WACE,OAA4B,IAArBzP,KAAK2P,=
KAAKhP,wCAGnB8O,2BAAA,WACE,IAAMG,EAASC,mBACf,MAAO,MAAQD,EAAO5P,KAAK8P,QAAU,=
MAAQF,EAAO5P,KAAK2P,OAG3DF,iCAAA,WAEE,MAAO,MADQI,mBACO7P,KAAK8P,QAAU,MAGhCL=
,sBAAP,SAA0BM,GACxB,IAAIC,EToI6BF,ESnIjC,IACEE,EAAiBP,GAASQ,YAAYF,GACtC,MAA=
OrO,GAGP,OAAO,IAAI+N,GAASM,EAAc,IAEpC,GAA4B,KAAxBC,EAAeL,KACjB,OAAOK,EAEP,M=
TyH+BF,ESzHJC,ET0HxB,IAAIpK,EACTG,EAAKa,uBACL,2BAA6BmJ,EAAS,OSxHjCL,eAAP,SA=
AmBxE,GACjB,IAAIiF,EAA4B,KAC1BC,EAAe,sBAOrB,IACMC,EAAU,IAAIC,OAAO,SAAWF,EAD=
vB,YAC8C,KAG7D,SAASG,EAAWC,GAClBA,EAAIb,MAAQzG,mBAAmBsH,EAAIZ,MAiCrC,IA/BA,=
IACMa,EAAsB/K,EAAaf,QAAQ,OAAQ,OAiBnD+L,EAAS,CACb,CAAEC,MAAON,EAASO,QAxBF,CA=
AEb,OAAQ,EAAGH,KAAM,GAwBGiB,WA/BxC,SAAkBL,GAC6B,MAAzCA,EAAIZ,KAAKkB,OAAON,E=
AAIZ,KAAKhP,OAAS,KACpC4P,EAAIb,MAAQa,EAAIb,MAAMnB,MAAM,GAAI,MA8BlC,CACEmC,M=
AlB0B,IAAIL,OAChC,aAAaG,uBAAoCL,sBACjD,KAiBEQ,QAf2B,CAAEb,OAAQ,EAAGH,KAAM,G=
AgB9CiB,WAAYN,GAEd,CACEI,MAduB,IAAIL,OAC7B,iEAAiCF,cACjC,KAaEQ,QAXwB,CAAEb,=
OAAQ,EAAGH,KAAM,GAY3CiB,WAAYN,IAGP9P,EAAI,EAAGA,EAAIiQ,EAAO9P,OAAQH,IAAK,CA=
CtC,IAAMsQ,EAAQL,EAAOjQ,GACfuQ,EAAWD,EAAMJ,MAAMM,KAAK/F,GAClC,GAAI8F,EAAU,C=
AMZb,EAAW,IAAIT,GALKsB,EAASD,EAAMH,QAAQb,QAC3BiB,EAASD,EAAMH,QAAQhB,OAEzB,I=
AGdmB,EAAMF,WAAWV,GACjB,OAGJ,GAAgB,MAAZA,EACF,MTgDqBjF,EShDJA,ETiDd,IAAItF,=
EACTG,EAAKY,YACL,gBAAkBuE,EAAM,MSjDxB,OAAOiF,OAtGT,YAA4BJ,EAAgBH,GAAhB3P,YA=
AA8P,EAC1B9P,KAAK0P,MAAQC,WCVDsB,GACd1Q,GAEA,IAAI2Q,EJG2BtR,EIF/B,IACEsR,EA=
AMC,KAAKC,MAAM7Q,GACjB,MAAOmB,GACP,OAAO,KAET,MJFoB,iBADW9B,EIGLsR,IJFOvR,MA=
AM0R,QAAQzR,GIKtC,KAFAsR,WCsBKI,GAAc3B,GAC5B,IAAM4B,EAAQ5B,EAAK6B,YAAY,IAAK=
7B,EAAKhP,OAAS,GAClD,OAAe,IAAX4Q,EACK5B,EAEAA,EAAKpB,MAAMgD,EAAQ,YCpCdE,GAA=
QC,GACtB,MAAO,WAAWjM,QAAkBiM,WAGtBC,GAAgBC,GAC9B,IAEWhN,EAFLgL,EAASC,mBACXg=
C,EAAY,IAChB,IAAWjN,KAAOgN,EAAQ,CACpBA,EAAO/R,eAAe+E,KAExBiN,EAAYA,GADKjC,E=
AAOhL,GAAO,IAAMgL,EAAOgC,EAAOhN,KAChB,KAMvC,OADAiN,EAAYA,EAAUtD,MAAM,GAAI,Y=
CRlBuD,GAAYC,EAAoBxQ,GAC9C,OAAOA,EAGT,OAKE,SACSyQ,EACPC,EACAC,EACAC,GAHOnS,=
YAAAgS,EAKPhS,KAAKiS,MAAQA,GAASD,EACtBhS,KAAKkS,WAAaA,EAClBlS,KAAKmS,MAAQA,=
GAASL,IAOtBM,GAA6B,cAUjBC,KACd,GAAID,GACF,OAAOA,GAET,IAAME,EAAqB,GAC3BA,EAA=
SpP,KAAK,IAAIqP,GAAgB,WAClCD,EAASpP,KAAK,IAAIqP,GAAgB,eAClCD,EAASpP,KAAK,IA=
AIqP,GAAgB,mBAClCD,EAASpP,KAAK,IAAIqP,GAAgB,OAAQ,YAAY,IAQtD,IAAMC,EAAc,IAAI=
D,GAAgB,QACxCC,EAAYL,MAPZ,SACEM,EACAC,GAEA,OArBG/F,GADmB+F,EAsBLA,IArBQA,EA=
AS/R,OAAS,EACpC+R,EAEApB,GAAcoB,IAsBvBJ,EAASpP,KAAKsP,GAeRG,EAAc,IAAIJ,GAAg=
B,QAaxC,OAZAI,EAAYR,MAXZ,SACEM,EACApD,GAEA,YAAa9D,IAAT8D,EACKuD,OAAOvD,GAEP=
A,GAKXiD,EAASpP,KAAKyP,GACdL,EAASpP,KAAK,IAAIqP,GAAgB,gBAClCD,EAASpP,KAAK,I=
AAIqP,GAAgB,YAClCD,EAASpP,KAAK,IAAIqP,GAAgB,UAAW,MAAM,IACnDD,EAASpP,KAAK,IA=
AIqP,GAAgB,eAAgB,MAAM,IACxDD,EAASpP,KAAK,IAAIqP,GAAgB,qBAAsB,MAAM,IAC9DD,EA=
ASpP,KAAK,IAAIqP,GAAgB,kBAAmB,MAAM,IAC3DD,EAASpP,KAAK,IAAIqP,GAAgB,kBAAmB,M=
AAM,IAC3DD,EAASpP,KAAK,IAAIqP,GAAgB,cAAe,MAAM,IACvDD,EAASpP,KAAK,IAAIqP,GAA=
gB,WAAY,kBAAkB,IAChEH,GAAYE,WAIEO,GAAOd,EAAoBxN,GAOzC/E,OAAOsT,eAAef,EAAU,M=
AAO,CAAEgB,IANzC,WACE,IAAMjD,EAAiBiC,EAAiB,OAClCpC,EAAeoC,EAAmB,SAClCxB,EAA=
M,IAAId,GAASK,EAAQH,GACjC,OAAOpL,EAAQyO,qBAAqBzC,eAwBxB0C,GACd1O,EACA2O,EAC=
AZ,GAEMpB,EAAMD,GAAiBiC,GAC7B,GAAY,OAARhC,EACF,OAAO,KAGT,gBA5BA3M,EACA4O,EA=
CAb,GAKA,IAHA,IAAMP,EAAqB,CAC3BvM,KAAmB,QACb4N,EAAMd,EAAS3R,OACZH,EAAI,EAAG=
A,EAAI4S,EAAK5S,IAAK,CAC5B,IAAM6S,EAAUf,EAAS9R,GACzBuR,EAASsB,EAAQpB,OAAUoB=
,EAA6BlB,MACtDJ,EACAoB,EAASE,EAAQrB,SAIrB,OADAa,GAAOd,EAAUxN,GACVwN,EAaAuB,=
CAAa/O,EADH2M,EACsBoB,YAoCzBiB,GACdxB,EACAO,GAMA,IAJA,IAAMa,EAEF,GACEC,EAAM=
d,EAAS3R,OACZH,EAAI,EAAGA,EAAI4S,EAAK5S,IAAK,CAC5B,IAAM6S,EAAUf,EAAS9R,GACr=
B6S,EAAQnB,WACViB,EAASE,EAAQrB,QAAUD,EAASsB,EAAQpB,QAGhD,OAAOd,KAAKqC,UAAUL=
,GC9JxB,IAAMM,GAAe,WACfC,GAAY,iBAiCFC,GACdpP,EACAuL,EACAoD,GAEMhC,EAAM0C,GA=
AsBV,GAClC,GAAY,OAARhC,EACF,OAAO,KAGT,OAzCF,SACE3M,EACAuL,EACAqD,GAEA,IAAMU=
,EAAyB,CAC7BC,SAAU,GACVC,MAAO,GACPC,cAAeb,EAAwB,eAEzC,GAAIA,EAASM,IACX,IAAm=
B,QAAAQ,EAAAd,EAASM,IAATrP,WAAAA,IAAwB,CAAtC,IACG8P,OAAgCxP,QAAQ,MAAO,IAC/C=
yP,EAAY5P,EAAQyO,qBACxB,IAAIvD,GAASK,EAAQoE,IAEvBL,EAAWC,SAAS5Q,KAAKiR,GAI7=
B,GAAIhB,EAASO,IACX,IAAmB,QAAAU,EAAAjB,EAASO,IAATW,WAAAA,IAAqB,CAAnC,IAAMC,=
OACHH,EAAY5P,EAAQyO,qBACxB,IAAIvD,GAASK,EAAQwE,EAAW,OAElCT,EAAWE,MAAM7Q,KAA=
KiR,GAG1B,OAAON,EAaAU,CAAoBhQ,EAASuL,EADlBoB,GChEpB,OAiBE,SACSjG,EACAC,EAQA=
sJ,EACAC,GAVAzU,SAAAiL,EACAjL,YAAAkL,EAQAlL,aAAAwU,EACAxU,aAAAyU,EA3BTzU,eA=
AuB,GACvBA,aAAmB,GACnBA,UAA0C,KAE1CA,kBAEW,KAMXA,sBAA8D,KAC9DA,kBAAyB,CAAC,=
KAC1BA,0BAAiC,aCanB0U,GAAaC,GAC3B,IAAKA,EACH,MAAMpN,aAIMqN,GACdrQ,EACA+N,GA=
OA,OALA,SAAiBuC,EAAYC,GAG3B,OADAJ,GAA0B,QADpB3C,EAAWkB,GAAmB1O,EAASuQ,EAAMx=
C,KAE5CP,YAKKgD,GACdxQ,EACAuL,GAOA,OALA,SAAiB+E,EAAYC,GAG3B,OADAJ,GAA4B,QAD=
tBb,EAAaF,GAAmBpP,EAASuL,EAAQgF,KAEhDjB,YAKKmB,GACdzQ,EACA+N,GAOA,OALA,SAAi=
BuC,EAAYC,GAC3B,IAAM/C,EAAWkB,GAAmB1O,EAASuQ,EAAMxC,GAEnD,OADAoC,GAA0B,OAAb=
3C,YHqEfA,EACAmB,GAGA,GAAY,QADNhC,EAAMD,GAAiBiC,IAE3B,OAAO,KAET,IAAKvG,GAAS=
uE,EAAoB,gBAGhC,OAAO,KAGT,GAAsB,KADhB+D,EAAiB/D,EAAoB,gBAChCvQ,OACT,OAAO,KA=
ET,IAAMiP,EAASC,mBAaf,OAZmBoF,EAAOC,MAAM,KACRxG,IAAI,SAACyG,GAC3B,IAAMrF,EA=
AiBiC,EAAiB,OAClCpC,EAAeoC,EAAmB,SAOxC,OALaN,GADG,MAAQ7B,EAAOE,GAAU,MAAQF,E=
AAOD,IAEpCgC,GAAgB,CAClCyD,IAAK,QACLD,YAIQ,GGjGHE,CAA8BtD,EAAsB+C,aAK/CQ,GA=
CdpF,GAuBA,OArBA,SACE2E,EACAU,GAEA,IhBiB0BzF,EgBfxB0F,EADsB,MAApBX,EAAIY,Yh=
B8BH,IAAI9P,EAAqBG,EAAKM,gBAFnC,+FgBzB0B,MAApByO,EAAIY,ahBagB3F,EgBZCI,EAAS=
J,OhBa/B,IAAInK,EACTG,EAAKK,eACL,qBACE2J,EACA,2EgBf0B,MAApB+E,EAAIY,ahB2Ba9=
F,EgB1BGO,EAASP,KhB2BhC,IAAIhK,EACTG,EAAKO,aACL,4CAA8CsJ,EAAO,OgB3BtC4F,EAK=
f,OADAC,EAAO3P,eAAiB0P,EAAI1P,eACrB2P,YAKKE,GACdxF,GAEA,IAAMyF,EAASL,GAAmBp=
F,GAalC,OAXA,SACE2E,EACAU,GAEA,IAAIC,EAASG,EAAOd,EAAKU,GAKzB,OAJwB,MAApBV,E=
AAIY,chBlCmB9F,EgBmCDO,EAASP,KAAjC6F,EhBlCG,IAAI7P,EACTG,EAAKE,iBACL,WAAa2J=
,EAAO,sBgBkCpB6F,EAAO3P,eAAiB0P,EAAI1P,eACrB2P,YAKKI,GACdrR,EACA2L,EACAoC,G=
AEA,IACMrH,EAAMwG,GADIvB,EAAS2F,iBAGnBpB,EAAUlQ,EAAQuR,sBAClBC,EAAc,IAAIC,G=
ACtB/K,EAHa,MAKb2J,GAAgBrQ,EAAS+N,GACzBmC,GAGF,OADAsB,EAAYE,aAAeP,GAAmBxF,G=
ACvC6F,WA8GOG,GACdhG,EACA9B,EACA2D,GAEMoE,EAAgB3W,OAAOa,OAAO,GAAI0R,GAMxC,O=
ALAoE,EAAwB,SAAIjG,EAASP,KACrCwG,EAAoB,KAAI/H,EAAKiB,OACxB8G,EAA2B,cAC9BA,E=
AA2B,aAlB7B/H,EAkB6DA,GAnB7D2D,EAmBuD,OAfxCA,EAAsB,aAClC3D,GAAQA,EAAK5I,QAC=
d,6BAeK2Q,WAMOC,GACd7R,EACA2L,EACAoC,EACAlE,EACA2D,GAEA,IAAML,EAAUxB,EAASmG=
,sBACnBlL,EAAsC,CAC1CmL,yBAA0B,aAU5B,IAAMC,EAPN,WAEE,IADA,IAAIC,EAAM,GACDhW=
,EAAI,EAAGA,EAAI,EAAGA,IACrBgW,GAAYC,KAAKC,SAASjL,WAAW8C,MAAM,GAE7C,OAAOiI,=
EAEQG,GACjBxL,EAAQ,gBAAkB,+BAAiCoL,EAC3D,IAAMK,EAAYV,GAAmBhG,EAAU9B,EAAM2D,=
GAE/C8E,EACJ,KACAN,EACA,4DAJqBhD,GAAiBqD,EAAWtE,GAOjD,SACAiE,EACA,qBAEAK,EA=
AuB,YACvB,WACIE,EAAe,SAAWP,EAAW,KACrCvU,EAAO0L,GAAQP,QAAQ0J,EAAazI,EAAM0I,G=
AChD,GAAa,OAAT9U,EACF,MAAMyF,IAEFsP,EAAuB,CAAEzR,KAAMsR,EAAoB,UACnD3L,EAAMw=
G,GAAQC,GAEd+C,EAAUlQ,EAAQyS,mBAClBjB,EAAc,IAAIC,GACtB/K,EAHa,OAKb2J,GAAgBr=
Q,EAAS+N,GACzBmC,GAMF,OAJAsB,EAAYgB,UAAYA,EACxBhB,EAAY5K,QAAUA,EACtB4K,EAAY=
/T,KAAOA,EAAKiV,aACxBlB,EAAYE,aAAeX,GAAmBpF,GACvC6F,EAUT,OAIE,SACSmB,EACAC,=
EACPC,EACArF,GAHO/R,aAAAkX,EACAlX,WAAAmX,EAIPnX,KAAKoX,YAAcA,EACnBpX,KAAK+R=
,SAAWA,GAAY,eAIhBsF,GAAmBxC,EAAYyC,GAC7C,IAAIzL,EAAwB,KAC5B,IACEA,EAASgJ,EA=
AI5I,kBAAkB,wBAC/B,MAAOvK,GACPgT,IAAa,GAIf,OADAA,KAAe7I,IAA6C,KADtCyL,GAAW,=
CAAC,WACK9N,QAAQqC,IACxCA,WAGO0L,GACdhT,EACA2L,EACAoC,EACAlE,EACA2D,GAEA,IA=
AML,EAAUxB,EAASmG,sBACnBmB,EAAoBtB,GAAmBhG,EAAU9B,EAAM2D,GACvDgF,EAAuB,CAAE=
zR,KAAMkS,EAA4B,UAC3DvM,EAAMwG,GAAQC,GAEdvG,EAAU,CACdmL,yBAA0B,YAC1BmB,wBAA=
yB,QACzBC,sCAAuCtJ,EAAKiB,OAC5CsI,oCAAqCH,EAA+B,YACpEI,eAAgB,mCAEZ5V,EAAOuR=
,GAAiBiE,EAAmBlF,GAC3CmC,EAAUlQ,EAAQyS,mBAalBjB,EAAc,IAAIC,GAAY/K,EAtBrB,OA=
Wf,SAAiB4J,GAEf,IAAI5J,EADJoM,GAAmBxC,GAEnB,IACE5J,EAAM4J,EAAI5I,kBAAkB,qBA=
C5B,MAAOvK,GACPgT,IAAa,GAGf,OADAA,GAAa/H,GAAS1B,IACfA,GAEiDwJ,GAK1D,OAJAsB,=
EAAYgB,UAAYA,EACxBhB,EAAY5K,QAAUA,EACtB4K,EAAY/T,KAAOA,EACnB+T,EAAYE,aAAeX,=
GAAmBpF,GACvC6F,WAMO8B,GACdtT,EACA2L,EACAjF,EACAmD,GAuBMqG,EAAUlQ,EAAQyS,mB=
AClBjB,EAAc,IAAIC,GAAY/K,EAFrB,OAlBf,SAAiB4J,GACf,IAAMhJ,EAASwL,GAAmBxC,EAA=
K,CAAC,SAAU,UAC9CiD,EAA4B,KAChC,IACEA,EAAajD,EAAI5I,kBAAkB,+BACnC,MAAOvK,GA=
CPgT,IAAa,GAGVoD,GAEHpD,IAAa,GAGf,IAAMrF,EAAOuD,OAAOkF,GAEpB,OADApD,IAAcqD,=
MAAM1I,IACb,IAAI2I,GAAsB3I,EAAMjB,EAAKiB,OAAmB,UAAXxD,IAII4I,GAG1D,OAFAsB,E=
AAY5K,QAvBI,CAAEsM,wBAAyB,SAwB3C1B,EAAYE,aAAeX,GAAmBpF,GACvC6F,WAkBOkC,GACd=
/H,EACA3L,EACA0G,EACAmD,EACA8J,EACA5F,EACAzG,EACAsM,GAIA,IAAMC,EAAU,IAAIJ,G=
AAsB,EAAG,GAQ7C,GAPInM,GACFuM,EAAQlB,QAAUrL,EAAOqL,QACzBkB,EAAQjB,MAAQtL,EA=
AOsL,QAEvBiB,EAAQlB,QAAU,EAClBkB,EAAQjB,MAAQ/I,EAAKiB,QAEnBjB,EAAKiB,SAAW+I=
,EAAQjB,MAC1B,MhBpRK,IAAIxR,EACTG,EAAKgB,uBACL,wEgBoRF,IAAMuR,EAAYD,EAAQjB,=
MAAQiB,EAAQlB,QACtCoB,EAAgBD,EACJ,EAAZH,IACFI,EAAgB7B,KAAK8B,IAAID,EAAeJ,IA=
EpCrK,EAAYuK,EAAQlB,QACpBpJ,EAAUD,EAAYyK,EAGtBnN,EAAU,CACdsM,wBAFAa,IAAkBD,=
EAAY,mBAAqB,SAGnDG,uBAAwBJ,EAAQlB,SAE5BlV,EAAOoM,EAAKG,MAAMV,EAAWC,GACnC,GA=
Aa,OAAT9L,EACF,MAAMyF,IAyBFgN,EAAUlQ,EAAQyS,mBAClBjB,EAAc,IAAIC,GAAY/K,EAFr=
B,OArBf,SAAiB4J,EAAYC,GAK3B,IAAM2D,EAAepB,GAAmBxC,EAAK,CAAC,SAAU,UAClD6D,EA=
AaN,EAAQlB,QAAUoB,EAC/BjJ,EAAOjB,EAAKiB,OAGhB0C,EADmB,UAAjB0G,EACS7D,GAAgBr=
Q,EAAS+N,EAAzBsC,CAAmCC,EAAKC,GAExC,KAEb,OAAO,IAAIkD,GACTU,EACArJ,EACiB,UAA=
jBoJ,EACA1G,IAKsD0C,GAK1D,OAJAsB,EAAY5K,QAAUA,EACtB4K,EAAY/T,KAAOA,EAAKiV,a=
ACxBlB,EAAYoC,iBAAmBA,GAAoB,KACnDpC,EAAYE,aAAeX,GAAmBpF,GACvC6F,ECnfT,OAKE,=
SACE4C,EACAC,EACAC,GXnBkB,mBWsBAF,GAA4B,MAATC,GAA6B,MAAZC,GAEpD7Y,KAAKyB,KA=
AOkX,EACZ3Y,KAAK4Y,MAAQA,EACb5Y,KAAK6Y,SAAWA,IAEVC,EAAWH,EAKjB3Y,KAAKyB,KAA=
OqX,EAASrX,KACrBzB,KAAK4Y,MAAQE,EAASF,MACtB5Y,KAAK6Y,SAAWC,EAASD,oBCrCfE,GA=
AM9W,GACpB,OAAO,eAAC,aAAAmC,mBAAAA,IAAA4U,kBAEN7X,QAAQC,UAAUU,KAAK,WAAM,OAA=
AG,eAAK+W,MC+BtC,QAgFUC,mCAAR,WAAA,WACQC,EAAalZ,KAAKmZ,aACxB,OAAO,SAAAC,GAA=
U,OAAApV,EAAKqV,gBAAgBH,EAAaE,KAG7CH,gCAAR,SAA2B7K,GACzB,OAAqB,OAAdA,EAAKiB=
,QAGN4J,oBAAR,WACMjZ,KAAKsZ,SAAW9O,QAIEe,IAAlBvL,KAAKuZ,WAGLvZ,KAAKwZ,gBACi=
BjO,IAApBvL,KAAKyZ,WACPzZ,KAAK0Z,mBAED1Z,KAAK2Z,mBACP3Z,KAAK4Z,eAED5Z,KAAK6=
Z,qBAEP7Z,KAAK8Z,iBAEL9Z,KAAK+Z,kBAKX/Z,KAAKga,mBAIDf,2BAAR,SAAsBgB,GAAtB,W=
AEEja,KAAKka,KAAKC,QAAQC,eAAetY,KAAK,SAAAuY,GACpC,OAAQrW,EAAKsV,QACX,KAAK9O=
,EACHyP,EAASI,GACT,MACF,KAAK7P,EACHxG,EAAKsW,YAAY9P,GACjB,MACF,KAAKA,EACHxG=
,EAAKsW,YAAY9P,OASjByO,8BAAR,WAAA,WACEjZ,KAAKua,cAAc,SAAAF,GACjB,IAAMtE,EAA=
cwB,GAClBvT,EAAKkW,KAAKC,QACVnW,EAAKkW,KAAKM,UACVxW,EAAKyW,UACLzW,EAAK0W,MA=
CL1W,EAAKyO,WAEDkI,EAAgB3W,EAAKkW,KAAKC,QAAQS,YACtC7E,EACAsE,IAEFrW,EAAKuV,=
SAAWoB,GACFE,aAAa/Y,KAAK,SAACmJ,GAC/BjH,EAAKuV,cAAWhO,EAChBvH,EAAKyV,WAAaxO=
,EAClBjH,EAAK2V,oBAAqB,EAC1B3V,EAAK8W,wBACJ9W,EAAK+W,kBAIJ9B,0BAAR,WAAA,WAE=
QhO,EAAMjL,KAAKyZ,WACjBzZ,KAAKua,cAAc,SAAAF,GACjB,IAAMtE,EAAc8B,GAClB7T,EAA=
KkW,KAAKC,QACVnW,EAAKkW,KAAKM,UACVvP,EACAjH,EAAK0W,OAEDM,EAAgBhX,EAAKkW,KAA=
KC,QAAQS,YACtC7E,EACAsE,IAEFrW,EAAKuV,SAAWyB,GACFH,aAAa/Y,KAAK,SAAA+J,GAE9B=
7H,EAAKuV,cAAWhO,EAChBvH,EAAKqV,gBAAgBxN,EAAOqL,SAC5BlT,EAAK2V,oBAAqB,EACtB=
9N,EAAOuL,YACTpT,EAAK6V,sBAAuB,GAE9B7V,EAAK8W,wBACJ9W,EAAK+W,kBAIJ9B,6BAAR,=
WAAA,WACQf,EHiNyC,OGjNClY,KAAKib,iBAC/CpP,EAAS,IAAImM,GACjBhY,KAAKmZ,aACLnZ=
,KAAK0a,MAAMrL,QAIPpE,EAAMjL,KAAKyZ,WACjBzZ,KAAKua,cAAc,SAAAF,GACjB,IAAItE,=
EACJ,IACEA,EAAckC,GACZjU,EAAKkW,KAAKM,UACVxW,EAAKkW,KAAKC,QACVlP,EACAjH,EAA=
K0W,MACLxC,EACAlU,EAAKyW,UACL5O,EACA7H,EAAKkX,yBAEP,MAAOxZ,GAGP,OAFAsC,EAAK=
mX,OAASzZ,OACdsC,EAAKsW,YAAY9P,GAGb4Q,EAAgBpX,EAAKkW,KAAKC,QAAQS,YACtC7E,EA=
CAsE,IAEFrW,EAAKuV,SAAW6B,GACFP,aAAa/Y,KAAK,SAACuZ,GAC/BrX,EAAKsX,sBACLtX,E=
AAKuV,cAAWhO,EAChBvH,EAAKqV,gBAAgBgC,EAAUnE,SAC3BmE,EAAUjE,WACZpT,EAAKyO,UA=
AY4I,EAAUtJ,SAC3B/N,EAAKsW,YAAY9P,IAEjBxG,EAAK8W,wBAEN9W,EAAK+W,kBAIJ9B,iCA=
AR,WHoKiD,OGnKGjZ,KAAKib,iBAGrC,WAChBjb,KAAKib,kBAAoB,IAIrBhC,4BAAR,WAAA,WA=
CEjZ,KAAKua,cAAc,SAAAF,GACjB,IAAMtE,EAAcH,GAClB5R,EAAKkW,KAAKC,QACVnW,EAAKk=
W,KAAKM,UACVxW,EAAKyW,WAEDc,EAAkBvX,EAAKkW,KAAKC,QAAQS,YACxC7E,EACAsE,IAEFr=
W,EAAKuV,SAAWgC,GACAV,aAAa/Y,KAAK,SAAAiQ,GAChC/N,EAAKuV,cAAWhO,EAChBvH,EAAK=
yO,UAAYV,EACjB/N,EAAKsW,YAAY9P,IAChBxG,EAAKwX,0BAIJvC,4BAAR,WAAA,WACEjZ,KAA=
Kua,cAAc,SAAAF,GACjB,IAAMtE,EAAcK,GAClBpS,EAAKkW,KAAKC,QACVnW,EAAKkW,KAAKM,=
UACVxW,EAAKyW,UACLzW,EAAK0W,MACL1W,EAAKyO,WAEDgJ,EAAmBzX,EAAKkW,KAAKC,QAAQS=
,YACzC7E,EACAsE,IAEFrW,EAAKuV,SAAWkC,GACCZ,aAAa/Y,KAAK,SAAAiQ,GACjC/N,EAAKu=
V,cAAWhO,EAChBvH,EAAKyO,UAAYV,EACjB/N,EAAKqV,gBAAgBrV,EAAK0W,MAAMrL,QAChCrL=
,EAAKsW,YAAY9P,IAChBxG,EAAK+W,kBAIJ9B,6BAAR,SAAwByC,GACtB,IAAMC,EAAM3b,KAAK=
mZ,aACjBnZ,KAAKmZ,aAAeuC,EAKhB1b,KAAKmZ,eAAiBwC,GACxB3b,KAAK4b,oBAID3C,yBAA=
R,SAAoBlO,GAClB,GAAI/K,KAAKsZ,SAAWvO,EAGpB,OAAQA,GACN,KAAKP,EASL,KAAKA,EAGH=
xK,KAAKsZ,OAASvO,OACQQ,IAAlBvL,KAAKuZ,UACPvZ,KAAKuZ,SAASsC,SAEhB,MACF,KAAKr=
R,EAIH,IAAMsR,EAAY9b,KAAKsZ,SAAW9O,EAClCxK,KAAKsZ,OAASvO,EACV+Q,IACF9b,KAAK=
4b,mBACL5b,KAAK+b,UAEP,MACF,KAAKvR,EAGHxK,KAAKsZ,OAASvO,EACd/K,KAAK4b,mBACL=
,MACF,KAAKpR,EAIHxK,KAAKmb,OAAS3T,IACdxH,KAAKsZ,OAASvO,EACd/K,KAAK4b,mBACL,=
MACF,KAAKpR,EAQL,KAAKA,EAKHxK,KAAKsZ,OAASvO,EACd/K,KAAK4b,qBAMH3C,kCAAR,WAC=
E,OAAQjZ,KAAKsZ,QACX,KAAK9O,EACHxK,KAAKsa,YAAY9P,GACjB,MACF,KAAKA,EACHxK,KA=
AKsa,YAAY9P,GACjB,MACF,KAAKA,EACHxK,KAAK+b,WAQXvc,sBAAIyZ,6BAAJ,WACE,IAAM+C=
,EAAgBlR,EAA+B9K,KAAKsZ,QAC1D,MAAO,CACL2C,iBAAkBjc,KAAKmZ,aACvB+C,WAAYlc,KA=
AK0a,MAAMrL,OACvBtE,MAAOiR,EACPjK,SAAU/R,KAAKyS,UACf0J,KAAMnc,KACNoc,IAAKpc=
,KAAKka,uCAQdjB,gBAAA,SACEzT,EACAmT,EAGAC,EACAyD,GANF,WAQQvD,EAAW,IAAIwD,GA=
AS3D,EAAgBC,EAAOyD,GAErD,OADArc,KAAKuc,aAAazD,GACX,WACL9U,EAAKwY,gBAAgB1D,K=
AUzBG,kBAAA,SACEwD,EACAC,GAIA,OAAO1c,KAAK2c,SAAS7a,KACnB2a,EACAC,IAOJzD,mBA=
AA,SACEyD,GAEA,OAAO1c,KAAK8B,KAAK,KAAM4a,IAMjBzD,0BAAR,SAAqBH,GACnB9Y,KAAK4=
c,WAAW1Z,KAAK4V,GACrB9Y,KAAK6c,gBAAgB/D,IAMfG,6BAAR,SAAwBH,GAChBtY,EAAIR,KA=
AK4c,WAAWpT,QAAQsP,IACvB,IAAPtY,GACFR,KAAK4c,WAAWE,OAAOtc,EAAG,IAItByY,8BAA=
R,WAAA,WACEjZ,KAAK+c,iBACa/c,KAAK4c,WAAWrO,QACxBS,QAAQ,SAAA8J,GAChB9U,EAAK6=
Y,gBAAgB/D,MAIjBG,4BAAR,WACE,QAAsB1N,IAAlBvL,KAAKgd,SAAwB,CAC/B,IAAIC,GAAY,=
EAChB,OAAQnS,EAA+B9K,KAAKsZ,SAC1C,KAAK7O,EAAUG,QACbsS,GAASld,KAAKgd,SAASG,K=
AAK,KAAMnd,KAAKod,UAAvCF,GACA,MACF,KAAKzS,EAAUjE,SACf,KAAKiE,EAAUI,MAEbqS,G=
ADeld,KAAKqd,QACJF,KAAK,KAAMnd,KAAKmb,QAAhC+B,GACA,MACF,QACED,GAAY,EAGZA,IA=
CFjd,KAAKgd,cAAWzR,EAChBvL,KAAKqd,aAAU9R,KAKb0N,6BAAR,SAAwBH,GAEtB,OADsBhO,=
EAA+B9K,KAAKsZ,SAExD,KAAK7O,EAAUC,QACf,KAAKD,EAAUE,OACTmO,EAASrX,MACXyb,GAA=
SpE,EAASrX,KAAK0b,KAAKrE,EAAU9Y,KAAKod,UAA3CF,GAEF,MACF,KAAKzS,EAAUG,QACTkO=
,EAASD,UACXqE,GAASpE,EAASD,SAASsE,KAAKrE,GAAhCoE,GAEF,MACF,KAAKzS,EAAUjE,SA=
Cf,KAAKiE,EAAUI,MACTiO,EAASF,OACXsE,GACEpE,EAASF,MAAMuE,KAAKrE,EAAU9Y,KAAKm=
b,QADrC+B,GAIF,MACF,QAEMpE,EAASF,OACXsE,GACEpE,EAASF,MAAMuE,KAAKrE,EAAU9Y,K=
AAKmb,QADrC+B,KAWRjE,oBAAA,WACE,IAAMqE,EACJtd,KAAKsZ,SAAW9O,GAChBxK,KAAKsZ,=
SAAW9O,EAIlB,OAHI8S,GACFtd,KAAKsa,YAAY9P,GAEZ8S,GAOTrE,mBAAA,WACE,IAAMqE,EA=
AQtd,KAAKsZ,SAAW9O,EAI9B,OAHI8S,GACFtd,KAAKsa,YAAY9P,GAEZ8S,GAQTrE,oBAAA,WA=
CE,IAAMqE,EACJtd,KAAKsZ,SAAW9O,GAChBxK,KAAKsZ,SAAW9O,EAIlB,OAHI8S,GACFtd,KA=
AKsa,YAAY9P,GAEZ8S,OAzgBT,YACElB,EACAhO,EACA2D,GAHF,wBAGEA,QA3BF/R,kBAAuB,E=
ACfA,yBAA8B,EAC9BA,2BAAgC,EAChCA,gBAAyD,GAMzDA,iBAAgCuL,EAChCvL,qBAAsBuL,EA=
CtBvL,mBAA8BuL,EAC9BvL,sBAA2B,EAG3BA,mBAA8CuL,EAC9CvL,kBAA+CuL,EAarDvL,KAAK=
ka,KAAOkC,EACZpc,KAAK0a,MAAQtM,EACbpO,KAAKyS,UAAYV,EACjB/R,KAAKya,UAAYpI,KA=
CjBrS,KAAKwZ,WAAaxZ,KAAKud,mBAAmBvd,KAAK0a,OAC/C1a,KAAKsZ,OAAS9O,EACdxK,KAA=
K+a,cAAgB,SAAAnC,GACnB5U,EAAKuV,cAAWhO,EAChBvH,EAAKiX,iBAAmB,EACpBrC,EAAM4E=
,WAAW1X,EAAKU,WACxBxC,EAAK2V,oBAAqB,EAC1B3V,EAAK8W,yBAEL9W,EAAKmX,OAASvC,EA=
Cd5U,EAAKsW,YAAY9P,KAGrBxK,KAAKwb,sBAAwB,SAAA5C,GAC3B5U,EAAKuV,cAAWhO,EACZq=
N,EAAM4E,WAAW1X,EAAKU,UACxBxC,EAAK8W,wBAEL9W,EAAKmX,OAASvC,EACd5U,EAAKsW,YA=
AY9P,KAGrBxK,KAAK2c,SAAW,IAAIxb,QAAQ,SAACC,EAASC,GACpC2C,EAAKgZ,SAAW5b,EACh=
B4C,EAAKqZ,QAAUhc,EACf2C,EAAK+X,WAKP/b,KAAK2c,SAAS7a,KAAK,KAAM,cChF7B,QAmBE=
2b,sBAAA,WACE,MAAO,QAAUzd,KAAKwa,UAAU1K,OAAS,IAAM9P,KAAKwa,UAAU7K,MAGtD8N,o=
BAAV,SACElZ,EACA2L,GAEA,OAAO,IAAIuN,GAAiBlZ,EAAS2L,IAOvC1Q,sBAAIie,yBAAJ,WA=
CE,IAAMvN,EAAW,IAAIT,GAASzP,KAAKwa,UAAU1K,OAAQ,IACrD,OAAO9P,KAAK0d,OAAO1d,K=
AAK2d,SAAUzN,oCAGpC1Q,sBAAIie,2BAAJ,WACE,OAAOzd,KAAKwa,UAAU1K,wCAGxBtQ,sBAA=
Iie,6BAAJ,WACE,OAAOzd,KAAKwa,UAAU7K,sCAGxBnQ,sBAAIie,yBAAJ,WACE,OAAOnM,GAAc=
tR,KAAKwa,UAAU7K,uCAGtCnQ,sBAAIie,4BAAJ,WACE,OAAOzd,KAAK2d,0CAGdne,sBAAIie,=
2BAAJ,WACE,IAAMG,WTtFajO,GACrB,GAAoB,IAAhBA,EAAKhP,OACP,OAAO,KAET,IAAM4Q,EA=
AQ5B,EAAK6B,YAAY,KAC/B,OAAe,IAAXD,EACK,GAEO5B,EAAKpB,MAAM,EAAGgD,GS8EZsM,CA=
AO7d,KAAKwa,UAAU7K,MACtC,GAAgB,OAAZiO,EACF,OAAO,KAEH1N,EAAW,IAAIT,GAASzP,KA=
AKwa,UAAU1K,OAAQ8N,GACrD,OAAO,IAAIH,GAAiBzd,KAAK2d,SAAUzN,oCAG7CuN,0BAAA,SA=
AanY,GACX,GAA4B,KAAxBtF,KAAKwa,UAAU7K,KACjB,MAAM/H,EAAqBtC,QA5D/B,YAAoBqY,E=
AA0BzN,GAA1BlQ,cAAA2d,EAEhB3d,KAAKwa,UADHtK,aAAoBT,GACLS,EAEAT,GAASQ,YAAYC,=
YA+J5B4N,GAAQ1B,GACtB,IAAM2B,EAA0B,CAC9BjK,SAAU,GACVC,MAAO,IAET,OAUF,SAAeiK=
,EACb5B,EACA2B,EACAE,mGAMiB,SAAMC,GAAK9B,EAJH,CAEvB6B,6BAEIE,EAAW/J,UACjBH,=
EAAA8J,EAAYjK,UAAS5Q,aAAQib,EAASrK,WACtCO,EAAA0J,EAAYhK,OAAM7Q,aAAQib,EAASp=
K,OACL,MAA1BoK,EAASnK,uBACLgK,EAAc5B,EAAK2B,EAAaI,EAASnK,uBAA/CI,yCAvBK4J,C=
AAc5B,EAAK2B,GAAajc,KAAK,WAAM,OAAAic,aAiD9BG,GACpB9B,EACAgC,mGAYkB,OAVH,MAA=
XA,GACgC,iBAAvBA,EAAQC,YACjBtR,GACE,qBACgB,EACA,IAChBqR,EAAQC,eAIUjC,EAAIjC=
,QAAQC,uBASpC,OATMC,EAAYpG,SACZlR,EAAKqb,GAAW,GJrItB7Z,EIuIE6X,EAAIjC,QJtIN=
jK,EIuIEkM,EAAI5B,UJtIN8D,EIuIkB,IJtIlBL,EIuIElb,EAAGkb,UJtILI,EIuIEtb,EAAG=
sb,WJrICtH,EAAuB,GACzB7G,EAASqO,OACXxH,EAAkB,OAAI,GAEtBA,EAAkB,OAAI7G,EAASP=
,KAAO,IAEpC2O,GAAgC,EAAnBA,EAAU3d,SACzBoW,EAAqB,UAAIuH,GAEvBL,IACFlH,EAAqB,=
UAAIkH,GAEvBI,IACFtH,EAAsB,WAAIsH,GAGtBpT,EAAMwG,GADIvB,EAASmG,uBAGnB5B,EAA=
UlQ,EAAQuR,uBAClBC,EAAc,IAAIC,GACtB/K,EAHa,MAKb8J,GAAYxQ,EAAS2L,EAASJ,QAC9B=
2E,IAEUsC,UAAYA,EACxBhB,EAAYE,aAAeX,GAAmBpF,MI6GvCkM,EAAIjC,QAAQS,YJ5GZ7E,E=
I4GqCsE,GAAWQ,kBJ7IvDtW,EACA2L,EACAoO,EACAL,EACAI,eIyKoBG,GACpBpC,EACArK,iG=
AGkB,OADlBqK,EAAIqC,aAAa,qBACOrC,EAAIjC,QAAQC,uBAOpC,OAPMC,EAAYpG,SJ1HlB1P,=
EI4HE6X,EAAIjC,QJ3HNjK,EI4HEkM,EAAI5B,UJ3HNzI,EI4HEA,EJ3HFO,EI4HED,KJzHIpH,=
EAAMwG,GADIvB,EAAS2F,iBAGnB7T,EAAOuR,GAAiBxB,EAAUO,GAElCmC,EAAUlQ,EAAQuR,uB=
AClBC,EAAc,IAAIC,GACtB/K,EALa,QAOb2J,GAAgBrQ,EAAS+N,GACzBmC,IAEUtJ,QARI,CAA=
EyM,eAAgB,mCASlC7B,EAAY/T,KAAOA,EACnB+T,EAAYE,aAAeP,GAAmBxF,MI8GvCkM,EAAIjC=
,QAAQS,YJ7GZ7E,EI6GqCsE,GAAWQ,kBJjIvDtW,EACA2L,EACA6B,EACAO,EAGMrH,eIoIcyT,=
GAAetC,iGAEjB,OADlBA,EAAIqC,aAAa,qBACOrC,EAAIjC,QAAQC,uBAMpC,OANMC,EAAYpG,S=
J/JlB1P,EIiKE6X,EAAIjC,QJhKNjK,EIiKEkM,EAAI5B,UJhKNlI,EIiKED,KJ9JIpH,EAAMwG=
,GADIvB,EAAS2F,iBAGnBpB,EAAUlQ,EAAQuR,uBAClBC,EAAc,IAAIC,GACtB/K,EAHa,MAKb+=
J,GAAmBzQ,EAAS+N,GAC5BmC,IAEUwB,aAAeP,GAAmBxF,MIuJvCkM,EAAIjC,QACRS,YJvJI7E=
,EIuJqBsE,GACzBQ,aACA/Y,KAAK,SAAAmJ,GACJ,GAAY,OAARA,EACF,MpBpJC,IAAItF,EACT=
G,EAAKiB,gBACL,mDoBoJE,OAAOkE,SJ5KX1G,EACA2L,EACAoC,EAGMrH,eIiLc0T,GAAavC,i=
GAEf,OADlBA,EAAIqC,aAAa,mBACOrC,EAAIjC,QAAQC,uBAEpC,OAFMC,EAAYpG,SJ7IlB1P,E=
I8IyC6X,EAAIjC,QJ7I7CjK,EI6IsDkM,EAAI5B,UJ1IpDvP,EAAMwG,GADIvB,EAAS2F,iBAGn=
BpB,EAAUlQ,EAAQuR,uBAGlBC,EAAc,IAAIC,GAAY/K,EAJrB,SAGf,SAAiB2T,EAAaC,KAC4Bp=
K,IAC9CqK,aAAe,CAAC,IAAK,KACjC/I,EAAYE,aAAeP,GAAmBxF,MIoIvCkM,EAAIjC,QAAQS,=
YJnIZ7E,EImIqCsE,GAAWQ,kBJ/IvDtW,EACA2L,eI2Jc6O,GACd3C,EACA4C,GAEA,IT3WoBrP=
,ES2WdiO,GT3WcjO,ES2WEyM,EAAI5B,UAAU7K,KT1W9BsP,GAD4BD,ES2WQA,GTzWvC9J,MAAM=
,KACNgK,OAAO,SAAAC,GAAa,OAAmB,EAAnBA,EAAUxe,SAC9Bye,KAAK,KACY,IAAhBzP,EAAKh=
P,OACAse,EAEAtP,EAAO,IAAMsP,GSoWhB/O,EAAW,IAAIT,GAAS2M,EAAI5B,UAAU1K,OAAQ8N=
,GACpD,OAAO,IAAIH,GAAiBrB,EAAIjC,QAASjK,GC1X3C,QAOE1Q,sBAAI6f,qCAAJ,WACE,OA=
AOrf,KAAKsf,UAAUrD,kDAExBzc,sBAAI6f,6BAAJ,WACE,OAAOrf,KAAKsf,UAAUvN,0CAExBv=
S,sBAAI6f,0BAAJ,WACE,OAAOrf,KAAKsf,UAAUvU,uCAExBvL,sBAAI6f,+BAAJ,WACE,OAAOr=
f,KAAKsf,UAAUpD,gDAhBxB,YACWoD,EACAnD,EACAC,GAFApc,eAAAsf,EACAtf,UAAAmc,EAC=
Anc,SAAAoc,ECKb,QAME5c,sBAAI+f,6BAAJ,WACE,OAAO,IAAIF,GACTrf,KAAKsf,UAAUlC,S=
ACfpd,KACAA,KAAKka,uCASTqF,kBAAA,SACE9C,EACAC,GAFF,WAIE,OAAO1c,KAAKsf,UAAUx=
d,KAAK,SAAAsb,GACzB,GAAIX,EACF,OAAOA,EACL,IAAI4C,GAAyBjC,EAAUpZ,EAAMA,EAAKk=
W,QAGrDwC,IAGL6C,gBAAA,SACE/Z,EACAmT,EAIAC,EACAyD,GAPF,WASMmD,OAGuCjU,EAoB3=
C,OAnBMoN,IAEF6G,EAD4B,mBAAnB7G,EACe,SAAC8G,GACvB,OAAA9G,EACE,IAAI0G,GAAyBI=
,EAAczb,EAAMA,EAAKkW,QAGlC,CACtBzY,KAAQkX,EAAelX,KACnB,SAACge,GACC,OAAA9G,E=
AAelX,KACb,IAAI4d,GAAyBI,EAAczb,EAAMA,EAAKkW,aAE1D3O,EACJsN,SAAUF,EAAeE,eAA=
YtN,EACrCqN,MAAOD,EAAeC,YAASrN,IAI9BvL,KAAKsf,UAAUI,GACpBla,EACAga,EACA5G,Q=
AASrN,EACT8Q,QAAa9Q,QAnEjB,YACmB+T,EACApF,GADAla,eAAAsf,EACAtf,UAAAka,EAWnB=
la,YAASA,KAAKsf,UAAUzD,OAAOsB,KAAKnd,KAAKsf,WACzCtf,WAAQA,KAAKsf,UAAUK,MAAM=
xC,KAAKnd,KAAKsf,WACvCtf,WAAQA,KAAKsf,UAAUM,MAAMzC,KAAKnd,KAAKsf,WACvCtf,YA=
ASA,KAAKsf,UAAUO,OAAO1C,KAAKnd,KAAKsf,WC3B3C,QAME9f,sBAAIsgB,6BAAJ,WAAA,WAC=
E,OAAO9f,KAAKsf,UAAUxL,SAASpF,IAC7B,SAAA0N,GAAO,OAAA,IAAI2D,GAAgB3D,EAAKpY,=
EAAK2Z,6CAGzCne,sBAAIsgB,0BAAJ,WAAA,WACE,OAAO9f,KAAKsf,UAAUvL,MAAMrF,IAC1B,=
SAAA0N,GAAO,OAAA,IAAI2D,GAAgB3D,EAAKpY,EAAK2Z,6CAGzCne,sBAAIsgB,kCAAJ,WACE,=
OAAO9f,KAAKsf,UAAUtL,eAAiB,0CAhBzC,YACmBsL,EACA3B,GADA3d,eAAAsf,EACAtf,cAAA=
2d,ECcrB,QAMEne,sBAAIugB,yBAAJ,WACE,OAAO/f,KAAKsf,UAAUha,sCAGxB9F,sBAAIugB,=
2BAAJ,WACE,OAAO/f,KAAKsf,UAAUxP,wCAGxBtQ,sBAAIugB,6BAAJ,WACE,OAAO/f,KAAKsf,=
UAAU5M,0CAGxBqN,sBAAA,WACE,OAAO/f,KAAKsf,UAAU7T,YAQxBsU,mBAAA,SAAMf,GAEJ,OA=
AO,IAAIe,GADOhB,GAAS/e,KAAKsf,UAAWN,GACLhf,KAAKma,UAG7C3a,sBAAIugB,yBAAJ,WA=
CE,OAAO,IAAIA,GAAgB/f,KAAKsf,UAAUU,KAAMhgB,KAAKma,0CAOvD3a,sBAAIugB,2BAAJ,W=
ACE,IAAM5L,EAAYnU,KAAKsf,UAAUzB,OACjC,OAAiB,MAAb1J,EACK,KAEF,IAAI4L,GAAgB5L=
,EAAWnU,KAAKma,0CAS7C4F,iBAAA,SACE1b,EACA0N,GAGA,OADA/R,KAAKye,aAAa,OACX,IA=
AIc,IJyEbnD,EIxEyBpc,KAAKsf,UJyE9Bjb,EIzEyCA,EJ0EzC0N,EI1E+CA,EJ4E/CqK,EAAI=
qC,aAAa,wBACV,IAAIxF,GAAWmD,EAAK,IAAI1O,GAAQrJ,GAAO0N,II5E1C/R,UJuEJoc,GI5D=
A2D,uBAAA,SACExe,EACAuG,EACAiK,gBADAjK,EAAuBE,EAAaC,KAGpCjI,KAAKye,aAAa,aAC=
Zpa,EAAOiE,EAAeR,EAAQvG,GAC9B4U,EAAgB/V,KAAK2R,GAI3B,OAHoC,MAAhCoE,EAA2B,aA=
AiC,MAApB9R,EAAKgE,cAC/C8N,EAA2B,YAAI9R,EAAKgE,aAE/B,IAAIkX,GACT,IAAItG,GAC=
FjZ,KAAKsf,UACL,IAAI5R,GAAQrJ,EAAKA,MAAM,GACvB8R,GAEFnW,OAqBJ+f,qBAAA,WAAA,=
WACE,OAAOjC,GAAQ9d,KAAKsf,WAAWxd,KAC7B,SAAAuB,GAAK,OAAA,IAAIyc,GAAiBzc,EAAG=
W,EAAKmW,YAuBtC4F,kBAAA,SAAK3B,GAAL,WACE,OAAOF,GAAKle,KAAKsf,UAAWlB,GAAStc,=
KACnC,SAAAuB,GAAK,OAAA,IAAIyc,GAAiBzc,EAAGW,EAAKmW,YAStC4F,yBAAA,WACE,gBJ4H=
8B3D,mGAEd,OADlBA,EAAIqC,aAAa,kBACOrC,EAAIjC,QAAQC,uBAMpC,OANMC,EAAYpG,SACZ=
8B,EAAckK,GAClB7D,EAAIjC,QACJiC,EAAI5B,UACJnI,SAEK+J,EAAIjC,QAAQS,YAAY7E,EA=
AasE,GAAWQ,mBIpI9CjF,CAAY5V,KAAKsf,YAY1BS,4BAAA,SAAehO,GACb,OAAOyM,GAAexe,K=
AAKsf,UAAWvN,IAOxCgO,4BAAA,WACE,OAAOrB,GAAe1e,KAAKsf,YAO7BS,oBAAA,WAEE,OADA=
/f,KAAKye,aAAa,UACXE,GAAa3e,KAAKsf,YAGnBS,0BAAR,SAAqBza,GACnB,GAAsC,KAAlCtF=
,KAAKsf,UAAU9E,UAAU7K,KAC3B,MAAM/H,EAAqBtC,QArL/B,YACmBga,EACVnF,GADUna,eAA=
Asf,EACVtf,aAAAma,ECpBX,QAQE+F,wBAAA,WACE,OAAOlgB,KAAKmgB,UAIdD,oBAAA,SAAOE=
,SAVP,YAAYxH,GACV5Y,KAAKmgB,SAAWhf,QAAQE,OAAUuX,GCuBtC,QA2DUyH,oBAAR,WACE,I=
C7EFpe,EAEAgY,EACAxF,EAII6L,EAIAC,EACAC,EACAC,EAKAC,EA0CAC,EDiBIC,EAAO5gB,K=
AoDb,SAAS6gB,EACPC,EACAjV,GAEA,IA4BY0J,EA5BNnU,EAAUwf,EAAKG,SACf1f,EAASuf,E=
AAKI,QACdnM,EAAMhJ,EAAOgJ,IACnB,GAAIhJ,EAAOoV,eACT,IACE,IAAMrf,EAASgf,EAAKM=
,UAAUrM,EAAKA,EAAIsM,wBpBtJlC,IoBuJcvf,EACjBR,EAAQQ,GAERR,IAEF,MAAOM,GACPL,=
EAAOK,QAGG,OAARmT,IACIU,EAAMhO,KACR1B,eAAiBgP,EAAIsM,kBACrBP,EAAKQ,eACP/f,E=
AAOuf,EAAKQ,eAAevM,EAAKU,IAEhClU,EAAOkU,IAGL1J,EAAOrE,SAETnG,EADMkU,GAAMqL,=
EAAKS,WAAa1Z,EAAeH,MAI7CnG,EADMkU,E1BnDT,IAAI5P,EACTG,EAAKQ,qBACL,6D2BjGF,S=
AASkB,IACP,OAAuB,IAAhBiZ,EAIT,SAASa,QAAgB,aAAAld,mBAAAA,IAAAgJ,kBAClBsT,IAC=
HA,GAAoB,EACpBzG,EAASpZ,MAAM,KAAMuM,IAIzB,SAASmU,EAAcC,GACrBjB,EAAYkB,WAAW,=
WACrBlB,EAAY,KACZte,EAAEuS,EAAShN,MACVga,GAGL,SAAShN,EAAQkN,OAAkB,aAAAtd,mB=
AAAA,IAAAgJ,oBAC7BsT,IAGAgB,GAIala,KAAcgZ,EAH7Bc,EAAgB1gB,WAAhB0gB,KAAqB,KA=
AMI,GAAYtU,KAQrCkT,EAAc,KAEhBA,GAAe,GASjBiB,EANoB,IAAhBd,GACFA,EAAc,EACD,GA=
EgC,KAA/BH,EAAc7J,KAAKC,aAMrC,SAASiL,EAAKC,GACRjB,IAGJA,GAAU,EACND,IAGc,OAA=
dH,GACGqB,IACHnB,EAAc,GAEhBoB,aAAatB,GACbgB,EAAc,IAETK,IACHnB,EAAc,KDyFdzgB=
,KAAK8hB,UACPjB,EAAY,EAAO,IAAIkB,IAAiB,EAAO,MAAM,IAErD/hB,KAAKgiB,YC1KT/f,E=
D+EE,SACEggB,EACAza,GASA,SAAS0a,EAAiBC,GACxB,IAAM/I,EAAS+I,EAAc/I,OACvBjC,E=
AAQgL,EAAcC,iBAAmBD,EAAchL,OAAS,EACvC,OAA3ByJ,EAAKyB,mBACPzB,EAAKyB,kBAAkBj=
J,EAAQjC,GAX/B3P,EACFya,GAAgB,EAAO,IAAIF,IAAiB,EAAO,MAAM,KAGrDlN,EAAM+L,EAA=
K0B,MAAMC,cACvB3B,EAAK4B,YAAc3N,EASY,OAA3B+L,EAAKyB,mBACPxN,EAAI4N,0BAA0BP,=
GAIhCrN,EACGnJ,KAAKkV,EAAK8B,KAAM9B,EAAK+B,QAAS/B,EAAKgC,MAAOhC,EAAKiC,UAC/=
C/gB,KAAK,SAAC+S,GAC0B,OAA3B+L,EAAKyB,mBACPxN,EAAIiO,6BAA6BZ,GAEnCtB,EAAK4B=
,YAAc,KAEnB,IAAMO,EAAYlO,EAAImO,iBAAmB3Y,EAAUkC,SAC7CV,EAASgJ,EAAIY,YACdsN,=
IAAanC,EAAKqC,mBAAmBpX,IAQpCqX,GAAsD,IAAxCtC,EAAKuC,cAAc3Z,QAAQqC,GAC/CoW,G=
AAgB,EAAM,IAAIF,GAAiBmB,EAAarO,MARhDuO,EAAcvO,EAAImO,iBAAmB3Y,EAAUmC,MACrDy=
V,GACE,EACA,IAAIF,IAAiB,EAAO,KAAMqB,SClH9CnJ,EDwKkD4G,ECvKlDpM,EDuK+DzU,KAA=
KqjB,SC/JhE9C,EAAiB,KAiDjBI,EA1CAD,EANAF,IALAF,EAAc,GA2ElBiB,EArEId,EAAc,GA=
sElBgB,WAAW,WAETE,EADAnB,GAAa,IAEZ/L,GACIkN,IDwFPtB,wBAAA,WACE,OAAOrgB,KAAK=
mgB,UAIdE,oBAAA,SAAOiD,GACLtjB,KAAK8hB,WAAY,EACjB9hB,KAAKqhB,WAAaiC,IAAa,EA=
CP,OAApBtjB,KAAKgiB,aCrFXuB,EDsFiBvjB,KAAKgiB,aCtFnB,GDwFwB,OAArBhiB,KAAKwi=
B,aACPxiB,KAAKwiB,YAAYzW,SAIbsU,gCAAR,SAA2BxU,GAGzB,IAAM2X,EAA8B,KAAV3X,GAA=
iBA,EAAS,IAO9C4X,GAAwD,IANtC,CAEtB,IAEA,KAEuCja,QAAQqC,GAC3C6X,GAC4C,IAAhD1=
jB,KAAK2jB,sBAAsBna,QAAQqC,GACrC,OAAO2X,GAAqBC,GAAoBC,OApKlD,YACEzY,EACAC,E=
ACAC,EACAnJ,EACA8c,EACA8E,EACA3J,EACA4J,EAGApP,EACA0D,EACA2L,GAbF,WAhBQ9jB,=
iBAA4B,KAC5BA,gBAAgC,KAIhCA,gBAAqB,EACrBA,iBAAsB,EAyB5BA,KAAK0iB,KAAOzX,EAC=
ZjL,KAAK2iB,QAAUzX,EACflL,KAAK6iB,SAAW1X,EAChBnL,KAAK4iB,MAAQ5gB,EACbhC,KAA=
KmjB,cAAgBrE,EAAavQ,QAClCvO,KAAK2jB,sBAAwBC,EAAqBrV,QAClDvO,KAAKkhB,UAAYjH,=
EACjBja,KAAKohB,eAAiByC,EACtB7jB,KAAKqiB,kBAAoBlK,EACzBnY,KAAKqjB,SAAW5O,EA=
ChBzU,KAAKsiB,MAAQwB,EACb9jB,KAAKmgB,SAAW,IAAIhf,QAAQ,SAACC,EAASC,GACpC2C,E=
AAK+c,SAAW3f,EAChB4C,EAAKgd,QAAU3f,EACf2C,EAAK+f,WA+IX,OAME,SACS9C,EACApM,E=
ACPrN,GAFOxH,oBAAAihB,EACAjhB,SAAA6U,EAGP7U,KAAKwH,WAAaA,YEzNNwc,GAAMrU,GAC=
pB,MAAO,kBAAkBsU,KAAKtU,GAchC,SAASuU,GACP9H,EACAzM,GAEA,GAAIyM,aAAe+H,GAAgB=
,CACjC,IAAM5f,EAAU6X,EAChB,GAAuB,MAAnB7X,EAAQ6f,QACV,M5BsIG,IAAIze,EACTG,EA=
AKc,kBACL,6CAEElB,EACA,yC4BzIIyO,EAAY,IAAIsJ,GAAiBlZ,EAASA,EAAQ6f,SACxD,OAA=
Y,MAARzU,EACKuU,GAAY/P,EAAWxE,GAEvBwE,EAIT,QAAa5I,IAAToE,EAMF,OAAOyM,EALP,G=
AAIzM,EAAK0U,SAAS,MAChB,MAAM3c,EAAgB,oCAExB,OAAOqX,GAAS3C,EAAKzM,YA0BXyM,GA=
CdkI,EACAC,GAEA,GAAIA,GAAaP,GAAMO,GAAY,CACjC,GAAID,aAAwBH,GAC1B,OA5DG,IAAI1=
G,GA4DW6G,EAAcC,GAEhC,MAAM7c,EACJ,4EAIJ,OAAOwc,GAAYI,EAAcC,GAiBrC,QAwCE/kB,=
sBAAI2kB,uCAAJ,WACE,OAAOnkB,KAAKwkB,yBAGd,SAAuBC,GACrB1X,GACE,OACe,EACC6F,O=
AAO8R,kBACvBD,GAEFzkB,KAAKwkB,oBAAsBC,mCAG7BjlB,sBAAI2kB,0CAAJ,WACE,OAAOnkB=
,KAAK2kB,4BAGd,SAA0BF,GACxB1X,GACE,OACe,EACC6F,OAAO8R,kBACvBD,GAEFzkB,KAAK2=
kB,uBAAyBF,mCAG1BN,0BAAN,gHACQS,EAAO5kB,KAAK6kB,cAAcC,aAAa,CAAEC,UAAU,QAE/B=
H,EAAKI,yBAC7B,GAAkB,QADZC,EAAYhR,UAEhB,SAAOgR,EAAUC,8BAGrB,SAAO,YAOTf,qBAA=
A,WAIE,OAHAnkB,KAAKmlB,UAAW,EAChBnlB,KAAKolB,UAAUpW,QAAQ,SAAAqW,GAAW,OAAAA,=
EAAQxJ,WAC1C7b,KAAKolB,UAAUE,QACRnkB,QAAQC,WAOjB+iB,kCAAA,SAAqB5T,GACnB,OAA=
O,IAAIkN,GAAiBzd,KAAMuQ,IAQpC4T,yBAAA,SACEpO,EACAsE,GAFF,WAIE,GAAKra,KAAKml=
B,SAgBR,OAAO,IAAIjF,GAAYvY,KAfvB,IF6CJoO,EACAwP,EACAlL,EACAyJ,EACA0B,EAEM3T=
,EEnDI4T,GF6CV1P,EE5CMA,EF6CNwP,EE5CMvlB,KAAK0lB,OF6CXrL,EE5CMA,EF6CNyJ,EE5=
CM9jB,KAAK2lB,MF6CXH,EE5CMxlB,KAAK4lB,iBF8CL/T,EAAYgU,GAAyB9P,EAAYgB,WACjD9=
L,EAAM8K,EAAY9K,IAAM4G,EACxB1G,EAAU3L,OAAOa,OAAO,GAAI0V,EAAY5K,SAfhBA,EAgBd=
A,GAhBgCoa,EAgBvBA,KAdvBpa,EAAQ,oBAAsBoa,GAlBhCpa,EAiCeA,EA9BG,QAFlBkP,EAgC=
wBA,IA9BqB,EAAnBA,EAAU1Z,SAClCwK,EAAuB,cAAI,YAAckP,GAM3CmL,EAwB2BA,EAATra,E=
AtBV,8BACN,UAAYqa,MAAAA,EAAAA,EAAmB,cAsB1B,IAAInF,GACTpV,EACA8K,EAAY7K,OACZ=
C,EACA4K,EAAY/T,KACZ+T,EAAY+I,aACZ/I,EAAY6N,qBACZ7N,EAAYvB,QACZuB,EAAYE,aAC=
ZF,EAAYtB,QACZsB,EAAYoC,iBACZ2L,IEvDE,OANA9jB,KAAKolB,UAAUU,IAAIL,GAEnBA,EA=
AQ5K,aAAa/Y,KACnB,WAAM,OAAAkC,EAAKohB,UAAUW,OAAON,IAC5B,WAAM,OAAAzhB,EAAKoh=
B,UAAUW,OAAON,KAEvBA,OA9GX,YACWO,EAIAnB,EAIAc,EAIAM,EAIAL,GAhBA5lB,SAAAgmB,=
EAIAhmB,mBAAA6kB,EAIA7kB,WAAA2lB,EAIA3lB,UAAAimB,EAIAjmB,sBAAA4lB,EAxBF5lB,=
aAA2B,KACjBA,YAAwB,KAEnCA,eAAoB,EAuB1BA,KAAK2kB,uB7B7HuC,K6B8H5C3kB,KAAKwkB=
,oB7BvHoC,I6BwHzCxkB,KAAKolB,UAAY,IAAIc,IAEnBlmB,KAAKokB,QADK,MAAR6B,EACaxW=
,GAAS0W,mBAAmBF,GA7C3B,OADdlW,EAAeqW,OADAA,EAiDYpmB,KAAKgmB,IAAI5H,gBAhDrBg=
I,EAASC,IAErB,KAEF5W,GAAS0W,mBAAmBpW,GC9FrC,QAYEvQ,sBAAI8mB,0CAAJ,WACE,OAAO=
tmB,KAAKsf,UAAUxJ,uDAGxBtW,sBAAI8mB,uCAAJ,WACE,OAAOtmB,KAAKsf,UAAUtI,oDAOxB=
sP,iBAAA,SAAI3W,GACF,GAAIqU,GAAMrU,GACR,MAAMjI,EACJ,sEAGJ,OAAO,IAAIqY,GAAgB=
3D,GAAIpc,KAAKsf,UAAW3P,GAAO3P,OAOxDsmB,wBAAA,SAAWrb,GACT,IAAK+Y,GAAM/Y,GAC=
T,MAAMvD,EACJ,6EAGJ,IACE+H,GAASQ,YAAYhF,GACrB,MAAOvJ,GACP,MAAMgG,EACJ,kEAGJ=
,OAAO,IAAIqY,GAAgB3D,GAAIpc,KAAKsf,UAAWrU,GAAMjL,OAGvDsmB,mCAAA,SAAsB7B,GAC=
pBzkB,KAAKsf,UAAUtI,mBAAqByN,GAGtC6B,sCAAA,SAAyB7B,GACvBzkB,KAAKsf,UAAUxJ,s=
BAAwB2O,OAzDzC,YAAmBuB,EAA2B1G,GAA9C,WAAmBtf,SAAAgmB,EAA2BhmB,eAAAsf,EAE9Ct=
f,cAAW,CAIT+lB,OAAQ,WACN,OAAO/hB,EAAKsb,UAAUiH,gBC4BIC,GACxBC,GAzBR,SAASC,G=
ACPC,EACA1b,GAIA,IAAM+a,EAAMW,EAAUC,YAAY,OAAO9B,eACnC+B,EAAeF,EAAUC,YAAY,iB=
Ac3C,OAVmD,IAAIN,GACrDN,EACA,IAAI7B,GACF6B,EACAa,EACA,IAAIna,EACJzB,EACA6b,=
UAASC,cAMiBP,GAkBhBM,UAjBRL,GAAmB,CAEvBhc,YACAH,YACAtC,eACAgf,QAAS7C,GACT8C=
,UAAWlH,IAEbyG,GAASU,SAASC,kBAChB,IAAIniB,EApCa,UAoCW0hB,aACzBU,gBAAgBX,IAC=
hBY,sBAAqB,IAG1Bb,GAASc"}</t></t></t></void></string></firebaseauthinternal=
name></request<unknown></t></t></t></t></t></t></t></t></t></t></t></t></t>=
</t></t></t></void></string></metadata></metadata></types.listresult></type=
s.listresult></uploadtasksnapshot></uploadtasksnapshotcompat></uploadtasksn=
apshotcompat></unknown></void></string></metadata></metadata></metadata></l=
istresult></void></listresult></uploadresult></uploadresult></object-path><=
/bucket></object-path></bucket></api-version></object-path></bucket></uploa=
dtasksnapshot></uploadtasksnapshot></uploadtasksnapshot></t></t></t></never=
></u></u></u></u></u></u></uploadtasksnapshot></uploadtasksnapshot></upload=
tasksnapshot></unknown></storageobserver<uploadtasksnapshot></t></t></t></t=
></t></t></t></t></t></t></t></t></t></resumableuploadstatus></resumableupl=
oadstatus></string></metadata></void></metadata></metadata></string></listr=
esult></metadata></t></metadata></unknown></string></string></string></stri=
ng></string></string></string></string></number></number></string></string>=
</string></string></string></number></mapping<string></t></t></blob></strin=
g></string></t></xhrio></xhrio></xhrio></data></mediatype></t></t></k></err=
orcode></string,></errorcode></err></err,></body></html>
------MultipartBoundary--6g5r6xjBFQwLI980K2Ewru0F67F6YyE6GuQOlEITTx------
